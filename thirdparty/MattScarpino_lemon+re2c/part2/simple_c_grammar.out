State 0:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= * direct_declarator
          declarator ::= * pointer direct_declarator
          declaration ::= * declaration_specifiers SEMICOLON
          declaration ::= * declaration_specifiers init_declarator_list SEMICOLON
          function_definition ::= * declaration_specifiers declarator declaration_list code_block
          function_definition ::= * declaration_specifiers declarator code_block
          function_definition ::= * declarator declaration_list code_block
          function_definition ::= * declarator code_block
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          external_declaration_list ::= * external_declaration
          external_declaration_list ::= * external_declaration_list external_declaration
          program ::= * external_declaration_list END_TOKEN

                          STAR shift  100
                          NAME shift  349
                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                        LPAREN shift  99
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
                    declarator shift  61
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
                       pointer shift  107
                   declaration shift  284
       storage_class_specifier shift  77
        declaration_specifiers shift  92
             direct_declarator shift  126
           function_definition shift  275
          external_declaration shift  289
     external_declaration_list shift  54
                       program accept

State 1:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          statement_list ::= * statement
          statement_list ::= * statement_list statement
          declaration_list ::= * declaration
          declaration_list ::= * declaration_list declaration
          code_block ::= * LBRACE RBRACE
          code_block ::= LBRACE * RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= LBRACE * statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= LBRACE * declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE
          code_block ::= LBRACE * declaration_list statement_list RBRACE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          declaration ::= * declaration_specifiers SEMICOLON
          declaration ::= * declaration_specifiers init_declarator_list SEMICOLON

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                          ENUM shift  129
                        LBRACE shift  1
                        RBRACE shift  253
                        STRUCT shift  336
                         UNION shift  335
                     SEMICOLON shift  294
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                unary_operator shift  87
                enum_specifier shift  300
               struct_or_union shift  118
        conditional_expression shift  215
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  331
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303
                statement_list shift  6
              declaration_list shift  2
                   declaration shift  244
       storage_class_specifier shift  77
        declaration_specifiers shift  91

State 2:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          statement_list ::= * statement
          statement_list ::= * statement_list statement
          declaration_list ::= declaration_list * declaration
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= LBRACE declaration_list * RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE
          code_block ::= LBRACE declaration_list * statement_list RBRACE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          declaration ::= * declaration_specifiers SEMICOLON
          declaration ::= * declaration_specifiers init_declarator_list SEMICOLON

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                          ENUM shift  129
                        LBRACE shift  1
                        RBRACE shift  338
                        STRUCT shift  336
                         UNION shift  335
                     SEMICOLON shift  294
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                unary_operator shift  87
                enum_specifier shift  300
               struct_or_union shift  118
        conditional_expression shift  215
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  331
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303
                statement_list shift  5
                   declaration shift  246
       storage_class_specifier shift  77
        declaration_specifiers shift  91

State 3:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          specifier_qualifier_list ::= * type_specifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_specifier
          specifier_qualifier_list ::= * type_qualifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_qualifier
          type_name ::= * specifier_qualifier_list
          type_name ::= * specifier_qualifier_list abstract_declarator
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_expression ::= SIZEOF LPAREN * type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
                enum_specifier shift  300
               struct_or_union shift  118
        conditional_expression shift  215
      specifier_qualifier_list shift  70
     struct_or_union_specifier shift  308
                type_specifier shift  291
                type_qualifier shift  368
                     type_name shift  179
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  154
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 4:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          specifier_qualifier_list ::= * type_specifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_specifier
          specifier_qualifier_list ::= * type_qualifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_qualifier
          type_name ::= * specifier_qualifier_list
          type_name ::= * specifier_qualifier_list abstract_declarator
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          cast_expression ::= LPAREN * type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
                enum_specifier shift  300
               struct_or_union shift  118
        conditional_expression shift  215
      specifier_qualifier_list shift  70
     struct_or_union_specifier shift  308
                type_specifier shift  291
                type_qualifier shift  368
                     type_name shift  182
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  154
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 5:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          statement_list ::= statement_list * statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE
          code_block ::= LBRACE declaration_list statement_list * RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                        RBRACE shift  337
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  333
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 6:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          statement_list ::= statement_list * statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= LBRACE statement_list * RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                        RBRACE shift  334
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  333
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 7:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN * statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  283
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 8:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= IF LPAREN expression RPAREN * statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  288
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 9:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          selection_statement ::= SWITCH LPAREN expression RPAREN * statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  293
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 10:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= WHILE LPAREN expression RPAREN * statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  267
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 11:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= DO * statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  189
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 12:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN SEMICOLON expression SEMICOLON RPAREN * statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  323
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 13:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN expression SEMICOLON SEMICOLON RPAREN * statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  315
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 14:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN SEMICOLON SEMICOLON RPAREN * statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  329
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 15:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= NAME COLON * statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  330
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 16:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR LPAREN SEMICOLON SEMICOLON expression RPAREN * statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  327
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 17:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN * statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  321
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 18:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN * statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  309
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 19:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN * statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  313
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 20:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= CASE constant_expression COLON * statement
          labeled_statement ::= * DEFAULT COLON statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  298
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 21:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= * GOTO NAME SEMICOLON
          jump_statement ::= * CONTINUE SEMICOLON
          jump_statement ::= * BREAK SEMICOLON
          jump_statement ::= * RETURN SEMICOLON
          jump_statement ::= * RETURN expression SEMICOLON
          iteration_statement ::= * WHILE LPAREN expression RPAREN statement
          iteration_statement ::= * DO statement WHILE LPAREN expression RPAREN SEMICOLON
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          expression_statement ::= * expression SEMICOLON
          expression_statement ::= * SEMICOLON
          labeled_statement ::= * NAME COLON statement
          labeled_statement ::= * CASE constant_expression COLON statement
          labeled_statement ::= * DEFAULT COLON statement
          labeled_statement ::= DEFAULT COLON * statement
          statement ::= * labeled_statement
          statement ::= * code_block
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  183
                        LBRACE shift  1
                     SEMICOLON shift  294
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                          GOTO shift  184
                      CONTINUE shift  186
                         BREAK shift  187
                        RETURN shift  29
                         WHILE shift  188
                            DO shift  11
                           FOR shift  192
                            IF shift  193
                        SWITCH shift  194
                          CASE shift  47
                       DEFAULT shift  196
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  128
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                jump_statement shift  307
           iteration_statement shift  306
                     statement shift  301
           selection_statement shift  305
          expression_statement shift  304
             labeled_statement shift  302
                    code_block shift  303

State 22:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          initializer ::= * assignment_expression
          initializer ::= * LBRACE initializer_list RBRACE
          initializer ::= LBRACE * initializer_list RBRACE
          initializer ::= * LBRACE initializer_list COMMA RBRACE
          initializer ::= LBRACE * initializer_list COMMA RBRACE
          initializer_list ::= * initializer
          initializer_list ::= * initializer_list COMMA initializer

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                        LBRACE shift  22
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  342
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                   initializer shift  361
              initializer_list shift  117

State 23:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          initializer ::= * assignment_expression
          initializer ::= * LBRACE initializer_list RBRACE
          initializer ::= * LBRACE initializer_list COMMA RBRACE
          initializer ::= LBRACE initializer_list COMMA * RBRACE
          initializer_list ::= initializer_list COMMA * initializer

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                        LBRACE shift  22
                        RBRACE shift  352
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  342
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                   initializer shift  358

State 24:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          initializer ::= * assignment_expression
          initializer ::= * LBRACE initializer_list RBRACE
          initializer ::= * LBRACE initializer_list COMMA RBRACE
          init_declarator ::= declarator EQ * initializer

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                        LBRACE shift  22
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  342
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119
                   initializer shift  364

State 25:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= FOR LPAREN SEMICOLON SEMICOLON * RPAREN statement
          iteration_statement ::= FOR LPAREN SEMICOLON SEMICOLON * expression RPAREN statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        RPAREN shift  14
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  152
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 26:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= FOR LPAREN * SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN * expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN * SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN * expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN * SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR LPAREN * expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR LPAREN * SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR LPAREN * expression SEMICOLON expression SEMICOLON expression RPAREN statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                     SEMICOLON shift  32
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  133
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 27:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression SEMICOLON * SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN expression SEMICOLON * expression SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN expression SEMICOLON * SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR LPAREN expression SEMICOLON * expression SEMICOLON expression RPAREN statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                     SEMICOLON shift  31
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  137
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 28:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression SEMICOLON expression SEMICOLON * RPAREN statement
          iteration_statement ::= FOR LPAREN expression SEMICOLON expression SEMICOLON * expression RPAREN statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        RPAREN shift  18
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  138
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 29:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          jump_statement ::= RETURN * SEMICOLON
          jump_statement ::= RETURN * expression SEMICOLON

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                     SEMICOLON shift  262
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  131
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 30:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          argument_expression_list ::= * assignment_expression
          argument_expression_list ::= * argument_expression_list COMMA assignment_expression
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= postfix_expression LPAREN * argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= postfix_expression LPAREN * RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        RPAREN shift  208
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
      argument_expression_list shift  123
         assignment_expression shift  203
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 31:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression SEMICOLON SEMICOLON * RPAREN statement
          iteration_statement ::= FOR LPAREN expression SEMICOLON SEMICOLON * expression RPAREN statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        RPAREN shift  13
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  146
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 32:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= FOR LPAREN SEMICOLON * SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN SEMICOLON * expression SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN SEMICOLON * SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR LPAREN SEMICOLON * expression SEMICOLON expression RPAREN statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                     SEMICOLON shift  25
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  148
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 33:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= FOR LPAREN SEMICOLON expression SEMICOLON * RPAREN statement
          iteration_statement ::= FOR LPAREN SEMICOLON expression SEMICOLON * expression RPAREN statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        RPAREN shift  12
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  151
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 34:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= DO statement WHILE LPAREN * expression RPAREN SEMICOLON

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  132
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 35:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          conditional_expression ::= logical_or_expression QUESTION * expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  134
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 36:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= postfix_expression LBRACKET * expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  116
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 37:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  154
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 38:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          selection_statement ::= SWITCH LPAREN * expression RPAREN statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  144
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 39:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          selection_statement ::= IF LPAREN * expression RPAREN statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  140
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 40:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= WHILE LPAREN * expression RPAREN statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  202
            primary_expression shift  328
                    expression shift  130
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 41:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          constant_expression ::= * conditional_expression
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          direct_abstract_declarator ::= direct_abstract_declarator LBRACKET * RBRACKET
          direct_abstract_declarator ::= direct_abstract_declarator LBRACKET * constant_expression RBRACKET

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                      RBRACKET shift  357
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
           constant_expression shift  172
        conditional_expression shift  344
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 42:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          constant_expression ::= * conditional_expression
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          direct_abstract_declarator ::= LBRACKET * RBRACKET
          direct_abstract_declarator ::= LBRACKET * constant_expression RBRACKET

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                      RBRACKET shift  367
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
           constant_expression shift  171
        conditional_expression shift  344
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 43:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          constant_expression ::= * conditional_expression
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          direct_declarator ::= direct_declarator LBRACKET * constant_expression RBRACKET
          direct_declarator ::= direct_declarator LBRACKET * RBRACKET

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                      RBRACKET shift  354
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
           constant_expression shift  175
        conditional_expression shift  344
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 44:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          assignment_expression ::= unary_expression assignment_operator * assignment_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  205
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 45:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= expression COMMA * assignment_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  201
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 46:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          constant_expression ::= * conditional_expression
          struct_declarator ::= COLON * constant_expression
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
           constant_expression shift  216
        conditional_expression shift  344
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 47:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          constant_expression ::= * conditional_expression
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          labeled_statement ::= CASE * constant_expression COLON statement

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
           constant_expression shift  195
        conditional_expression shift  344
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 48:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          constant_expression ::= * conditional_expression
          struct_declarator ::= declarator COLON * constant_expression
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
           constant_expression shift  332
        conditional_expression shift  344
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 49:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          enumerator ::= NAME EQ * constant_expression
          constant_expression ::= * conditional_expression
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
           constant_expression shift  346
        conditional_expression shift  344
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 50:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          argument_expression_list ::= argument_expression_list COMMA * assignment_expression
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          assignment_expression ::= * conditional_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  215
         assignment_expression shift  206
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  105
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 51:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= * logical_and_expression
          logical_or_expression ::= * logical_or_expression OROR logical_and_expression
          conditional_expression ::= * logical_or_expression
          conditional_expression ::= * logical_or_expression QUESTION expression COLON conditional_expression
          conditional_expression ::= logical_or_expression QUESTION expression COLON * conditional_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
        conditional_expression shift  204
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  168
         logical_or_expression shift  119

State 52:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          parameter_declaration ::= * declaration_specifiers
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= LPAREN * abstract_declarator RPAREN
          direct_abstract_declarator ::= * LBRACKET RBRACKET
          direct_abstract_declarator ::= * LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= LPAREN * RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= LPAREN * parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN
          abstract_declarator ::= * pointer
          abstract_declarator ::= * direct_abstract_declarator
          abstract_declarator ::= * pointer direct_abstract_declarator
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= LPAREN * declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= * direct_declarator
          declarator ::= * pointer direct_declarator

                          STAR shift  100
                          NAME shift  349
                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                        LPAREN shift  52
                        RPAREN shift  348
                      LBRACKET shift  42
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
                    declarator shift  178
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
                       pointer shift  102
           abstract_declarator shift  162
       storage_class_specifier shift  77
        declaration_specifiers shift  93
         parameter_declaration shift  260
                parameter_list shift  161
           parameter_type_list shift  174
    direct_abstract_declarator shift  125
             direct_declarator shift  126

State 53:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= * inclusive_or_expression
          logical_and_expression ::= * logical_and_expression ANDAND inclusive_or_expression
          logical_or_expression ::= logical_or_expression OROR * logical_and_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  166
        logical_and_expression shift  170

State 54:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= * direct_declarator
          declarator ::= * pointer direct_declarator
          declaration ::= * declaration_specifiers SEMICOLON
          declaration ::= * declaration_specifiers init_declarator_list SEMICOLON
          function_definition ::= * declaration_specifiers declarator declaration_list code_block
          function_definition ::= * declaration_specifiers declarator code_block
          function_definition ::= * declarator declaration_list code_block
          function_definition ::= * declarator code_block
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          external_declaration_list ::= external_declaration_list * external_declaration
          program ::= external_declaration_list * END_TOKEN

                          STAR shift  100
                          NAME shift  349
                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                        LPAREN shift  99
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                     END_TOKEN shift  156
                enum_specifier shift  300
               struct_or_union shift  118
                    declarator shift  61
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
                       pointer shift  107
                   declaration shift  284
       storage_class_specifier shift  77
        declaration_specifiers shift  92
             direct_declarator shift  126
           function_definition shift  275
          external_declaration shift  299

State 55:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          parameter_declaration ::= * declaration_specifiers
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= LPAREN * abstract_declarator RPAREN
          direct_abstract_declarator ::= * LBRACKET RBRACKET
          direct_abstract_declarator ::= * LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= LPAREN * RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= LPAREN * parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN
          abstract_declarator ::= * pointer
          abstract_declarator ::= * direct_abstract_declarator
          abstract_declarator ::= * pointer direct_abstract_declarator

                          STAR shift  100
                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                        LPAREN shift  55
                        RPAREN shift  348
                      LBRACKET shift  42
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
                       pointer shift  106
           abstract_declarator shift  162
       storage_class_specifier shift  77
        declaration_specifiers shift  93
         parameter_declaration shift  260
                parameter_list shift  161
           parameter_type_list shift  174
    direct_abstract_declarator shift  125

State 56:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= * exclusive_or_expression
          inclusive_or_expression ::= * inclusive_or_expression OR exclusive_or_expression
          logical_and_expression ::= logical_and_expression ANDAND * inclusive_or_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  164
       inclusive_or_expression shift  169

State 57:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= * and_expression
          exclusive_or_expression ::= * exclusive_or_expression XOR and_expression
          inclusive_or_expression ::= inclusive_or_expression OR * exclusive_or_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  163
       exclusive_or_expression shift  167

State 58:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          identifier_list ::= * NAME
          identifier_list ::= * identifier_list COMMA NAME
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          parameter_declaration ::= * declaration_specifiers
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          direct_declarator ::= direct_declarator LPAREN * parameter_type_list RPAREN
          direct_declarator ::= direct_declarator LPAREN * identifier_list RPAREN
          direct_declarator ::= direct_declarator LPAREN * RPAREN

                          NAME shift  356
                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                        RPAREN shift  363
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
               identifier_list shift  124
       storage_class_specifier shift  77
        declaration_specifiers shift  93
         parameter_declaration shift  260
                parameter_list shift  161
           parameter_type_list shift  177

State 59:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= * equality_expression
          and_expression ::= * and_expression AND equality_expression
          exclusive_or_expression ::= exclusive_or_expression XOR * and_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  150
                and_expression shift  165

State 60:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          declaration_list ::= * declaration
          declaration_list ::= * declaration_list declaration
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
    (202) init_declarator ::= declarator *
          init_declarator ::= declarator * EQ initializer
          declaration ::= * declaration_specifiers SEMICOLON
          declaration ::= * declaration_specifiers init_declarator_list SEMICOLON
          function_definition ::= declaration_specifiers declarator * declaration_list code_block
          function_definition ::= declaration_specifiers declarator * code_block

                            EQ shift  24
                          ENUM shift  129
                        LBRACE shift  1
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
                    code_block shift  257
              declaration_list shift  65
                   declaration shift  244
       storage_class_specifier shift  77
        declaration_specifiers shift  91
                     {default} reduce 202

State 61:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          declaration_list ::= * declaration
          declaration_list ::= * declaration_list declaration
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          declaration ::= * declaration_specifiers SEMICOLON
          declaration ::= * declaration_specifiers init_declarator_list SEMICOLON
          function_definition ::= declarator * declaration_list code_block
          function_definition ::= declarator * code_block

                          ENUM shift  129
                        LBRACE shift  1
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
                    code_block shift  273
              declaration_list shift  66
                   declaration shift  244
       storage_class_specifier shift  77
        declaration_specifiers shift  91

State 62:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          parameter_declaration ::= * declaration_specifiers
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN * RPAREN
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN * parameter_type_list RPAREN

                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                        RPAREN shift  351
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
       storage_class_specifier shift  77
        declaration_specifiers shift  93
         parameter_declaration shift  260
                parameter_list shift  161
           parameter_type_list shift  173

State 63:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_declarator ::= * declarator
          struct_declarator ::= * COLON constant_expression
          struct_declarator ::= * declarator COLON constant_expression
          struct_declarator_list ::= * struct_declarator
          struct_declarator_list ::= * struct_declarator_list COMMA struct_declarator
          struct_declaration ::= specifier_qualifier_list * struct_declarator_list SEMICOLON
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          specifier_qualifier_list ::= specifier_qualifier_list * type_specifier
          specifier_qualifier_list ::= specifier_qualifier_list * type_qualifier
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= * direct_declarator
          declarator ::= * pointer direct_declarator

                          STAR shift  100
                          NAME shift  349
                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                         COLON shift  46
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                        LPAREN shift  99
                enum_specifier shift  300
               struct_or_union shift  118
             struct_declarator shift  217
                    declarator shift  160
        struct_declarator_list shift  127
     struct_or_union_specifier shift  308
                type_specifier shift  282
                type_qualifier shift  281
                       pointer shift  107
             direct_declarator shift  126

State 64:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= * relational_expression
          equality_expression ::= * equality_expression EQEQ relational_expression
          equality_expression ::= * equality_expression NOTEQ relational_expression
          and_expression ::= and_expression AND * equality_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  112
           equality_expression shift  153

State 65:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          declaration_list ::= declaration_list * declaration
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          declaration ::= * declaration_specifiers SEMICOLON
          declaration ::= * declaration_specifiers init_declarator_list SEMICOLON
          function_definition ::= declaration_specifiers declarator declaration_list * code_block

                          ENUM shift  129
                        LBRACE shift  1
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
                    code_block shift  255
                   declaration shift  246
       storage_class_specifier shift  77
        declaration_specifiers shift  91

State 66:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          declaration_list ::= declaration_list * declaration
          code_block ::= * LBRACE RBRACE
          code_block ::= * LBRACE statement_list RBRACE
          code_block ::= * LBRACE declaration_list RBRACE
          code_block ::= * LBRACE declaration_list statement_list RBRACE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          declaration ::= * declaration_specifiers SEMICOLON
          declaration ::= * declaration_specifiers init_declarator_list SEMICOLON
          function_definition ::= declarator declaration_list * code_block

                          ENUM shift  129
                        LBRACE shift  1
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
                    code_block shift  270
                   declaration shift  246
       storage_class_specifier shift  77
        declaration_specifiers shift  91

State 67:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= equality_expression NOTEQ * relational_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  110

State 68:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= * shift_expression
          relational_expression ::= * relational_expression LT shift_expression
          relational_expression ::= * relational_expression GT shift_expression
          relational_expression ::= * relational_expression LTEQ shift_expression
          relational_expression ::= * relational_expression GTEQ shift_expression
          equality_expression ::= equality_expression EQEQ * relational_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  139
         relational_expression shift  111

State 69:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          parameter_declaration ::= * declaration_specifiers
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_list ::= parameter_list COMMA * parameter_declaration
          parameter_type_list ::= parameter_list COMMA * ELLIPSIS

                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                      ELLIPSIS shift  250
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
       storage_class_specifier shift  77
        declaration_specifiers shift  93
         parameter_declaration shift  259

State 70:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          specifier_qualifier_list ::= specifier_qualifier_list * type_specifier
          specifier_qualifier_list ::= specifier_qualifier_list * type_qualifier
     (62) type_name ::= specifier_qualifier_list *
          type_name ::= specifier_qualifier_list * abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= * LBRACKET RBRACKET
          direct_abstract_declarator ::= * LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN
          abstract_declarator ::= * pointer
          abstract_declarator ::= * direct_abstract_declarator
          abstract_declarator ::= * pointer direct_abstract_declarator

                          STAR shift  100
                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                        LPAREN shift  55
                      LBRACKET shift  42
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  282
                type_qualifier shift  281
                       pointer shift  106
           abstract_declarator shift  280
    direct_abstract_declarator shift  125
                     {default} reduce 62

State 71:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMICOLON
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= struct_or_union NAME LBRACE * struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          specifier_qualifier_list ::= * type_specifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_specifier
          specifier_qualifier_list ::= * type_qualifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_qualifier

                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                enum_specifier shift  300
               struct_or_union shift  118
            struct_declaration shift  224
      specifier_qualifier_list shift  63
       struct_declaration_list shift  80
     struct_or_union_specifier shift  308
                type_specifier shift  291
                type_qualifier shift  368

State 72:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMICOLON
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= struct_or_union LBRACE * struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          specifier_qualifier_list ::= * type_specifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_specifier
          specifier_qualifier_list ::= * type_qualifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_qualifier

                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                enum_specifier shift  300
               struct_or_union shift  118
            struct_declaration shift  224
      specifier_qualifier_list shift  63
       struct_declaration_list shift  81
     struct_or_union_specifier shift  308
                type_specifier shift  291
                type_qualifier shift  368

State 73:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= relational_expression LT * shift_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  143

State 74:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= relational_expression GTEQ * shift_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  149

State 75:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= relational_expression LTEQ * shift_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  147

State 76:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= * additive_expression
          shift_expression ::= * shift_expression SL additive_expression
          shift_expression ::= * shift_expression SR additive_expression
          relational_expression ::= relational_expression GT * shift_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  136
              shift_expression shift  145

State 77:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
    (163) declaration_specifiers ::= storage_class_specifier *
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= storage_class_specifier * declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers

                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
       storage_class_specifier shift  77
        declaration_specifiers shift  271
                     {default} reduce 163

State 78:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= * type_qualifier
    (167) declaration_specifiers ::= type_qualifier *
          declaration_specifiers ::= * type_qualifier declaration_specifiers
          declaration_specifiers ::= type_qualifier * declaration_specifiers

                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
       storage_class_specifier shift  77
        declaration_specifiers shift  266
                     {default} reduce 167

State 79:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          storage_class_specifier ::= * TYPEDEF
          storage_class_specifier ::= * EXTERN
          storage_class_specifier ::= * STATIC
          storage_class_specifier ::= * AUTO
          storage_class_specifier ::= * REGISTER
          declaration_specifiers ::= * storage_class_specifier
          declaration_specifiers ::= * storage_class_specifier declaration_specifiers
          declaration_specifiers ::= * type_specifier
    (165) declaration_specifiers ::= type_specifier *
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= type_specifier * declaration_specifiers
          declaration_specifiers ::= * type_qualifier
          declaration_specifiers ::= * type_qualifier declaration_specifiers

                          ENUM shift  129
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                       TYPEDEF shift  279
                        EXTERN shift  278
                        STATIC shift  277
                          AUTO shift  276
                      REGISTER shift  272
                enum_specifier shift  300
               struct_or_union shift  118
     struct_or_union_specifier shift  308
                type_specifier shift  79
                type_qualifier shift  78
       storage_class_specifier shift  77
        declaration_specifiers shift  268
                     {default} reduce 165

State 80:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMICOLON
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= struct_or_union NAME LBRACE struct_declaration_list * RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          specifier_qualifier_list ::= * type_specifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_specifier
          specifier_qualifier_list ::= * type_qualifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_qualifier

                          ENUM shift  129
                        RBRACE shift  227
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                enum_specifier shift  300
               struct_or_union shift  118
            struct_declaration shift  226
      specifier_qualifier_list shift  63
     struct_or_union_specifier shift  308
                type_specifier shift  291
                type_qualifier shift  368

State 81:
          enum_specifier ::= * ENUM NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM LBRACE enumerator_list RBRACE
          enum_specifier ::= * ENUM NAME
          struct_or_union ::= * STRUCT
          struct_or_union ::= * UNION
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMICOLON
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_or_union_specifier ::= * struct_or_union NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= * struct_or_union LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= struct_or_union LBRACE struct_declaration_list * RBRACE
          struct_or_union_specifier ::= * struct_or_union NAME
          type_specifier ::= * VOID
          type_specifier ::= * CHAR
          type_specifier ::= * SHORT
          type_specifier ::= * INT
          type_specifier ::= * LONG
          type_specifier ::= * SIGNED
          type_specifier ::= * UNSIGNED
          type_specifier ::= * FLOAT
          type_specifier ::= * DOUBLE
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          type_specifier ::= * TYPEDEF_NAME
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          specifier_qualifier_list ::= * type_specifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_specifier
          specifier_qualifier_list ::= * type_qualifier
          specifier_qualifier_list ::= * specifier_qualifier_list type_qualifier

                          ENUM shift  129
                        RBRACE shift  230
                        STRUCT shift  336
                         UNION shift  335
                          VOID shift  320
                          CHAR shift  319
                         SHORT shift  318
                           INT shift  317
                          LONG shift  316
                        SIGNED shift  314
                      UNSIGNED shift  312
                         FLOAT shift  311
                        DOUBLE shift  310
                  TYPEDEF_NAME shift  297
                         CONST shift  295
                      VOLATILE shift  292
                enum_specifier shift  300
               struct_or_union shift  118
            struct_declaration shift  226
      specifier_qualifier_list shift  63
     struct_or_union_specifier shift  308
                type_specifier shift  291
                type_qualifier shift  368

State 82:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= shift_expression SR * additive_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  142

State 83:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= * multiplicative_expression
          additive_expression ::= * additive_expression ADD multiplicative_expression
          additive_expression ::= * additive_expression SUB multiplicative_expression
          shift_expression ::= shift_expression SL * additive_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  115
           additive_expression shift  141

State 84:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= additive_expression ADD * multiplicative_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  114

State 85:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= * cast_expression
          multiplicative_expression ::= * multiplicative_expression STAR cast_expression
          multiplicative_expression ::= * multiplicative_expression DIV cast_expression
          multiplicative_expression ::= * multiplicative_expression MOD cast_expression
          additive_expression ::= additive_expression SUB * multiplicative_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  245
     multiplicative_expression shift  113

State 86:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= multiplicative_expression DIV * cast_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  242

State 87:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= unary_operator * cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  322

State 88:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= multiplicative_expression STAR * cast_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  243

State 89:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          multiplicative_expression ::= multiplicative_expression MOD * cast_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  240

State 90:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          cast_expression ::= LPAREN type_name RPAREN * cast_expression

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  4
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  247
               cast_expression shift  233

State 91:
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= * direct_declarator
          declarator ::= * pointer direct_declarator
          init_declarator ::= * declarator
          init_declarator ::= * declarator EQ initializer
          init_declarator_list ::= * init_declarator
          init_declarator_list ::= * init_declarator_list COMMA init_declarator
          declaration ::= declaration_specifiers * SEMICOLON
          declaration ::= declaration_specifiers * init_declarator_list SEMICOLON

                          STAR shift  100
                          NAME shift  349
                     SEMICOLON shift  252
                        LPAREN shift  99
                    declarator shift  197
                       pointer shift  107
             direct_declarator shift  126
               init_declarator shift  198
          init_declarator_list shift  155

State 92:
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= * direct_declarator
          declarator ::= * pointer direct_declarator
          init_declarator ::= * declarator
          init_declarator ::= * declarator EQ initializer
          init_declarator_list ::= * init_declarator
          init_declarator_list ::= * init_declarator_list COMMA init_declarator
          declaration ::= declaration_specifiers * SEMICOLON
          declaration ::= declaration_specifiers * init_declarator_list SEMICOLON
          function_definition ::= declaration_specifiers * declarator declaration_list code_block
          function_definition ::= declaration_specifiers * declarator code_block

                          STAR shift  100
                          NAME shift  349
                     SEMICOLON shift  252
                        LPAREN shift  99
                    declarator shift  60
                       pointer shift  107
             direct_declarator shift  126
               init_declarator shift  198
          init_declarator_list shift  155

State 93:
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
    (169) parameter_declaration ::= declaration_specifiers *
          parameter_declaration ::= declaration_specifiers * declarator
          parameter_declaration ::= declaration_specifiers * abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= * LBRACKET RBRACKET
          direct_abstract_declarator ::= * LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN
          abstract_declarator ::= * pointer
          abstract_declarator ::= * direct_abstract_declarator
          abstract_declarator ::= * pointer direct_abstract_declarator
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= * direct_declarator
          declarator ::= * pointer direct_declarator

                          STAR shift  100
                          NAME shift  349
                        LPAREN shift  52
                      LBRACKET shift  42
                    declarator shift  265
                       pointer shift  102
           abstract_declarator shift  264
    direct_abstract_declarator shift  125
             direct_declarator shift  126
                     {default} reduce 169

State 94:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= SUBSUB * unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  37
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  324

State 95:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= ADDADD * unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  37
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  200

State 96:
          unary_operator ::= * AND
          unary_operator ::= * STAR
          unary_operator ::= * ADD
          unary_operator ::= * SUB
          unary_operator ::= * TILDE
          unary_operator ::= * NOT
          primary_expression ::= * NAME
          primary_expression ::= * INT_LITERAL
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LBRACKET expression RBRACKET
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression DOT NAME
          postfix_expression ::= * postfix_expression ARROW NAME
          postfix_expression ::= * postfix_expression ADDADD
          postfix_expression ::= * postfix_expression SUBSUB
          unary_expression ::= * postfix_expression
          unary_expression ::= * ADDADD unary_expression
          unary_expression ::= * SUBSUB unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= SIZEOF * unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_expression ::= SIZEOF * LPAREN type_name RPAREN

                           AND shift  340
                          STAR shift  296
                           ADD shift  269
                           SUB shift  263
                         TILDE shift  211
                           NOT shift  209
                          NAME shift  343
                   INT_LITERAL shift  341
                STRING_LITERAL shift  339
                        LPAREN shift  3
                        ADDADD shift  95
                        SUBSUB shift  94
                        SIZEOF shift  96
                unary_operator shift  87
            primary_expression shift  328
            postfix_expression shift  109
              unary_expression shift  199

State 97:
          struct_declarator ::= * declarator
          struct_declarator ::= * COLON constant_expression
          struct_declarator ::= * declarator COLON constant_expression
          struct_declarator_list ::= struct_declarator_list COMMA * struct_declarator
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= * direct_declarator
          declarator ::= * pointer direct_declarator

                          STAR shift  100
                          NAME shift  349
                         COLON shift  46
                        LPAREN shift  99
             struct_declarator shift  220
                    declarator shift  160
                       pointer shift  107
             direct_declarator shift  126

State 98:
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= * direct_declarator
          declarator ::= * pointer direct_declarator
          init_declarator ::= * declarator
          init_declarator ::= * declarator EQ initializer
          init_declarator_list ::= init_declarator_list COMMA * init_declarator

                          STAR shift  100
                          NAME shift  349
                        LPAREN shift  99
                    declarator shift  197
                       pointer shift  107
             direct_declarator shift  126
               init_declarator shift  231

State 99:
          pointer ::= * STAR type_qualifier_list
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= * STAR pointer
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= LPAREN * declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= * direct_declarator
          declarator ::= * pointer direct_declarator

                          STAR shift  100
                          NAME shift  349
                        LPAREN shift  99
                    declarator shift  178
                       pointer shift  107
             direct_declarator shift  126

State 100:
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          type_qualifier_list ::= * type_qualifier
          type_qualifier_list ::= * type_qualifier_list type_qualifier
          pointer ::= * STAR type_qualifier_list
          pointer ::= STAR * type_qualifier_list
          pointer ::= * STAR
     (55) pointer ::= STAR *
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= STAR * type_qualifier_list pointer
          pointer ::= * STAR pointer
          pointer ::= STAR * pointer

                          STAR shift  100
                         CONST shift  295
                      VOLATILE shift  292
                type_qualifier shift  290
           type_qualifier_list shift  101
                       pointer shift  285
                     {default} reduce 55

State 101:
          type_qualifier ::= * CONST
          type_qualifier ::= * VOLATILE
          type_qualifier_list ::= type_qualifier_list * type_qualifier
          pointer ::= * STAR type_qualifier_list
     (54) pointer ::= STAR type_qualifier_list *
          pointer ::= * STAR
          pointer ::= * STAR type_qualifier_list pointer
          pointer ::= STAR type_qualifier_list * pointer
          pointer ::= * STAR pointer

                          STAR shift  100
                         CONST shift  295
                      VOLATILE shift  292
                type_qualifier shift  287
                       pointer shift  286
                     {default} reduce 54

State 102:
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= * LBRACKET RBRACKET
          direct_abstract_declarator ::= * LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN
    (190) abstract_declarator ::= pointer *
          abstract_declarator ::= pointer * direct_abstract_declarator
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= pointer * direct_declarator

                          NAME shift  349
                        LPAREN shift  52
                      LBRACKET shift  42
    direct_abstract_declarator shift  120
             direct_declarator shift  121
                     {default} reduce 190

State 103:
          enumerator ::= * NAME
          enumerator ::= * NAME EQ constant_expression
          enumerator_list ::= * enumerator
          enumerator_list ::= * enumerator_list COMMA enumerator
          enum_specifier ::= ENUM LBRACE * enumerator_list RBRACE

                          NAME shift  158
                    enumerator shift  234
               enumerator_list shift  135

State 104:
          enumerator ::= * NAME
          enumerator ::= * NAME EQ constant_expression
          enumerator_list ::= * enumerator
          enumerator_list ::= * enumerator_list COMMA enumerator
          enum_specifier ::= ENUM NAME LBRACE * enumerator_list RBRACE

                          NAME shift  158
                    enumerator shift  234
               enumerator_list shift  122

State 105:
          assignment_operator ::= * EQ
          assignment_operator ::= * MULEQ
          assignment_operator ::= * DIVEQ
          assignment_operator ::= * MODEQ
          assignment_operator ::= * ADDEQ
          assignment_operator ::= * SUBEQ
          assignment_operator ::= * SLEQ
          assignment_operator ::= * SREQ
          assignment_operator ::= * ANDEQ
          assignment_operator ::= * XOREQ
          assignment_operator ::= * OREQ
     (84) cast_expression ::= unary_expression *
          assignment_expression ::= unary_expression * assignment_operator assignment_expression

                            EQ shift  239
                         MULEQ shift  236
                         DIVEQ shift  235
                         MODEQ shift  232
                         ADDEQ shift  229
                         SUBEQ shift  228
                          SLEQ shift  225
                          SREQ shift  222
                         ANDEQ shift  221
                         XOREQ shift  219
                          OREQ shift  218
           assignment_operator shift  44
                     {default} reduce 84

State 106:
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= * LBRACKET RBRACKET
          direct_abstract_declarator ::= * LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET RBRACKET
          direct_abstract_declarator ::= * direct_abstract_declarator LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN
    (190) abstract_declarator ::= pointer *
          abstract_declarator ::= pointer * direct_abstract_declarator

                        LPAREN shift  55
                      LBRACKET shift  42
    direct_abstract_declarator shift  120
                     {default} reduce 190

State 107:
          direct_declarator ::= * NAME
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LBRACKET constant_expression RBRACKET
          direct_declarator ::= * direct_declarator LBRACKET RBRACKET
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          declarator ::= pointer * direct_declarator

                          NAME shift  349
                        LPAREN shift  99
             direct_declarator shift  121

State 108:
          enumerator ::= * NAME
          enumerator ::= * NAME EQ constant_expression
          enumerator_list ::= enumerator_list COMMA * enumerator

                          NAME shift  158
                    enumerator shift  237

State 109:
          postfix_expression ::= postfix_expression * LBRACKET expression RBRACKET
          postfix_expression ::= postfix_expression * LPAREN argument_expression_list RPAREN
          postfix_expression ::= postfix_expression * LPAREN RPAREN
          postfix_expression ::= postfix_expression * DOT NAME
          postfix_expression ::= postfix_expression * ARROW NAME
          postfix_expression ::= postfix_expression * ADDADD
          postfix_expression ::= postfix_expression * SUBSUB
     (78) unary_expression ::= postfix_expression *

                        LPAREN shift  30
                      LBRACKET shift  36
                           DOT shift  180
                         ARROW shift  181
                        ADDADD shift  213
                        SUBSUB shift  214
                     {default} reduce 78

State 110:
          relational_expression ::= relational_expression * LT shift_expression
          relational_expression ::= relational_expression * GT shift_expression
          relational_expression ::= relational_expression * LTEQ shift_expression
          relational_expression ::= relational_expression * GTEQ shift_expression
    (103) equality_expression ::= equality_expression NOTEQ relational_expression *

                            LT shift  73
                            GT shift  76
                          LTEQ shift  75
                          GTEQ shift  74
                     {default} reduce 103

State 111:
          relational_expression ::= relational_expression * LT shift_expression
          relational_expression ::= relational_expression * GT shift_expression
          relational_expression ::= relational_expression * LTEQ shift_expression
          relational_expression ::= relational_expression * GTEQ shift_expression
    (102) equality_expression ::= equality_expression EQEQ relational_expression *

                            LT shift  73
                            GT shift  76
                          LTEQ shift  75
                          GTEQ shift  74
                     {default} reduce 102

State 112:
          relational_expression ::= relational_expression * LT shift_expression
          relational_expression ::= relational_expression * GT shift_expression
          relational_expression ::= relational_expression * LTEQ shift_expression
          relational_expression ::= relational_expression * GTEQ shift_expression
    (101) equality_expression ::= relational_expression *

                            LT shift  73
                            GT shift  76
                          LTEQ shift  75
                          GTEQ shift  74
                     {default} reduce 101

State 113:
          multiplicative_expression ::= multiplicative_expression * STAR cast_expression
          multiplicative_expression ::= multiplicative_expression * DIV cast_expression
          multiplicative_expression ::= multiplicative_expression * MOD cast_expression
     (92) additive_expression ::= additive_expression SUB multiplicative_expression *

                          STAR shift  88
                           DIV shift  86
                           MOD shift  89
                     {default} reduce 92

State 114:
          multiplicative_expression ::= multiplicative_expression * STAR cast_expression
          multiplicative_expression ::= multiplicative_expression * DIV cast_expression
          multiplicative_expression ::= multiplicative_expression * MOD cast_expression
     (91) additive_expression ::= additive_expression ADD multiplicative_expression *

                          STAR shift  88
                           DIV shift  86
                           MOD shift  89
                     {default} reduce 91

State 115:
          multiplicative_expression ::= multiplicative_expression * STAR cast_expression
          multiplicative_expression ::= multiplicative_expression * DIV cast_expression
          multiplicative_expression ::= multiplicative_expression * MOD cast_expression
     (90) additive_expression ::= multiplicative_expression *

                          STAR shift  88
                           DIV shift  86
                           MOD shift  89
                     {default} reduce 90

State 116:
          postfix_expression ::= postfix_expression LBRACKET expression * RBRACKET
          expression ::= expression * COMMA assignment_expression

                         COMMA shift  45
                      RBRACKET shift  326

State 117:
          initializer ::= LBRACE initializer_list * RBRACE
          initializer ::= LBRACE initializer_list * COMMA RBRACE
          initializer_list ::= initializer_list * COMMA initializer

                         COMMA shift  23
                        RBRACE shift  345

State 118:
          struct_or_union_specifier ::= struct_or_union * NAME LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= struct_or_union * LBRACE struct_declaration_list RBRACE
          struct_or_union_specifier ::= struct_or_union * NAME

                          NAME shift  159
                        LBRACE shift  72

State 119:
          logical_or_expression ::= logical_or_expression * OROR logical_and_expression
    (114) conditional_expression ::= logical_or_expression *
          conditional_expression ::= logical_or_expression * QUESTION expression COLON conditional_expression

                          OROR shift  53
                      QUESTION shift  35
                     {default} reduce 114

State 120:
          direct_abstract_declarator ::= direct_abstract_declarator * LBRACKET RBRACKET
          direct_abstract_declarator ::= direct_abstract_declarator * LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= direct_abstract_declarator * LPAREN RPAREN
          direct_abstract_declarator ::= direct_abstract_declarator * LPAREN parameter_type_list RPAREN
    (192) abstract_declarator ::= pointer direct_abstract_declarator *

                        LPAREN shift  62
                      LBRACKET shift  41
                     {default} reduce 192

State 121:
          direct_declarator ::= direct_declarator * LBRACKET constant_expression RBRACKET
          direct_declarator ::= direct_declarator * LBRACKET RBRACKET
          direct_declarator ::= direct_declarator * LPAREN parameter_type_list RPAREN
          direct_declarator ::= direct_declarator * LPAREN identifier_list RPAREN
          direct_declarator ::= direct_declarator * LPAREN RPAREN
    (201) declarator ::= pointer direct_declarator *

                        LPAREN shift  58
                      LBRACKET shift  43
                     {default} reduce 201

State 122:
          enumerator_list ::= enumerator_list * COMMA enumerator
          enum_specifier ::= ENUM NAME LBRACE enumerator_list * RBRACE

                         COMMA shift  108
                        RBRACE shift  238

State 123:
          argument_expression_list ::= argument_expression_list * COMMA assignment_expression
          postfix_expression ::= postfix_expression LPAREN argument_expression_list * RPAREN

                         COMMA shift  50
                        RPAREN shift  207

State 124:
          identifier_list ::= identifier_list * COMMA NAME
          direct_declarator ::= direct_declarator LPAREN identifier_list * RPAREN

                         COMMA shift  176
                        RPAREN shift  360

State 125:
          direct_abstract_declarator ::= direct_abstract_declarator * LBRACKET RBRACKET
          direct_abstract_declarator ::= direct_abstract_declarator * LBRACKET constant_expression RBRACKET
          direct_abstract_declarator ::= direct_abstract_declarator * LPAREN RPAREN
          direct_abstract_declarator ::= direct_abstract_declarator * LPAREN parameter_type_list RPAREN
    (191) abstract_declarator ::= direct_abstract_declarator *

                        LPAREN shift  62
                      LBRACKET shift  41
                     {default} reduce 191

State 126:
          direct_declarator ::= direct_declarator * LBRACKET constant_expression RBRACKET
          direct_declarator ::= direct_declarator * LBRACKET RBRACKET
          direct_declarator ::= direct_declarator * LPAREN parameter_type_list RPAREN
          direct_declarator ::= direct_declarator * LPAREN identifier_list RPAREN
          direct_declarator ::= direct_declarator * LPAREN RPAREN
    (200) declarator ::= direct_declarator *

                        LPAREN shift  58
                      LBRACKET shift  43
                     {default} reduce 200

State 127:
          struct_declarator_list ::= struct_declarator_list * COMMA struct_declarator
          struct_declaration ::= specifier_qualifier_list struct_declarator_list * SEMICOLON

                         COMMA shift  97
                     SEMICOLON shift  223

State 128:
          expression ::= expression * COMMA assignment_expression
          expression_statement ::= expression * SEMICOLON

                         COMMA shift  45
                     SEMICOLON shift  251

State 129:
          enum_specifier ::= ENUM * NAME LBRACE enumerator_list RBRACE
          enum_specifier ::= ENUM * LBRACE enumerator_list RBRACE
          enum_specifier ::= ENUM * NAME

                          NAME shift  157
                        LBRACE shift  103

State 130:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= WHILE LPAREN expression * RPAREN statement

                         COMMA shift  45
                        RPAREN shift  10

State 131:
          expression ::= expression * COMMA assignment_expression
          jump_statement ::= RETURN expression * SEMICOLON

                         COMMA shift  45
                     SEMICOLON shift  261

State 132:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= DO statement WHILE LPAREN expression * RPAREN SEMICOLON

                         COMMA shift  45
                        RPAREN shift  191

State 133:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression * SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN expression * SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN expression * SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR LPAREN expression * SEMICOLON expression SEMICOLON expression RPAREN statement

                         COMMA shift  45
                     SEMICOLON shift  27

State 134:
          conditional_expression ::= logical_or_expression QUESTION expression * COLON conditional_expression
          expression ::= expression * COMMA assignment_expression

                         COMMA shift  45
                         COLON shift  51

State 135:
          enumerator_list ::= enumerator_list * COMMA enumerator
          enum_specifier ::= ENUM LBRACE enumerator_list * RBRACE

                         COMMA shift  108
                        RBRACE shift  241

State 136:
          additive_expression ::= additive_expression * ADD multiplicative_expression
          additive_expression ::= additive_expression * SUB multiplicative_expression
     (93) shift_expression ::= additive_expression *

                           ADD shift  84
                           SUB shift  85
                     {default} reduce 93

State 137:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression SEMICOLON expression * SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN expression SEMICOLON expression * SEMICOLON expression RPAREN statement

                         COMMA shift  45
                     SEMICOLON shift  28

State 138:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression SEMICOLON expression SEMICOLON expression * RPAREN statement

                         COMMA shift  45
                        RPAREN shift  7

State 139:
          shift_expression ::= shift_expression * SL additive_expression
          shift_expression ::= shift_expression * SR additive_expression
     (96) relational_expression ::= shift_expression *

                            SL shift  83
                            SR shift  82
                     {default} reduce 96

State 140:
          expression ::= expression * COMMA assignment_expression
          selection_statement ::= IF LPAREN expression * RPAREN statement

                         COMMA shift  45
                        RPAREN shift  8

State 141:
          additive_expression ::= additive_expression * ADD multiplicative_expression
          additive_expression ::= additive_expression * SUB multiplicative_expression
     (94) shift_expression ::= shift_expression SL additive_expression *

                           ADD shift  84
                           SUB shift  85
                     {default} reduce 94

State 142:
          additive_expression ::= additive_expression * ADD multiplicative_expression
          additive_expression ::= additive_expression * SUB multiplicative_expression
     (95) shift_expression ::= shift_expression SR additive_expression *

                           ADD shift  84
                           SUB shift  85
                     {default} reduce 95

State 143:
          shift_expression ::= shift_expression * SL additive_expression
          shift_expression ::= shift_expression * SR additive_expression
     (97) relational_expression ::= relational_expression LT shift_expression *

                            SL shift  83
                            SR shift  82
                     {default} reduce 97

State 144:
          expression ::= expression * COMMA assignment_expression
          selection_statement ::= SWITCH LPAREN expression * RPAREN statement

                         COMMA shift  45
                        RPAREN shift  9

State 145:
          shift_expression ::= shift_expression * SL additive_expression
          shift_expression ::= shift_expression * SR additive_expression
     (98) relational_expression ::= relational_expression GT shift_expression *

                            SL shift  83
                            SR shift  82
                     {default} reduce 98

State 146:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression SEMICOLON SEMICOLON expression * RPAREN statement

                         COMMA shift  45
                        RPAREN shift  19

State 147:
          shift_expression ::= shift_expression * SL additive_expression
          shift_expression ::= shift_expression * SR additive_expression
     (99) relational_expression ::= relational_expression LTEQ shift_expression *

                            SL shift  83
                            SR shift  82
                     {default} reduce 99

State 148:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= FOR LPAREN SEMICOLON expression * SEMICOLON RPAREN statement
          iteration_statement ::= FOR LPAREN SEMICOLON expression * SEMICOLON expression RPAREN statement

                         COMMA shift  45
                     SEMICOLON shift  33

State 149:
          shift_expression ::= shift_expression * SL additive_expression
          shift_expression ::= shift_expression * SR additive_expression
    (100) relational_expression ::= relational_expression GTEQ shift_expression *

                            SL shift  83
                            SR shift  82
                     {default} reduce 100

State 150:
          equality_expression ::= equality_expression * EQEQ relational_expression
          equality_expression ::= equality_expression * NOTEQ relational_expression
    (104) and_expression ::= equality_expression *

                          EQEQ shift  68
                         NOTEQ shift  67
                     {default} reduce 104

State 151:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= FOR LPAREN SEMICOLON expression SEMICOLON expression * RPAREN statement

                         COMMA shift  45
                        RPAREN shift  17

State 152:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= FOR LPAREN SEMICOLON SEMICOLON expression * RPAREN statement

                         COMMA shift  45
                        RPAREN shift  16

State 153:
          equality_expression ::= equality_expression * EQEQ relational_expression
          equality_expression ::= equality_expression * NOTEQ relational_expression
    (105) and_expression ::= and_expression AND equality_expression *

                          EQEQ shift  68
                         NOTEQ shift  67
                     {default} reduce 105

State 154:
          primary_expression ::= LPAREN expression * RPAREN
          expression ::= expression * COMMA assignment_expression

                         COMMA shift  45
                        RPAREN shift  325

State 155:
          init_declarator_list ::= init_declarator_list * COMMA init_declarator
          declaration ::= declaration_specifiers init_declarator_list * SEMICOLON

                         COMMA shift  98
                     SEMICOLON shift  248

State 156:
    (216) program ::= external_declaration_list END_TOKEN *

                             $ reduce 216

State 157:
          enum_specifier ::= ENUM NAME * LBRACE enumerator_list RBRACE
     (23) enum_specifier ::= ENUM NAME *

                        LBRACE shift  104
                     {default} reduce 23

State 158:
     (17) enumerator ::= NAME *
          enumerator ::= NAME * EQ constant_expression

                            EQ shift  49
                     {default} reduce 17

State 159:
          struct_or_union_specifier ::= struct_or_union NAME * LBRACE struct_declaration_list RBRACE
     (37) struct_or_union_specifier ::= struct_or_union NAME *

                        LBRACE shift  71
                     {default} reduce 37

State 160:
     (27) struct_declarator ::= declarator *
          struct_declarator ::= declarator * COLON constant_expression

                         COLON shift  48
                     {default} reduce 27

State 161:
          parameter_list ::= parameter_list * COMMA parameter_declaration
    (174) parameter_type_list ::= parameter_list *
          parameter_type_list ::= parameter_list * COMMA ELLIPSIS

                         COMMA shift  69
                     {default} reduce 174

State 162:
          direct_abstract_declarator ::= LPAREN abstract_declarator * RPAREN

                        RPAREN shift  249

State 163:
          and_expression ::= and_expression * AND equality_expression
    (106) exclusive_or_expression ::= and_expression *

                           AND shift  64
                     {default} reduce 106

State 164:
          exclusive_or_expression ::= exclusive_or_expression * XOR and_expression
    (108) inclusive_or_expression ::= exclusive_or_expression *

                           XOR shift  59
                     {default} reduce 108

State 165:
          and_expression ::= and_expression * AND equality_expression
    (107) exclusive_or_expression ::= exclusive_or_expression XOR and_expression *

                           AND shift  64
                     {default} reduce 107

State 166:
          inclusive_or_expression ::= inclusive_or_expression * OR exclusive_or_expression
    (110) logical_and_expression ::= inclusive_or_expression *

                            OR shift  57
                     {default} reduce 110

State 167:
          exclusive_or_expression ::= exclusive_or_expression * XOR and_expression
    (109) inclusive_or_expression ::= inclusive_or_expression OR exclusive_or_expression *

                           XOR shift  59
                     {default} reduce 109

State 168:
          logical_and_expression ::= logical_and_expression * ANDAND inclusive_or_expression
    (112) logical_or_expression ::= logical_and_expression *

                        ANDAND shift  56
                     {default} reduce 112

State 169:
          inclusive_or_expression ::= inclusive_or_expression * OR exclusive_or_expression
    (111) logical_and_expression ::= logical_and_expression ANDAND inclusive_or_expression *

                            OR shift  57
                     {default} reduce 111

State 170:
          logical_and_expression ::= logical_and_expression * ANDAND inclusive_or_expression
    (113) logical_or_expression ::= logical_or_expression OROR logical_and_expression *

                        ANDAND shift  56
                     {default} reduce 113

State 171:
          direct_abstract_declarator ::= LBRACKET constant_expression * RBRACKET

                      RBRACKET shift  366

State 172:
          direct_abstract_declarator ::= direct_abstract_declarator LBRACKET constant_expression * RBRACKET

                      RBRACKET shift  355

State 173:
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list * RPAREN

                        RPAREN shift  350

State 174:
          direct_abstract_declarator ::= LPAREN parameter_type_list * RPAREN

                        RPAREN shift  347

State 175:
          direct_declarator ::= direct_declarator LBRACKET constant_expression * RBRACKET

                      RBRACKET shift  353

State 176:
          identifier_list ::= identifier_list COMMA * NAME

                          NAME shift  359

State 177:
          direct_declarator ::= direct_declarator LPAREN parameter_type_list * RPAREN

                        RPAREN shift  362

State 178:
          direct_declarator ::= LPAREN declarator * RPAREN

                        RPAREN shift  365

State 179:
          unary_expression ::= SIZEOF LPAREN type_name * RPAREN

                        RPAREN shift  369

State 180:
          postfix_expression ::= postfix_expression DOT * NAME

                          NAME shift  210

State 181:
          postfix_expression ::= postfix_expression ARROW * NAME

                          NAME shift  212

State 182:
          cast_expression ::= LPAREN type_name * RPAREN cast_expression

                        RPAREN shift  90

State 183:
     (66) primary_expression ::= NAME *
          labeled_statement ::= NAME * COLON statement

                         COLON shift  15
                     {default} reduce 66

State 184:
          jump_statement ::= GOTO * NAME SEMICOLON

                          NAME shift  185

State 185:
          jump_statement ::= GOTO NAME * SEMICOLON

                     SEMICOLON shift  254

State 186:
          jump_statement ::= CONTINUE * SEMICOLON

                     SEMICOLON shift  256

State 187:
          jump_statement ::= BREAK * SEMICOLON

                     SEMICOLON shift  258

State 188:
          iteration_statement ::= WHILE * LPAREN expression RPAREN statement

                        LPAREN shift  40

State 189:
          iteration_statement ::= DO statement * WHILE LPAREN expression RPAREN SEMICOLON

                         WHILE shift  190

State 190:
          iteration_statement ::= DO statement WHILE * LPAREN expression RPAREN SEMICOLON

                        LPAREN shift  34

State 191:
          iteration_statement ::= DO statement WHILE LPAREN expression RPAREN * SEMICOLON

                     SEMICOLON shift  274

State 192:
          iteration_statement ::= FOR * LPAREN SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= FOR * LPAREN expression SEMICOLON SEMICOLON RPAREN statement
          iteration_statement ::= FOR * LPAREN SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= FOR * LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement
          iteration_statement ::= FOR * LPAREN SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR * LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR * LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement
          iteration_statement ::= FOR * LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement

                        LPAREN shift  26

State 193:
          selection_statement ::= IF * LPAREN expression RPAREN statement

                        LPAREN shift  39

State 194:
          selection_statement ::= SWITCH * LPAREN expression RPAREN statement

                        LPAREN shift  38

State 195:
          labeled_statement ::= CASE constant_expression * COLON statement

                         COLON shift  20

State 196:
          labeled_statement ::= DEFAULT * COLON statement

                         COLON shift  21

State 197:
    (202) init_declarator ::= declarator *
          init_declarator ::= declarator * EQ initializer

                            EQ shift  24
                     {default} reduce 202

State 198:
    (204) init_declarator_list ::= init_declarator *

                     {default} reduce 204

State 199:
     (82) unary_expression ::= SIZEOF unary_expression *

                     {default} reduce 82

State 200:
     (79) unary_expression ::= ADDADD unary_expression *

                     {default} reduce 79

State 201:
    (119) expression ::= expression COMMA assignment_expression *

                     {default} reduce 119

State 202:
    (118) expression ::= assignment_expression *

                     {default} reduce 118

State 203:
     (64) argument_expression_list ::= assignment_expression *

                     {default} reduce 64

State 204:
    (115) conditional_expression ::= logical_or_expression QUESTION expression COLON conditional_expression *

                     {default} reduce 115

State 205:
    (117) assignment_expression ::= unary_expression assignment_operator assignment_expression *

                     {default} reduce 117

State 206:
     (65) argument_expression_list ::= argument_expression_list COMMA assignment_expression *

                     {default} reduce 65

State 207:
     (72) postfix_expression ::= postfix_expression LPAREN argument_expression_list RPAREN *

                     {default} reduce 72

State 208:
     (73) postfix_expression ::= postfix_expression LPAREN RPAREN *

                     {default} reduce 73

State 209:
      (5) unary_operator ::= NOT *

                     {default} reduce 5

State 210:
     (74) postfix_expression ::= postfix_expression DOT NAME *

                     {default} reduce 74

State 211:
      (4) unary_operator ::= TILDE *

                     {default} reduce 4

State 212:
     (75) postfix_expression ::= postfix_expression ARROW NAME *

                     {default} reduce 75

State 213:
     (76) postfix_expression ::= postfix_expression ADDADD *

                     {default} reduce 76

State 214:
     (77) postfix_expression ::= postfix_expression SUBSUB *

                     {default} reduce 77

State 215:
    (116) assignment_expression ::= conditional_expression *

                     {default} reduce 116

State 216:
     (28) struct_declarator ::= COLON constant_expression *

                     {default} reduce 28

State 217:
     (30) struct_declarator_list ::= struct_declarator *

                     {default} reduce 30

State 218:
     (16) assignment_operator ::= OREQ *

                     {default} reduce 16

State 219:
     (15) assignment_operator ::= XOREQ *

                     {default} reduce 15

State 220:
     (31) struct_declarator_list ::= struct_declarator_list COMMA struct_declarator *

                     {default} reduce 31

State 221:
     (14) assignment_operator ::= ANDEQ *

                     {default} reduce 14

State 222:
     (13) assignment_operator ::= SREQ *

                     {default} reduce 13

State 223:
     (32) struct_declaration ::= specifier_qualifier_list struct_declarator_list SEMICOLON *

                     {default} reduce 32

State 224:
     (33) struct_declaration_list ::= struct_declaration *

                     {default} reduce 33

State 225:
     (12) assignment_operator ::= SLEQ *

                     {default} reduce 12

State 226:
     (34) struct_declaration_list ::= struct_declaration_list struct_declaration *

                     {default} reduce 34

State 227:
     (35) struct_or_union_specifier ::= struct_or_union NAME LBRACE struct_declaration_list RBRACE *

                     {default} reduce 35

State 228:
     (11) assignment_operator ::= SUBEQ *

                     {default} reduce 11

State 229:
     (10) assignment_operator ::= ADDEQ *

                     {default} reduce 10

State 230:
     (36) struct_or_union_specifier ::= struct_or_union LBRACE struct_declaration_list RBRACE *

                     {default} reduce 36

State 231:
    (205) init_declarator_list ::= init_declarator_list COMMA init_declarator *

                     {default} reduce 205

State 232:
      (9) assignment_operator ::= MODEQ *

                     {default} reduce 9

State 233:
     (85) cast_expression ::= LPAREN type_name RPAREN cast_expression *

                     {default} reduce 85

State 234:
     (19) enumerator_list ::= enumerator *

                     {default} reduce 19

State 235:
      (8) assignment_operator ::= DIVEQ *

                     {default} reduce 8

State 236:
      (7) assignment_operator ::= MULEQ *

                     {default} reduce 7

State 237:
     (20) enumerator_list ::= enumerator_list COMMA enumerator *

                     {default} reduce 20

State 238:
     (21) enum_specifier ::= ENUM NAME LBRACE enumerator_list RBRACE *

                     {default} reduce 21

State 239:
      (6) assignment_operator ::= EQ *

                     {default} reduce 6

State 240:
     (89) multiplicative_expression ::= multiplicative_expression MOD cast_expression *

                     {default} reduce 89

State 241:
     (22) enum_specifier ::= ENUM LBRACE enumerator_list RBRACE *

                     {default} reduce 22

State 242:
     (88) multiplicative_expression ::= multiplicative_expression DIV cast_expression *

                     {default} reduce 88

State 243:
     (87) multiplicative_expression ::= multiplicative_expression STAR cast_expression *

                     {default} reduce 87

State 244:
    (150) declaration_list ::= declaration *

                     {default} reduce 150

State 245:
     (86) multiplicative_expression ::= cast_expression *

                     {default} reduce 86

State 246:
    (151) declaration_list ::= declaration_list declaration *

                     {default} reduce 151

State 247:
     (84) cast_expression ::= unary_expression *

                     {default} reduce 84

State 248:
    (207) declaration ::= declaration_specifiers init_declarator_list SEMICOLON *

                     {default} reduce 207

State 249:
    (181) direct_abstract_declarator ::= LPAREN abstract_declarator RPAREN *

                     {default} reduce 181

State 250:
    (175) parameter_type_list ::= parameter_list COMMA ELLIPSIS *

                     {default} reduce 175

State 251:
    (137) expression_statement ::= expression SEMICOLON *

                     {default} reduce 137

State 252:
    (206) declaration ::= declaration_specifiers SEMICOLON *

                     {default} reduce 206

State 253:
    (152) code_block ::= LBRACE RBRACE *

                     {default} reduce 152

State 254:
    (120) jump_statement ::= GOTO NAME SEMICOLON *

                     {default} reduce 120

State 255:
    (208) function_definition ::= declaration_specifiers declarator declaration_list code_block *

                     {default} reduce 208

State 256:
    (121) jump_statement ::= CONTINUE SEMICOLON *

                     {default} reduce 121

State 257:
    (209) function_definition ::= declaration_specifiers declarator code_block *

                     {default} reduce 209

State 258:
    (122) jump_statement ::= BREAK SEMICOLON *

                     {default} reduce 122

State 259:
    (173) parameter_list ::= parameter_list COMMA parameter_declaration *

                     {default} reduce 173

State 260:
    (172) parameter_list ::= parameter_declaration *

                     {default} reduce 172

State 261:
    (124) jump_statement ::= RETURN expression SEMICOLON *

                     {default} reduce 124

State 262:
    (123) jump_statement ::= RETURN SEMICOLON *

                     {default} reduce 123

State 263:
      (3) unary_operator ::= SUB *

                     {default} reduce 3

State 264:
    (171) parameter_declaration ::= declaration_specifiers abstract_declarator *

                     {default} reduce 171

State 265:
    (170) parameter_declaration ::= declaration_specifiers declarator *

                     {default} reduce 170

State 266:
    (168) declaration_specifiers ::= type_qualifier declaration_specifiers *

                     {default} reduce 168

State 267:
    (125) iteration_statement ::= WHILE LPAREN expression RPAREN statement *

                     {default} reduce 125

State 268:
    (166) declaration_specifiers ::= type_specifier declaration_specifiers *

                     {default} reduce 166

State 269:
      (2) unary_operator ::= ADD *

                     {default} reduce 2

State 270:
    (210) function_definition ::= declarator declaration_list code_block *

                     {default} reduce 210

State 271:
    (164) declaration_specifiers ::= storage_class_specifier declaration_specifiers *

                     {default} reduce 164

State 272:
    (162) storage_class_specifier ::= REGISTER *

                     {default} reduce 162

State 273:
    (211) function_definition ::= declarator code_block *

                     {default} reduce 211

State 274:
    (126) iteration_statement ::= DO statement WHILE LPAREN expression RPAREN SEMICOLON *

                     {default} reduce 126

State 275:
    (212) external_declaration ::= function_definition *

                     {default} reduce 212

State 276:
    (161) storage_class_specifier ::= AUTO *

                     {default} reduce 161

State 277:
    (160) storage_class_specifier ::= STATIC *

                     {default} reduce 160

State 278:
    (159) storage_class_specifier ::= EXTERN *

                     {default} reduce 159

State 279:
    (158) storage_class_specifier ::= TYPEDEF *

                     {default} reduce 158

State 280:
     (63) type_name ::= specifier_qualifier_list abstract_declarator *

                     {default} reduce 63

State 281:
     (61) specifier_qualifier_list ::= specifier_qualifier_list type_qualifier *

                     {default} reduce 61

State 282:
     (59) specifier_qualifier_list ::= specifier_qualifier_list type_specifier *

                     {default} reduce 59

State 283:
    (134) iteration_statement ::= FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement *

                     {default} reduce 134

State 284:
    (213) external_declaration ::= declaration *

                     {default} reduce 213

State 285:
     (57) pointer ::= STAR pointer *

                     {default} reduce 57

State 286:
     (56) pointer ::= STAR type_qualifier_list pointer *

                     {default} reduce 56

State 287:
     (53) type_qualifier_list ::= type_qualifier_list type_qualifier *

                     {default} reduce 53

State 288:
    (135) selection_statement ::= IF LPAREN expression RPAREN statement *

                     {default} reduce 135

State 289:
    (214) external_declaration_list ::= external_declaration *

                     {default} reduce 214

State 290:
     (52) type_qualifier_list ::= type_qualifier *

                     {default} reduce 52

State 291:
     (58) specifier_qualifier_list ::= type_specifier *

                     {default} reduce 58

State 292:
     (51) type_qualifier ::= VOLATILE *

                     {default} reduce 51

State 293:
    (136) selection_statement ::= SWITCH LPAREN expression RPAREN statement *

                     {default} reduce 136

State 294:
    (138) expression_statement ::= SEMICOLON *

                     {default} reduce 138

State 295:
     (50) type_qualifier ::= CONST *

                     {default} reduce 50

State 296:
      (1) unary_operator ::= STAR *

                     {default} reduce 1

State 297:
     (49) type_specifier ::= TYPEDEF_NAME *

                     {default} reduce 49

State 298:
    (140) labeled_statement ::= CASE constant_expression COLON statement *

                     {default} reduce 140

State 299:
    (215) external_declaration_list ::= external_declaration_list external_declaration *

                     {default} reduce 215

State 300:
     (48) type_specifier ::= enum_specifier *

                     {default} reduce 48

State 301:
    (141) labeled_statement ::= DEFAULT COLON statement *

                     {default} reduce 141

State 302:
    (142) statement ::= labeled_statement *

                     {default} reduce 142

State 303:
    (143) statement ::= code_block *

                     {default} reduce 143

State 304:
    (144) statement ::= expression_statement *

                     {default} reduce 144

State 305:
    (145) statement ::= selection_statement *

                     {default} reduce 145

State 306:
    (146) statement ::= iteration_statement *

                     {default} reduce 146

State 307:
    (147) statement ::= jump_statement *

                     {default} reduce 147

State 308:
     (47) type_specifier ::= struct_or_union_specifier *

                     {default} reduce 47

State 309:
    (130) iteration_statement ::= FOR LPAREN expression SEMICOLON expression SEMICOLON RPAREN statement *

                     {default} reduce 130

State 310:
     (46) type_specifier ::= DOUBLE *

                     {default} reduce 46

State 311:
     (45) type_specifier ::= FLOAT *

                     {default} reduce 45

State 312:
     (44) type_specifier ::= UNSIGNED *

                     {default} reduce 44

State 313:
    (132) iteration_statement ::= FOR LPAREN expression SEMICOLON SEMICOLON expression RPAREN statement *

                     {default} reduce 132

State 314:
     (43) type_specifier ::= SIGNED *

                     {default} reduce 43

State 315:
    (128) iteration_statement ::= FOR LPAREN expression SEMICOLON SEMICOLON RPAREN statement *

                     {default} reduce 128

State 316:
     (42) type_specifier ::= LONG *

                     {default} reduce 42

State 317:
     (41) type_specifier ::= INT *

                     {default} reduce 41

State 318:
     (40) type_specifier ::= SHORT *

                     {default} reduce 40

State 319:
     (39) type_specifier ::= CHAR *

                     {default} reduce 39

State 320:
     (38) type_specifier ::= VOID *

                     {default} reduce 38

State 321:
    (133) iteration_statement ::= FOR LPAREN SEMICOLON expression SEMICOLON expression RPAREN statement *

                     {default} reduce 133

State 322:
     (81) unary_expression ::= unary_operator cast_expression *

                     {default} reduce 81

State 323:
    (129) iteration_statement ::= FOR LPAREN SEMICOLON expression SEMICOLON RPAREN statement *

                     {default} reduce 129

State 324:
     (80) unary_expression ::= SUBSUB unary_expression *

                     {default} reduce 80

State 325:
     (69) primary_expression ::= LPAREN expression RPAREN *

                     {default} reduce 69

State 326:
     (71) postfix_expression ::= postfix_expression LBRACKET expression RBRACKET *

                     {default} reduce 71

State 327:
    (131) iteration_statement ::= FOR LPAREN SEMICOLON SEMICOLON expression RPAREN statement *

                     {default} reduce 131

State 328:
     (70) postfix_expression ::= primary_expression *

                     {default} reduce 70

State 329:
    (127) iteration_statement ::= FOR LPAREN SEMICOLON SEMICOLON RPAREN statement *

                     {default} reduce 127

State 330:
    (139) labeled_statement ::= NAME COLON statement *

                     {default} reduce 139

State 331:
    (148) statement_list ::= statement *

                     {default} reduce 148

State 332:
     (29) struct_declarator ::= declarator COLON constant_expression *

                     {default} reduce 29

State 333:
    (149) statement_list ::= statement_list statement *

                     {default} reduce 149

State 334:
    (153) code_block ::= LBRACE statement_list RBRACE *

                     {default} reduce 153

State 335:
     (25) struct_or_union ::= UNION *

                     {default} reduce 25

State 336:
     (24) struct_or_union ::= STRUCT *

                     {default} reduce 24

State 337:
    (155) code_block ::= LBRACE declaration_list statement_list RBRACE *

                     {default} reduce 155

State 338:
    (154) code_block ::= LBRACE declaration_list RBRACE *

                     {default} reduce 154

State 339:
     (68) primary_expression ::= STRING_LITERAL *

                     {default} reduce 68

State 340:
      (0) unary_operator ::= AND *

                     {default} reduce 0

State 341:
     (67) primary_expression ::= INT_LITERAL *

                     {default} reduce 67

State 342:
    (176) initializer ::= assignment_expression *

                     {default} reduce 176

State 343:
     (66) primary_expression ::= NAME *

                     {default} reduce 66

State 344:
     (26) constant_expression ::= conditional_expression *

                     {default} reduce 26

State 345:
    (177) initializer ::= LBRACE initializer_list RBRACE *

                     {default} reduce 177

State 346:
     (18) enumerator ::= NAME EQ constant_expression *

                     {default} reduce 18

State 347:
    (187) direct_abstract_declarator ::= LPAREN parameter_type_list RPAREN *

                     {default} reduce 187

State 348:
    (186) direct_abstract_declarator ::= LPAREN RPAREN *

                     {default} reduce 186

State 349:
    (193) direct_declarator ::= NAME *

                     {default} reduce 193

State 350:
    (189) direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list RPAREN *

                     {default} reduce 189

State 351:
    (188) direct_abstract_declarator ::= direct_abstract_declarator LPAREN RPAREN *

                     {default} reduce 188

State 352:
    (178) initializer ::= LBRACE initializer_list COMMA RBRACE *

                     {default} reduce 178

State 353:
    (195) direct_declarator ::= direct_declarator LBRACKET constant_expression RBRACKET *

                     {default} reduce 195

State 354:
    (196) direct_declarator ::= direct_declarator LBRACKET RBRACKET *

                     {default} reduce 196

State 355:
    (185) direct_abstract_declarator ::= direct_abstract_declarator LBRACKET constant_expression RBRACKET *

                     {default} reduce 185

State 356:
    (156) identifier_list ::= NAME *

                     {default} reduce 156

State 357:
    (184) direct_abstract_declarator ::= direct_abstract_declarator LBRACKET RBRACKET *

                     {default} reduce 184

State 358:
    (180) initializer_list ::= initializer_list COMMA initializer *

                     {default} reduce 180

State 359:
    (157) identifier_list ::= identifier_list COMMA NAME *

                     {default} reduce 157

State 360:
    (198) direct_declarator ::= direct_declarator LPAREN identifier_list RPAREN *

                     {default} reduce 198

State 361:
    (179) initializer_list ::= initializer *

                     {default} reduce 179

State 362:
    (197) direct_declarator ::= direct_declarator LPAREN parameter_type_list RPAREN *

                     {default} reduce 197

State 363:
    (199) direct_declarator ::= direct_declarator LPAREN RPAREN *

                     {default} reduce 199

State 364:
    (203) init_declarator ::= declarator EQ initializer *

                     {default} reduce 203

State 365:
    (194) direct_declarator ::= LPAREN declarator RPAREN *

                     {default} reduce 194

State 366:
    (183) direct_abstract_declarator ::= LBRACKET constant_expression RBRACKET *

                     {default} reduce 183

State 367:
    (182) direct_abstract_declarator ::= LBRACKET RBRACKET *

                     {default} reduce 182

State 368:
     (60) specifier_qualifier_list ::= type_qualifier *

                     {default} reduce 60

State 369:
     (83) unary_expression ::= SIZEOF LPAREN type_name RPAREN *

                     {default} reduce 83

----------------------------------------------------
Symbols:
    0: $:
    1: AND
    2: STAR
    3: ADD
    4: SUB
    5: TILDE
    6: NOT
    7: EQ
    8: MULEQ
    9: DIVEQ
   10: MODEQ
   11: ADDEQ
   12: SUBEQ
   13: SLEQ
   14: SREQ
   15: ANDEQ
   16: XOREQ
   17: OREQ
   18: NAME
   19: COMMA
   20: ENUM
   21: LBRACE
   22: RBRACE
   23: STRUCT
   24: UNION
   25: COLON
   26: SEMICOLON
   27: VOID
   28: CHAR
   29: SHORT
   30: INT
   31: LONG
   32: SIGNED
   33: UNSIGNED
   34: FLOAT
   35: DOUBLE
   36: TYPEDEF_NAME
   37: CONST
   38: VOLATILE
   39: INT_LITERAL
   40: STRING_LITERAL
   41: LPAREN
   42: RPAREN
   43: LBRACKET
   44: RBRACKET
   45: DOT
   46: ARROW
   47: ADDADD
   48: SUBSUB
   49: SIZEOF
   50: DIV
   51: MOD
   52: SL
   53: SR
   54: LT
   55: GT
   56: LTEQ
   57: GTEQ
   58: EQEQ
   59: NOTEQ
   60: XOR
   61: OR
   62: ANDAND
   63: OROR
   64: QUESTION
   65: GOTO
   66: CONTINUE
   67: BREAK
   68: RETURN
   69: WHILE
   70: DO
   71: FOR
   72: IF
   73: SWITCH
   74: CASE
   75: DEFAULT
   76: TYPEDEF
   77: EXTERN
   78: STATIC
   79: AUTO
   80: REGISTER
   81: ELLIPSIS
   82: END_TOKEN
   83: error:
   84: unary_operator: AND STAR ADD SUB TILDE NOT
   85: assignment_operator: EQ MULEQ DIVEQ MODEQ ADDEQ SUBEQ SLEQ SREQ ANDEQ XOREQ OREQ
   86: enumerator: NAME
   87: constant_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
   88: enumerator_list: NAME
   89: enum_specifier: ENUM
   90: struct_or_union: STRUCT UNION
   91: conditional_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
   92: struct_declarator: STAR NAME COLON LPAREN
   93: declarator: STAR NAME LPAREN
   94: struct_declarator_list: STAR NAME COLON LPAREN
   95: struct_declaration: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE
   96: specifier_qualifier_list: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE
   97: struct_declaration_list: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE
   98: struct_or_union_specifier: STRUCT UNION
   99: type_specifier: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME
  100: type_qualifier: CONST VOLATILE
  101: type_qualifier_list: CONST VOLATILE
  102: pointer: STAR
  103: type_name: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE
  104: abstract_declarator: STAR LPAREN LBRACKET
  105: argument_expression_list: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  106: assignment_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  107: primary_expression: NAME INT_LITERAL STRING_LITERAL LPAREN
  108: expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  109: postfix_expression: NAME INT_LITERAL STRING_LITERAL LPAREN
  110: unary_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  111: cast_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  112: multiplicative_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  113: additive_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  114: shift_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  115: relational_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  116: equality_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  117: and_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  118: exclusive_or_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  119: inclusive_or_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  120: logical_and_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  121: logical_or_expression: AND STAR ADD SUB TILDE NOT NAME INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  122: jump_statement: GOTO CONTINUE BREAK RETURN
  123: iteration_statement: WHILE DO FOR
  124: statement: AND STAR ADD SUB TILDE NOT NAME LBRACE SEMICOLON INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF GOTO CONTINUE BREAK RETURN WHILE DO FOR IF SWITCH CASE DEFAULT
  125: selection_statement: IF SWITCH
  126: expression_statement: AND STAR ADD SUB TILDE NOT NAME SEMICOLON INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  127: labeled_statement: NAME CASE DEFAULT
  128: code_block: LBRACE
  129: statement_list: AND STAR ADD SUB TILDE NOT NAME LBRACE SEMICOLON INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF GOTO CONTINUE BREAK RETURN WHILE DO FOR IF SWITCH CASE DEFAULT
  130: declaration_list: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE TYPEDEF EXTERN STATIC AUTO REGISTER
  131: declaration: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE TYPEDEF EXTERN STATIC AUTO REGISTER
  132: identifier_list: NAME
  133: storage_class_specifier: TYPEDEF EXTERN STATIC AUTO REGISTER
  134: declaration_specifiers: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE TYPEDEF EXTERN STATIC AUTO REGISTER
  135: parameter_declaration: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE TYPEDEF EXTERN STATIC AUTO REGISTER
  136: parameter_list: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE TYPEDEF EXTERN STATIC AUTO REGISTER
  137: parameter_type_list: ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE TYPEDEF EXTERN STATIC AUTO REGISTER
  138: initializer: AND STAR ADD SUB TILDE NOT NAME LBRACE INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  139: initializer_list: AND STAR ADD SUB TILDE NOT NAME LBRACE INT_LITERAL STRING_LITERAL LPAREN ADDADD SUBSUB SIZEOF
  140: direct_abstract_declarator: LPAREN LBRACKET
  141: direct_declarator: NAME LPAREN
  142: init_declarator: STAR NAME LPAREN
  143: init_declarator_list: STAR NAME LPAREN
  144: function_definition: STAR NAME ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE LPAREN TYPEDEF EXTERN STATIC AUTO REGISTER
  145: external_declaration: STAR NAME ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE LPAREN TYPEDEF EXTERN STATIC AUTO REGISTER
  146: external_declaration_list: STAR NAME ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE LPAREN TYPEDEF EXTERN STATIC AUTO REGISTER
  147: program: STAR NAME ENUM STRUCT UNION VOID CHAR SHORT INT LONG SIGNED UNSIGNED FLOAT DOUBLE TYPEDEF_NAME CONST VOLATILE LPAREN TYPEDEF EXTERN STATIC AUTO REGISTER
