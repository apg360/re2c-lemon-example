State 0:
          program ::= * input
      (4) input ::= *
          input ::= * input lines

                       program accept
                         input shift        13     
                     {default} reduce       4      input ::=

State 1:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= LBRACKET * RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= LBRACKET * statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= LBRACKET * declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          compound_statement ::= LBRACKET * declaration_list statement_list RBRACKET
          declaration_list ::= * declaration
          declaration_list ::= * declaration_list declaration
          statement_list ::= * statement
          statement_list ::= * statement_list statement
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        79     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        81     
                        SWITCH shift        82     
                            IF shift        84     
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 98     compound_statement ::= LBRACKET RBRACKET
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          ENUM shift        70     
                      CONTINUE shift        80     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                   declaration shift        2        /* because declaration==declaration_list */
        declaration_specifiers shift        47     
                     statement shift        6        /* because statement==statement_list */
            compound_statement shift        6        /* because compound_statement==statement */
          expression_statement shift        6        /* because expression_statement==statement */
           selection_statement shift        6        /* because selection_statement==statement */
           iteration_statement shift        6        /* because iteration_statement==statement */
                jump_statement shift        6        /* because jump_statement==statement */
                statement_list shift        6      
              declaration_list shift        2      

State 2:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= LBRACKET declaration_list * RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          compound_statement ::= LBRACKET declaration_list * statement_list RBRACKET
          declaration_list ::= declaration_list * declaration
          statement_list ::= * statement
          statement_list ::= * statement_list statement
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        79     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        81     
                        SWITCH shift        82     
                            IF shift        84     
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 100    compound_statement ::= LBRACKET declaration_list RBRACKET
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          ENUM shift        70     
                      CONTINUE shift        80     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                   declaration shift-reduce 103    declaration_list ::= declaration_list declaration
        declaration_specifiers shift        47     
                     statement shift        5        /* because statement==statement_list */
            compound_statement shift        5        /* because compound_statement==statement */
          expression_statement shift        5        /* because expression_statement==statement */
           selection_statement shift        5        /* because selection_statement==statement */
           iteration_statement shift        5        /* because iteration_statement==statement */
                jump_statement shift        5        /* because jump_statement==statement */
                statement_list shift        5      

State 3:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_expression ::= SIZEOF LPAREN * type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          type_name ::= * specifier_qualifier_list
          type_name ::= * specifier_qualifier_list abstract_declarator

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          ENUM shift        70     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        75     
            postfix_expression shift        59     
         assignment_expression shift        75       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                     type_name shift        100    
      specifier_qualifier_list shift        51     

State 4:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          cast_expression ::= LPAREN * type_name RPAREN cast_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          type_name ::= * specifier_qualifier_list
          type_name ::= * specifier_qualifier_list abstract_declarator

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          ENUM shift        70     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        75     
            postfix_expression shift        59     
         assignment_expression shift        75       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                     type_name shift        87     
      specifier_qualifier_list shift        51     

State 5:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          compound_statement ::= LBRACKET declaration_list statement_list * RBRACKET
          statement_list ::= statement_list * statement
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        79     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        81     
                        SWITCH shift        82     
                            IF shift        84     
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 101    compound_statement ::= LBRACKET declaration_list statement_list RBRACKET
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        80     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                     statement shift-reduce 105    statement_list ::= statement_list statement
            compound_statement shift-reduce 105    statement_list ::= statement_list statement  /* because compound_statement==statement */
          expression_statement shift-reduce 105    statement_list ::= statement_list statement  /* because expression_statement==statement */
           selection_statement shift-reduce 105    statement_list ::= statement_list statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 105    statement_list ::= statement_list statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 105    statement_list ::= statement_list statement  /* because jump_statement==statement */

State 6:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= LBRACKET statement_list * RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          statement_list ::= statement_list * statement
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        79     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        81     
                        SWITCH shift        82     
                            IF shift        84     
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 99     compound_statement ::= LBRACKET statement_list RBRACKET
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        80     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                     statement shift-reduce 105    statement_list ::= statement_list statement
            compound_statement shift-reduce 105    statement_list ::= statement_list statement  /* because compound_statement==statement */
          expression_statement shift-reduce 105    statement_list ::= statement_list statement  /* because expression_statement==statement */
           selection_statement shift-reduce 105    statement_list ::= statement_list statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 105    statement_list ::= statement_list statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 105    statement_list ::= statement_list statement  /* because jump_statement==statement */

State 7:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN * statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        79     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        81     
                        SWITCH shift        82     
                            IF shift        84     
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        80     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                     statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement
            compound_statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because compound_statement==statement */
          expression_statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because expression_statement==statement */
           selection_statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because jump_statement==statement */

State 8:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN * statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        79     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        81     
                        SWITCH shift        82     
                            IF shift        84     
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        80     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                     statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement
            compound_statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because compound_statement==statement */
          expression_statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because expression_statement==statement */
           selection_statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because jump_statement==statement */

State 9:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          selection_statement ::= SWITCH LPAREN expression RPAREN * statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        79     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        81     
                        SWITCH shift        82     
                            IF shift        84     
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        80     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                     statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement
            compound_statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because compound_statement==statement */
          expression_statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because expression_statement==statement */
           selection_statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because jump_statement==statement */

State 10:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= IF LPAREN expression RPAREN statement ELSE * statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        79     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        81     
                        SWITCH shift        82     
                            IF shift        84     
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        80     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                     statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement
            compound_statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because compound_statement==statement */
          expression_statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because expression_statement==statement */
           selection_statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because jump_statement==statement */

State 11:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= IF LPAREN expression RPAREN * statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= IF LPAREN expression RPAREN * statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        79     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        81     
                        SWITCH shift        82     
                            IF shift        84     
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        80     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
                     statement shift        83     
            compound_statement shift        83       /* because compound_statement==statement */
          expression_statement shift        83       /* because expression_statement==statement */
           selection_statement shift        83       /* because selection_statement==statement */
           iteration_statement shift        83       /* because iteration_statement==statement */
                jump_statement shift        83       /* because jump_statement==statement */

State 12:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= LPAREN * declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= LPAREN * abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= LPAREN * RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= LPAREN * parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        12     
                        RPAREN shift-reduce 84     direct_abstract_declarator ::= LPAREN RPAREN
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      LSQUAREB shift        89     
                          ENUM shift        70     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
        declaration_specifiers shift        46     
                    declarator shift        93     
             direct_declarator shift        71     
           parameter_type_list shift        88     
                parameter_list shift        94     
         parameter_declaration shift        94       /* because parameter_declaration==parameter_list */
           abstract_declarator shift        90     
    direct_abstract_declarator shift        66     

State 13:
      (3) program ::= input *
          input ::= input * lines
          lines ::= * translation_unit END_OF_LINE|END_OF_FILE
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          translation_unit ::= * external_declaration
          translation_unit ::= * translation_unit external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          function_definition ::= * declarator declaration_list compound_statement
          function_definition ::= * declarator compound_statement

                             $ reduce       3      program ::= input
                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                         lines shift-reduce 5      input ::= input lines
              translation_unit shift        14     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
                   declaration shift        14       /* because declaration==translation_unit */
        declaration_specifiers shift        47     
                    declarator shift        17     
             direct_declarator shift        71     
          external_declaration shift        14       /* because external_declaration==translation_unit */
           function_definition shift        14       /* because function_definition==external_declaration */

State 14:
          lines ::= translation_unit * END_OF_LINE|END_OF_FILE
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          translation_unit ::= translation_unit * external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          function_definition ::= * declarator declaration_list compound_statement
          function_definition ::= * declarator compound_statement

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                   END_OF_LINE shift-reduce 0      lines ::= translation_unit END_OF_LINE|END_OF_FILE
                   END_OF_FILE shift-reduce 0      lines ::= translation_unit END_OF_LINE|END_OF_FILE
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
                   declaration shift-reduce 118    translation_unit ::= translation_unit external_declaration  /* because declaration==external_declaration */
        declaration_specifiers shift        47     
                    declarator shift        17     
             direct_declarator shift        71     
          external_declaration shift-reduce 118    translation_unit ::= translation_unit external_declaration
           function_definition shift-reduce 118    translation_unit ::= translation_unit external_declaration  /* because function_definition==external_declaration */

State 15:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= LPAREN * abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= LPAREN * RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= LPAREN * parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN

                        LPAREN shift        15     
                        RPAREN shift-reduce 84     direct_abstract_declarator ::= LPAREN RPAREN
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      LSQUAREB shift        89     
                          ENUM shift        70     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
        declaration_specifiers shift        46     
           parameter_type_list shift        88     
                parameter_list shift        94     
         parameter_declaration shift        94       /* because parameter_declaration==parameter_list */
           abstract_declarator shift        90     
    direct_abstract_declarator shift        66     

State 16:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          direct_declarator ::= direct_declarator LPAREN * parameter_type_list RPAREN
          direct_declarator ::= direct_declarator LPAREN * identifier_list RPAREN
          direct_declarator ::= direct_declarator LPAREN * RPAREN
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER

                    IDENTIFIER shift-reduce 76     identifier_list ::= IDENTIFIER
                        RPAREN shift-reduce 68     direct_declarator ::= direct_declarator LPAREN RPAREN
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
        declaration_specifiers shift        46     
           parameter_type_list shift        96     
               identifier_list shift        67     
                parameter_list shift        94     
         parameter_declaration shift        94       /* because parameter_declaration==parameter_list */

State 17:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          declaration_list ::= * declaration
          declaration_list ::= * declaration_list declaration
          function_definition ::= declarator * declaration_list compound_statement
          function_definition ::= declarator * compound_statement

                      LBRACKET shift        1      
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
                   declaration shift        19       /* because declaration==declaration_list */
        declaration_specifiers shift        47     
            compound_statement shift-reduce 122    function_definition ::= declarator compound_statement
              declaration_list shift        19     

State 18:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN * RPAREN
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN * parameter_type_list RPAREN

                        RPAREN shift-reduce 86     direct_abstract_declarator ::= direct_abstract_declarator LPAREN RPAREN
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
        declaration_specifiers shift        46     
           parameter_type_list shift        91     
                parameter_list shift        94     
         parameter_declaration shift        94       /* because parameter_declaration==parameter_list */

State 19:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          declaration_list ::= declaration_list * declaration
          function_definition ::= declarator declaration_list * compound_statement

                      LBRACKET shift        1      
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
                   declaration shift-reduce 103    declaration_list ::= declaration_list declaration
        declaration_specifiers shift        47     
            compound_statement shift-reduce 121    function_definition ::= declarator declaration_list compound_statement

State 20:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          iteration_statement ::= FOR LPAREN expression_statement * expression_statement RPAREN statement
          iteration_statement ::= FOR LPAREN expression_statement * expression_statement expression RPAREN statement

                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
          expression_statement shift        26     

State 21:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          iteration_statement ::= FOR LPAREN * expression_statement expression_statement RPAREN statement
          iteration_statement ::= FOR LPAREN * expression_statement expression_statement expression RPAREN statement

                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        59     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     
          expression_statement shift        20     

State 22:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          initializer ::= * assignment_expression
          initializer ::= * LBRACKET initializer_list RBRACKET
          initializer ::= LBRACKET * initializer_list RBRACKET
          initializer ::= * LBRACKET initializer_list COMMA RBRACKET
          initializer ::= LBRACKET * initializer_list COMMA RBRACKET
          initializer_list ::= * initializer
          initializer_list ::= * initializer_list COMMA initializer

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        22     
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
         assignment_expression shift        64       /* because assignment_expression==initializer_list */
              unary_expression shift        55     
                unary_operator shift        41     
                   initializer shift        64       /* because initializer==initializer_list */
              initializer_list shift        64     

State 23:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union LBRACKET * struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
       struct_declaration_list shift        28     
            struct_declaration shift        28       /* because struct_declaration==struct_declaration_list */
      specifier_qualifier_list shift        48     

State 24:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET * struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
       struct_declaration_list shift        30     
            struct_declaration shift        30       /* because struct_declaration==struct_declaration_list */
      specifier_qualifier_list shift        48     

State 25:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          initializer ::= * assignment_expression
          initializer ::= * LBRACKET initializer_list RBRACKET
          initializer ::= * LBRACKET initializer_list COMMA RBRACKET
          initializer ::= LBRACKET initializer_list COMMA * RBRACKET
          initializer_list ::= initializer_list COMMA * initializer

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        22     
                      RBRACKET shift-reduce 90     initializer ::= LBRACKET initializer_list COMMA RBRACKET
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
         assignment_expression shift-reduce 92     initializer_list ::= initializer_list COMMA initializer  /* because assignment_expression==initializer */
              unary_expression shift        55     
                unary_operator shift        41     
                   initializer shift-reduce 92     initializer_list ::= initializer_list COMMA initializer

State 26:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression_statement expression_statement * RPAREN statement
          iteration_statement ::= FOR LPAREN expression_statement expression_statement * expression RPAREN statement

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                        RPAREN shift        7      
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        60     
            postfix_expression shift        59     
         assignment_expression shift        60       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     

State 27:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= postfix_expression LPAREN * RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= postfix_expression LPAREN * argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          argument_expression_list ::= * assignment_expression
          argument_expression_list ::= * argument_expression_list COMMA assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                        RPAREN shift-reduce 17     postfix_expression ::= postfix_expression LPAREN RPAREN
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
      argument_expression_list shift        65     
         assignment_expression shift        65       /* because assignment_expression==argument_expression_list */
              unary_expression shift        55     
                unary_operator shift        41     

State 28:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union LBRACKET struct_declaration_list * RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                      RBRACKET shift-reduce 46     struct_or_union_specifier ::= struct_or_union LBRACKET struct_declaration_list RBRACKET
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
            struct_declaration shift-reduce 49     struct_declaration_list ::= struct_declaration_list struct_declaration
      specifier_qualifier_list shift        48     

State 29:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          parameter_type_list ::= parameter_list COMMA * ELLIPSIS
          parameter_list ::= parameter_list COMMA * parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers

                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                      ELLIPSIS shift-reduce 70     parameter_type_list ::= parameter_list COMMA ELLIPSIS
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
        declaration_specifiers shift        46     
         parameter_declaration shift-reduce 72     parameter_list ::= parameter_list COMMA parameter_declaration

State 30:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET struct_declaration_list * RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                      RBRACKET shift-reduce 45     struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
            struct_declaration shift-reduce 49     struct_declaration_list ::= struct_declaration_list struct_declaration
      specifier_qualifier_list shift        48     

State 31:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          init_declarator ::= declarator ASSIGN * initializer
          initializer ::= * assignment_expression
          initializer ::= * LBRACKET initializer_list RBRACKET
          initializer ::= * LBRACKET initializer_list COMMA RBRACKET

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                      LBRACKET shift        22     
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
         assignment_expression shift-reduce 44     init_declarator ::= declarator ASSIGN initializer  /* because assignment_expression==initializer */
              unary_expression shift        55     
                unary_operator shift        41     
                   initializer shift-reduce 44     init_declarator ::= declarator ASSIGN initializer

State 32:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          selection_statement ::= SWITCH LPAREN * expression RPAREN statement

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        61     
            postfix_expression shift        59     
         assignment_expression shift        61       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     

State 33:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          selection_statement ::= IF LPAREN * expression RPAREN statement
          selection_statement ::= IF LPAREN * expression RPAREN statement ELSE statement

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        62     
            postfix_expression shift        59     
         assignment_expression shift        62       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     

State 34:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= postfix_expression LSQUAREB * expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        74     
            postfix_expression shift        59     
         assignment_expression shift        74       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     

State 35:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        75     
            postfix_expression shift        59     
         assignment_expression shift        75       /* because assignment_expression==expression */
              unary_expression shift        55     
                unary_operator shift        41     

State 36:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          argument_expression_list ::= argument_expression_list COMMA * assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
         assignment_expression shift-reduce 24     argument_expression_list ::= argument_expression_list COMMA assignment_expression
              unary_expression shift        55     
                unary_operator shift        41     

State 37:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          cast_expression ::= LPAREN type_name RPAREN * cast_expression

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        4      
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
              unary_expression shift-reduce 33     cast_expression ::= LPAREN type_name RPAREN cast_expression  /* because unary_expression==cast_expression */
                unary_operator shift        41     
               cast_expression shift-reduce 33     cast_expression ::= LPAREN type_name RPAREN cast_expression

State 38:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= type_specifier * specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
     (52) specifier_qualifier_list ::= type_specifier *
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
      specifier_qualifier_list shift-reduce 51     specifier_qualifier_list ::= type_specifier specifier_qualifier_list
                     {default} reduce       52     specifier_qualifier_list ::= type_specifier

State 39:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
     (39) declaration_specifiers ::= type_specifier *
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= type_specifier * declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        70     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        73     
        declaration_specifiers shift-reduce 40     declaration_specifiers ::= type_specifier declaration_specifiers
                     {default} reduce       39     declaration_specifiers ::= type_specifier

State 40:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          assignment_expression ::= unary_expression assignment_operator * assignment_expression

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
         assignment_expression shift-reduce 34     assignment_expression ::= unary_expression assignment_operator assignment_expression
              unary_expression shift        55     
                unary_operator shift        41     

State 41:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= unary_operator * cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        4      
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
              unary_expression shift-reduce 28     unary_expression ::= unary_operator cast_expression  /* because unary_expression==cast_expression */
                unary_operator shift        41     
               cast_expression shift-reduce 28     unary_expression ::= unary_operator cast_expression

State 42:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= expression COMMA * assignment_expression

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
         assignment_expression shift-reduce 36     expression ::= expression COMMA assignment_expression
              unary_expression shift        55     
                unary_operator shift        41     

State 43:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= SIZEOF * unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_expression ::= SIZEOF * LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        3      
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
              unary_expression shift-reduce 29     unary_expression ::= SIZEOF unary_expression
                unary_operator shift        41     

State 44:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= DEC_OP * unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
              unary_expression shift-reduce 27     unary_expression ::= DEC_OP unary_expression
                unary_operator shift        41     

State 45:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= INC_OP * unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT

                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                        SIZEOF shift        43     
                           REF shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 31     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
              unary_expression shift-reduce 26     unary_expression ::= INC_OP unary_expression
                unary_operator shift        41     

State 46:
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          parameter_declaration ::= declaration_specifiers * declarator
          parameter_declaration ::= declaration_specifiers * abstract_declarator
     (75) parameter_declaration ::= declaration_specifiers *
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        12     
                      LSQUAREB shift        89     
                    declarator shift-reduce 73     parameter_declaration ::= declaration_specifiers declarator
             direct_declarator shift        71     
           abstract_declarator shift-reduce 74     parameter_declaration ::= declaration_specifiers abstract_declarator
    direct_abstract_declarator shift        66     
                     {default} reduce       75     parameter_declaration ::= declaration_specifiers

State 47:
          declaration ::= declaration_specifiers * SEMCOL
          declaration ::= declaration_specifiers * init_declarator_list SEMCOL
          init_declarator_list ::= * init_declarator
          init_declarator_list ::= * init_declarator_list COMMA init_declarator
          init_declarator ::= * declarator
          init_declarator ::= * declarator ASSIGN initializer
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                        SEMCOL shift-reduce 37     declaration ::= declaration_specifiers SEMCOL
                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
          init_declarator_list shift        76     
               init_declarator shift        76       /* because init_declarator==init_declarator_list */
                    declarator shift        101    
             direct_declarator shift        71     

State 48:
          struct_declaration ::= specifier_qualifier_list * struct_declarator_list SEMCOL
          struct_declarator_list ::= * struct_declarator
          struct_declarator_list ::= * struct_declarator_list COMMA struct_declarator
          struct_declarator ::= * declarator
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                    declarator shift        72       /* because declarator==struct_declarator_list */
        struct_declarator_list shift        72     
             struct_declarator shift        72       /* because struct_declarator==struct_declarator_list */
             direct_declarator shift        71     

State 49:
          struct_declarator_list ::= struct_declarator_list COMMA * struct_declarator
          struct_declarator ::= * declarator
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                    declarator shift-reduce 54     struct_declarator_list ::= struct_declarator_list COMMA struct_declarator  /* because declarator==struct_declarator */
             struct_declarator shift-reduce 54     struct_declarator_list ::= struct_declarator_list COMMA struct_declarator
             direct_declarator shift        71     

State 50:
          init_declarator_list ::= init_declarator_list COMMA * init_declarator
          init_declarator ::= * declarator
          init_declarator ::= * declarator ASSIGN initializer
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
               init_declarator shift-reduce 42     init_declarator_list ::= init_declarator_list COMMA init_declarator
                    declarator shift        101    
             direct_declarator shift        71     

State 51:
     (78) type_name ::= specifier_qualifier_list *
          type_name ::= specifier_qualifier_list * abstract_declarator
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN

                        LPAREN shift        15     
                      LSQUAREB shift        89     
           abstract_declarator shift-reduce 79     type_name ::= specifier_qualifier_list abstract_declarator
    direct_abstract_declarator shift        66     
                     {default} reduce       78     type_name ::= specifier_qualifier_list

State 52:
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= LPAREN * declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                    declarator shift        93     
             direct_declarator shift        71     

State 53:
          enum_specifier ::= ENUM IDENTIFIER LBRACKET * enumerator_list RBRACKET
          enumerator_list ::= * enumerator
          enumerator_list ::= * enumerator_list COMMA enumerator
          enumerator ::= * IDENTIFIER

                    IDENTIFIER shift-reduce 61     enumerator ::= IDENTIFIER
               enumerator_list shift        68     
                    enumerator shift        68       /* because enumerator==enumerator_list */

State 54:
          enum_specifier ::= ENUM LBRACKET * enumerator_list RBRACKET
          enumerator_list ::= * enumerator
          enumerator_list ::= * enumerator_list COMMA enumerator
          enumerator ::= * IDENTIFIER

                    IDENTIFIER shift-reduce 61     enumerator ::= IDENTIFIER
               enumerator_list shift        69     
                    enumerator shift        69       /* because enumerator==enumerator_list */

State 55:
          assignment_operator ::= * ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
          assignment_expression ::= unary_expression * assignment_operator assignment_expression

                        ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                   STAR_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    DIV_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    MOD_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    ADD_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    SUB_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                   LEFT_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                  RIGHT_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    AND_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    XOR_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                     OR_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
           assignment_operator shift        40     

State 56:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          jump_statement ::= RETURN * SEMCOL
          jump_statement ::= RETURN * primary_expression SEMCOL

                        SEMCOL shift-reduce 1      jump_statement ::= RETURN SEMCOL
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
            primary_expression shift        77     

State 57:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          jump_statement ::= BREAK * SEMCOL
          jump_statement ::= BREAK * primary_expression SEMCOL

                        SEMCOL shift-reduce 115    jump_statement ::= BREAK SEMCOL
                    IDENTIFIER shift-reduce 11     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                      CONSTANT shift-reduce 12     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 13     primary_expression ::= STRING_LITERAL
            primary_expression shift        78     

State 58:
          enumerator_list ::= enumerator_list COMMA * enumerator
          enumerator ::= * IDENTIFIER

                    IDENTIFIER shift-reduce 61     enumerator ::= IDENTIFIER
                    enumerator shift-reduce 60     enumerator_list ::= enumerator_list COMMA enumerator

State 59:
          postfix_expression ::= postfix_expression * LSQUAREB expression RSQUAREB
          postfix_expression ::= postfix_expression * LPAREN RPAREN
          postfix_expression ::= postfix_expression * LPAREN argument_expression_list RPAREN
          postfix_expression ::= postfix_expression * DOT IDENTIFIER
          postfix_expression ::= postfix_expression * PTR_OP IDENTIFIER
          postfix_expression ::= postfix_expression * INC_OP
          postfix_expression ::= postfix_expression * DEC_OP
     (25) unary_expression ::= postfix_expression *

                        LPAREN shift        27     
                      LSQUAREB shift        34     
                           DOT shift        86     
                        PTR_OP shift        85     
                        INC_OP shift-reduce 21     postfix_expression ::= postfix_expression INC_OP
                        DEC_OP shift-reduce 22     postfix_expression ::= postfix_expression DEC_OP
                     {default} reduce       25     unary_expression ::= postfix_expression

State 60:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression_statement expression_statement expression * RPAREN statement

                        RPAREN shift        8      
                         COMMA shift        42     

State 61:
          expression ::= expression * COMMA assignment_expression
          selection_statement ::= SWITCH LPAREN expression * RPAREN statement

                        RPAREN shift        9      
                         COMMA shift        42     

State 62:
          expression ::= expression * COMMA assignment_expression
          selection_statement ::= IF LPAREN expression * RPAREN statement
          selection_statement ::= IF LPAREN expression * RPAREN statement ELSE statement

                        RPAREN shift        11     
                         COMMA shift        42     

State 63:
          expression ::= expression * COMMA assignment_expression
          expression_statement ::= expression * SEMCOL

                        SEMCOL shift-reduce 107    expression_statement ::= expression SEMCOL
                         COMMA shift        42     

State 64:
          initializer ::= LBRACKET initializer_list * RBRACKET
          initializer ::= LBRACKET initializer_list * COMMA RBRACKET
          initializer_list ::= initializer_list * COMMA initializer

                      RBRACKET shift-reduce 89     initializer ::= LBRACKET initializer_list RBRACKET
                         COMMA shift        25     

State 65:
          postfix_expression ::= postfix_expression LPAREN argument_expression_list * RPAREN
          argument_expression_list ::= argument_expression_list * COMMA assignment_expression

                        RPAREN shift-reduce 18     postfix_expression ::= postfix_expression LPAREN argument_expression_list RPAREN
                         COMMA shift        36     

State 66:
     (80) abstract_declarator ::= direct_abstract_declarator *
          direct_abstract_declarator ::= direct_abstract_declarator * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= direct_abstract_declarator * LPAREN RPAREN
          direct_abstract_declarator ::= direct_abstract_declarator * LPAREN parameter_type_list RPAREN

                        LPAREN shift        18     
                      LSQUAREB shift        92     
                     {default} reduce       80     abstract_declarator ::= direct_abstract_declarator

State 67:
          direct_declarator ::= direct_declarator LPAREN identifier_list * RPAREN
          identifier_list ::= identifier_list * COMMA IDENTIFIER

                        RPAREN shift-reduce 67     direct_declarator ::= direct_declarator LPAREN identifier_list RPAREN
                         COMMA shift        95     

State 68:
          enum_specifier ::= ENUM IDENTIFIER LBRACKET enumerator_list * RBRACKET
          enumerator_list ::= enumerator_list * COMMA enumerator

                      RBRACKET shift-reduce 57     enum_specifier ::= ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
                         COMMA shift        58     

State 69:
          enum_specifier ::= ENUM LBRACKET enumerator_list * RBRACKET
          enumerator_list ::= enumerator_list * COMMA enumerator

                      RBRACKET shift-reduce 56     enum_specifier ::= ENUM LBRACKET enumerator_list RBRACKET
                         COMMA shift        58     

State 70:
          enum_specifier ::= ENUM * LBRACKET enumerator_list RBRACKET
          enum_specifier ::= ENUM * IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= ENUM * IDENTIFIER

                    IDENTIFIER shift        97     
                      LBRACKET shift        54     

State 71:
     (62) declarator ::= direct_declarator *
          direct_declarator ::= direct_declarator * LSQUAREB RSQUAREB
          direct_declarator ::= direct_declarator * LPAREN parameter_type_list RPAREN
          direct_declarator ::= direct_declarator * LPAREN identifier_list RPAREN
          direct_declarator ::= direct_declarator * LPAREN RPAREN

                        LPAREN shift        16     
                      LSQUAREB shift        98     
                     {default} reduce       62     declarator ::= direct_declarator

State 72:
          struct_declaration ::= specifier_qualifier_list struct_declarator_list * SEMCOL
          struct_declarator_list ::= struct_declarator_list * COMMA struct_declarator

                        SEMCOL shift-reduce 50     struct_declaration ::= specifier_qualifier_list struct_declarator_list SEMCOL
                         COMMA shift        49     

State 73:
          struct_or_union_specifier ::= struct_or_union * IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union * LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union * IDENTIFIER

                    IDENTIFIER shift        99     
                      LBRACKET shift        23     

State 74:
          postfix_expression ::= postfix_expression LSQUAREB expression * RSQUAREB
          expression ::= expression * COMMA assignment_expression

                      RSQUAREB shift-reduce 16     postfix_expression ::= postfix_expression LSQUAREB expression RSQUAREB
                         COMMA shift        42     

State 75:
          primary_expression ::= LPAREN expression * RPAREN
          expression ::= expression * COMMA assignment_expression

                        RPAREN shift-reduce 14     primary_expression ::= LPAREN expression RPAREN
                         COMMA shift        42     

State 76:
          declaration ::= declaration_specifiers init_declarator_list * SEMCOL
          init_declarator_list ::= init_declarator_list * COMMA init_declarator

                        SEMCOL shift-reduce 38     declaration ::= declaration_specifiers init_declarator_list SEMCOL
                         COMMA shift        50     

State 77:
          jump_statement ::= RETURN primary_expression * SEMCOL

                        SEMCOL shift-reduce 2      jump_statement ::= RETURN primary_expression SEMCOL

State 78:
          jump_statement ::= BREAK primary_expression * SEMCOL

                        SEMCOL shift-reduce 116    jump_statement ::= BREAK primary_expression SEMCOL

State 79:
          jump_statement ::= FALLTHROUGH * SEMCOL

                        SEMCOL shift-reduce 114    jump_statement ::= FALLTHROUGH SEMCOL

State 80:
          jump_statement ::= CONTINUE * SEMCOL

                        SEMCOL shift-reduce 113    jump_statement ::= CONTINUE SEMCOL

State 81:
          iteration_statement ::= FOR * LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= FOR * LPAREN expression_statement expression_statement expression RPAREN statement

                        LPAREN shift        21     

State 82:
          selection_statement ::= SWITCH * LPAREN expression RPAREN statement

                        LPAREN shift        32     

State 83:
    (108) selection_statement ::= IF LPAREN expression RPAREN statement *
          selection_statement ::= IF LPAREN expression RPAREN statement * ELSE statement

                          ELSE shift        10     
                          ELSE reduce       108     ** Parsing conflict **
                     {default} reduce       108    selection_statement ::= IF LPAREN expression RPAREN statement

State 84:
          selection_statement ::= IF * LPAREN expression RPAREN statement
          selection_statement ::= IF * LPAREN expression RPAREN statement ELSE statement

                        LPAREN shift        33     

State 85:
          postfix_expression ::= postfix_expression PTR_OP * IDENTIFIER

                    IDENTIFIER shift-reduce 20     postfix_expression ::= postfix_expression PTR_OP IDENTIFIER

State 86:
          postfix_expression ::= postfix_expression DOT * IDENTIFIER

                    IDENTIFIER shift-reduce 19     postfix_expression ::= postfix_expression DOT IDENTIFIER

State 87:
          cast_expression ::= LPAREN type_name * RPAREN cast_expression

                        RPAREN shift        37     

State 88:
          direct_abstract_declarator ::= LPAREN parameter_type_list * RPAREN

                        RPAREN shift-reduce 85     direct_abstract_declarator ::= LPAREN parameter_type_list RPAREN

State 89:
          direct_abstract_declarator ::= LSQUAREB * RSQUAREB

                      RSQUAREB shift-reduce 82     direct_abstract_declarator ::= LSQUAREB RSQUAREB

State 90:
          direct_abstract_declarator ::= LPAREN abstract_declarator * RPAREN

                        RPAREN shift-reduce 81     direct_abstract_declarator ::= LPAREN abstract_declarator RPAREN

State 91:
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list * RPAREN

                        RPAREN shift-reduce 87     direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list RPAREN

State 92:
          direct_abstract_declarator ::= direct_abstract_declarator LSQUAREB * RSQUAREB

                      RSQUAREB shift-reduce 83     direct_abstract_declarator ::= direct_abstract_declarator LSQUAREB RSQUAREB

State 93:
          direct_declarator ::= LPAREN declarator * RPAREN

                        RPAREN shift-reduce 64     direct_declarator ::= LPAREN declarator RPAREN

State 94:
     (69) parameter_type_list ::= parameter_list *
          parameter_type_list ::= parameter_list * COMMA ELLIPSIS
          parameter_list ::= parameter_list * COMMA parameter_declaration

                         COMMA shift        29     
                     {default} reduce       69     parameter_type_list ::= parameter_list

State 95:
          identifier_list ::= identifier_list COMMA * IDENTIFIER

                    IDENTIFIER shift-reduce 77     identifier_list ::= identifier_list COMMA IDENTIFIER

State 96:
          direct_declarator ::= direct_declarator LPAREN parameter_type_list * RPAREN

                        RPAREN shift-reduce 66     direct_declarator ::= direct_declarator LPAREN parameter_type_list RPAREN

State 97:
          enum_specifier ::= ENUM IDENTIFIER * LBRACKET enumerator_list RBRACKET
     (58) enum_specifier ::= ENUM IDENTIFIER *

                      LBRACKET shift        53     
                     {default} reduce       58     enum_specifier ::= ENUM IDENTIFIER

State 98:
          direct_declarator ::= direct_declarator LSQUAREB * RSQUAREB

                      RSQUAREB shift-reduce 65     direct_declarator ::= direct_declarator LSQUAREB RSQUAREB

State 99:
          struct_or_union_specifier ::= struct_or_union IDENTIFIER * LBRACKET struct_declaration_list RBRACKET
     (47) struct_or_union_specifier ::= struct_or_union IDENTIFIER *

                      LBRACKET shift        24     
                     {default} reduce       47     struct_or_union_specifier ::= struct_or_union IDENTIFIER

State 100:
          unary_expression ::= SIZEOF LPAREN type_name * RPAREN

                        RPAREN shift-reduce 30     unary_expression ::= SIZEOF LPAREN type_name RPAREN

State 101:
     (43) init_declarator ::= declarator *
          init_declarator ::= declarator * ASSIGN initializer

                        ASSIGN shift        31     
                     {default} reduce       43     init_declarator ::= declarator

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: DEFAULT (precedence=1)
    2: BREAK (precedence=1)
    3: RETURN (precedence=1)
    4: FALLTHROUGH (precedence=1)
    5: SEMCOL (precedence=1)
    6: FOR (precedence=1)
    7: SWITCH (precedence=1)
    8: IF (precedence=1)
    9: VARTYPE (precedence=1)
   10: IDENTIFIER (precedence=1)
   11: ASSIGN (precedence=1)
   12: AND (precedence=2)
   13: OR (precedence=3)
   14: EQ (precedence=4)
   15: NE (precedence=4)
   16: GT (precedence=4)
   17: GE (precedence=4)
   18: LT (precedence=4)
   19: LE (precedence=4)
   20: ADD (precedence=5)
   21: SUB (precedence=5)
   22: MUL (precedence=6)
   23: DIV (precedence=6)
   24: MOD (precedence=6)
   25: POS (precedence=7)
   26: NEG (precedence=7)
   27: LBRACKET (precedence=8)
   28: RBRACKET (precedence=8)
   29: LPAREN (precedence=8)
   30: RPAREN (precedence=8)
   31: EXP (precedence=9)
   32: NOT (precedence=9)
   33: END_OF_LINE
   34: END_OF_FILE
   35: STAR_ASSIGN
   36: DIV_ASSIGN
   37: MOD_ASSIGN
   38: ADD_ASSIGN
   39: SUB_ASSIGN
   40: LEFT_ASSIGN
   41: RIGHT_ASSIGN
   42: AND_ASSIGN
   43: XOR_ASSIGN
   44: OR_ASSIGN
   45: VOID
   46: CHAR
   47: SHORT
   48: INT
   49: LONG
   50: FLOAT
   51: DOUBLE
   52: SIGNED
   53: UNSIGNED
   54: TYPE_NAME
   55: STRUCT
   56: UNION
   57: CONSTANT
   58: STRING_LITERAL
   59: LSQUAREB
   60: RSQUAREB
   61: DOT
   62: PTR_OP
   63: INC_OP
   64: DEC_OP
   65: COMMA
   66: SIZEOF
   67: REF
   68: STAR
   69: PLUS
   70: MINUS
   71: TILDE
   72: ENUM
   73: ELLIPSIS
   74: ELSE
   75: CONTINUE
   76: program: <lambda> IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   77: input: <lambda> IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   78: lines: IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   79: translation_unit: IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   80: assignment_operator: ASSIGN STAR_ASSIGN DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN SUB_ASSIGN LEFT_ASSIGN RIGHT_ASSIGN AND_ASSIGN XOR_ASSIGN OR_ASSIGN
   81: type_specifier: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   82: struct_or_union_specifier: STRUCT UNION
   83: enum_specifier: ENUM
   84: struct_or_union: STRUCT UNION
   85: primary_expression: IDENTIFIER LPAREN CONSTANT STRING_LITERAL
   86: expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   87: postfix_expression: IDENTIFIER LPAREN CONSTANT STRING_LITERAL
   88: argument_expression_list: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   89: assignment_expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   90: unary_expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   91: unary_operator: NOT REF STAR PLUS MINUS TILDE
   92: cast_expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   93: type_name: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   94: declaration: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   95: declaration_specifiers: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   96: init_declarator_list: IDENTIFIER LPAREN
   97: init_declarator: IDENTIFIER LPAREN
   98: declarator: IDENTIFIER LPAREN
   99: initializer: IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
  100: struct_declaration_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  101: struct_declaration: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  102: specifier_qualifier_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  103: struct_declarator_list: IDENTIFIER LPAREN
  104: struct_declarator: IDENTIFIER LPAREN
  105: enumerator_list: IDENTIFIER
  106: enumerator: IDENTIFIER
  107: direct_declarator: IDENTIFIER LPAREN
  108: parameter_type_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  109: identifier_list: IDENTIFIER
  110: parameter_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  111: parameter_declaration: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  112: abstract_declarator: LPAREN LSQUAREB
  113: direct_abstract_declarator: LPAREN LSQUAREB
  114: initializer_list: IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
  115: statement: BREAK RETURN FALLTHROUGH SEMCOL FOR SWITCH IF IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE CONTINUE
  116: compound_statement: LBRACKET
  117: expression_statement: SEMCOL IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
  118: selection_statement: SWITCH IF
  119: iteration_statement: FOR
  120: jump_statement: BREAK RETURN FALLTHROUGH CONTINUE
  121: statement_list: BREAK RETURN FALLTHROUGH SEMCOL FOR SWITCH IF IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE CONTINUE
  122: declaration_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  123: external_declaration: IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  124: function_definition: IDENTIFIER LPAREN
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ DEFAULT BREAK RETURN FALLTHROUGH SEMCOL FOR SWITCH IF VARTYPE IDENTIFIER
ASSIGN AND OR EQ NE GT GE LT LE ADD SUB MUL DIV MOD POS NEG LBRACKET
RBRACKET LPAREN RPAREN EXP NOT END_OF_LINE END_OF_FILE STAR_ASSIGN
DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN SUB_ASSIGN LEFT_ASSIGN RIGHT_ASSIGN
AND_ASSIGN XOR_ASSIGN OR_ASSIGN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED
UNSIGNED TYPE_NAME STRUCT UNION CONSTANT STRING_LITERAL LSQUAREB RSQUAREB
DOT PTR_OP INC_OP DEC_OP COMMA SIZEOF REF STAR PLUS MINUS TILDE ENUM
ELLIPSIS ELSE CONTINUE program input lines translation_unit
assignment_operator type_specifier struct_or_union_specifier enum_specifier
struct_or_union primary_expression expression postfix_expression
argument_expression_list assignment_expression unary_expression
unary_operator cast_expression type_name declaration declaration_specifiers
init_declarator_list init_declarator declarator initializer
struct_declaration_list struct_declaration specifier_qualifier_list
struct_declarator_list struct_declarator enumerator_list enumerator
direct_declarator parameter_type_list identifier_list parameter_list
parameter_declaration abstract_declarator direct_abstract_declarator
initializer_list statement compound_statement expression_statement
selection_statement iteration_statement jump_statement statement_list
declaration_list external_declaration function_definition
----------------------------------------------------
Rules:
   0: lines ::= translation_unit END_OF_LINE|END_OF_FILE.
   1: jump_statement ::= RETURN SEMCOL. [RETURN precedence=1]
   2: jump_statement ::= RETURN primary_expression SEMCOL. [RETURN precedence=1]
   3: program ::= input.
   4: input ::=.
   5: input ::= input lines.
   6: assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN. [ASSIGN precedence=1]
   7: type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME.
   8: type_specifier ::= struct_or_union_specifier.
   9: type_specifier ::= enum_specifier.
  10: struct_or_union ::= STRUCT|UNION.
  11: primary_expression ::= IDENTIFIER. [IDENTIFIER precedence=1]
  12: primary_expression ::= CONSTANT.
  13: primary_expression ::= STRING_LITERAL.
  14: primary_expression ::= LPAREN expression RPAREN. [LPAREN precedence=8]
  15: postfix_expression ::= primary_expression.
  16: postfix_expression ::= postfix_expression LSQUAREB expression RSQUAREB.
  17: postfix_expression ::= postfix_expression LPAREN RPAREN. [LPAREN precedence=8]
  18: postfix_expression ::= postfix_expression LPAREN argument_expression_list RPAREN. [LPAREN precedence=8]
  19: postfix_expression ::= postfix_expression DOT IDENTIFIER. [IDENTIFIER precedence=1]
  20: postfix_expression ::= postfix_expression PTR_OP IDENTIFIER. [IDENTIFIER precedence=1]
  21: postfix_expression ::= postfix_expression INC_OP.
  22: postfix_expression ::= postfix_expression DEC_OP.
  23: argument_expression_list ::= assignment_expression.
  24: argument_expression_list ::= argument_expression_list COMMA assignment_expression.
  25: unary_expression ::= postfix_expression.
  26: unary_expression ::= INC_OP unary_expression.
  27: unary_expression ::= DEC_OP unary_expression.
  28: unary_expression ::= unary_operator cast_expression.
  29: unary_expression ::= SIZEOF unary_expression.
  30: unary_expression ::= SIZEOF LPAREN type_name RPAREN. [LPAREN precedence=8]
  31: unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT. [NOT precedence=9]
  32: cast_expression ::= unary_expression.
  33: cast_expression ::= LPAREN type_name RPAREN cast_expression. [LPAREN precedence=8]
  34: assignment_expression ::= unary_expression assignment_operator assignment_expression.
  35: expression ::= assignment_expression.
  36: expression ::= expression COMMA assignment_expression.
  37: declaration ::= declaration_specifiers SEMCOL. [SEMCOL precedence=1]
  38: declaration ::= declaration_specifiers init_declarator_list SEMCOL. [SEMCOL precedence=1]
  39: declaration_specifiers ::= type_specifier.
  40: declaration_specifiers ::= type_specifier declaration_specifiers.
  41: init_declarator_list ::= init_declarator.
  42: init_declarator_list ::= init_declarator_list COMMA init_declarator.
  43: init_declarator ::= declarator.
  44: init_declarator ::= declarator ASSIGN initializer. [ASSIGN precedence=1]
  45: struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET. [IDENTIFIER precedence=1]
  46: struct_or_union_specifier ::= struct_or_union LBRACKET struct_declaration_list RBRACKET. [LBRACKET precedence=8]
  47: struct_or_union_specifier ::= struct_or_union IDENTIFIER. [IDENTIFIER precedence=1]
  48: struct_declaration_list ::= struct_declaration.
  49: struct_declaration_list ::= struct_declaration_list struct_declaration.
  50: struct_declaration ::= specifier_qualifier_list struct_declarator_list SEMCOL. [SEMCOL precedence=1]
  51: specifier_qualifier_list ::= type_specifier specifier_qualifier_list.
  52: specifier_qualifier_list ::= type_specifier.
  53: struct_declarator_list ::= struct_declarator.
  54: struct_declarator_list ::= struct_declarator_list COMMA struct_declarator.
  55: struct_declarator ::= declarator.
  56: enum_specifier ::= ENUM LBRACKET enumerator_list RBRACKET. [LBRACKET precedence=8]
  57: enum_specifier ::= ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET. [IDENTIFIER precedence=1]
  58: enum_specifier ::= ENUM IDENTIFIER. [IDENTIFIER precedence=1]
  59: enumerator_list ::= enumerator.
  60: enumerator_list ::= enumerator_list COMMA enumerator.
  61: enumerator ::= IDENTIFIER. [IDENTIFIER precedence=1]
  62: declarator ::= direct_declarator.
  63: direct_declarator ::= IDENTIFIER. [IDENTIFIER precedence=1]
  64: direct_declarator ::= LPAREN declarator RPAREN. [LPAREN precedence=8]
  65: direct_declarator ::= direct_declarator LSQUAREB RSQUAREB.
  66: direct_declarator ::= direct_declarator LPAREN parameter_type_list RPAREN. [LPAREN precedence=8]
  67: direct_declarator ::= direct_declarator LPAREN identifier_list RPAREN. [LPAREN precedence=8]
  68: direct_declarator ::= direct_declarator LPAREN RPAREN. [LPAREN precedence=8]
  69: parameter_type_list ::= parameter_list.
  70: parameter_type_list ::= parameter_list COMMA ELLIPSIS.
  71: parameter_list ::= parameter_declaration.
  72: parameter_list ::= parameter_list COMMA parameter_declaration.
  73: parameter_declaration ::= declaration_specifiers declarator.
  74: parameter_declaration ::= declaration_specifiers abstract_declarator.
  75: parameter_declaration ::= declaration_specifiers.
  76: identifier_list ::= IDENTIFIER. [IDENTIFIER precedence=1]
  77: identifier_list ::= identifier_list COMMA IDENTIFIER. [IDENTIFIER precedence=1]
  78: type_name ::= specifier_qualifier_list.
  79: type_name ::= specifier_qualifier_list abstract_declarator.
  80: abstract_declarator ::= direct_abstract_declarator.
  81: direct_abstract_declarator ::= LPAREN abstract_declarator RPAREN. [LPAREN precedence=8]
  82: direct_abstract_declarator ::= LSQUAREB RSQUAREB.
  83: direct_abstract_declarator ::= direct_abstract_declarator LSQUAREB RSQUAREB.
  84: direct_abstract_declarator ::= LPAREN RPAREN. [LPAREN precedence=8]
  85: direct_abstract_declarator ::= LPAREN parameter_type_list RPAREN. [LPAREN precedence=8]
  86: direct_abstract_declarator ::= direct_abstract_declarator LPAREN RPAREN. [LPAREN precedence=8]
  87: direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list RPAREN. [LPAREN precedence=8]
  88: initializer ::= assignment_expression.
  89: initializer ::= LBRACKET initializer_list RBRACKET. [LBRACKET precedence=8]
  90: initializer ::= LBRACKET initializer_list COMMA RBRACKET. [LBRACKET precedence=8]
  91: initializer_list ::= initializer.
  92: initializer_list ::= initializer_list COMMA initializer.
  93: statement ::= compound_statement.
  94: statement ::= expression_statement.
  95: statement ::= selection_statement.
  96: statement ::= iteration_statement.
  97: statement ::= jump_statement.
  98: compound_statement ::= LBRACKET RBRACKET. [LBRACKET precedence=8]
  99: compound_statement ::= LBRACKET statement_list RBRACKET. [LBRACKET precedence=8]
 100: compound_statement ::= LBRACKET declaration_list RBRACKET. [LBRACKET precedence=8]
 101: compound_statement ::= LBRACKET declaration_list statement_list RBRACKET. [LBRACKET precedence=8]
 102: declaration_list ::= declaration.
 103: declaration_list ::= declaration_list declaration.
 104: statement_list ::= statement.
 105: statement_list ::= statement_list statement.
 106: expression_statement ::= SEMCOL. [SEMCOL precedence=1]
 107: expression_statement ::= expression SEMCOL. [SEMCOL precedence=1]
 108: selection_statement ::= IF LPAREN expression RPAREN statement. [IF precedence=1]
 109: selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement. [IF precedence=1]
 110: selection_statement ::= SWITCH LPAREN expression RPAREN statement. [SWITCH precedence=1]
 111: iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement. [FOR precedence=1]
 112: iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement. [FOR precedence=1]
 113: jump_statement ::= CONTINUE SEMCOL. [SEMCOL precedence=1]
 114: jump_statement ::= FALLTHROUGH SEMCOL. [FALLTHROUGH precedence=1]
 115: jump_statement ::= BREAK SEMCOL. [BREAK precedence=1]
 116: jump_statement ::= BREAK primary_expression SEMCOL. [BREAK precedence=1]
 117: translation_unit ::= external_declaration.
 118: translation_unit ::= translation_unit external_declaration.
 119: external_declaration ::= function_definition.
 120: external_declaration ::= declaration.
 121: function_definition ::= declarator declaration_list compound_statement.
 122: function_definition ::= declarator compound_statement.
