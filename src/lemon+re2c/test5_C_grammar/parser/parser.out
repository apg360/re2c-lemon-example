State 0:
          program ::= * input
      (4) input ::= *
          input ::= * input lines

                       program accept
                         input shift        13     
                     {default} reduce       4      input ::=

State 1:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          statement_list ::= * statement
          statement_list ::= * statement_list statement
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * forloop_iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= LBRACKET * RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= LBRACKET * statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= LBRACKET * declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          compound_statement ::= LBRACKET * declaration_list statement_list RBRACKET
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          declaration_list ::= * declaration
          declaration_list ::= * declaration_list declaration
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        80     
                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                           FOR shift        82     
                        SWITCH shift        83     
                            IF shift        85     
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 24     compound_statement ::= LBRACKET RBRACKET
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                      CONTINUE shift        81     
                          ENUM shift        71     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
                   declaration shift        2        /* because declaration==declaration_list */
              declaration_list shift        2      
            compound_statement shift        6        /* because compound_statement==statement_list */
                statement_list shift        6      
                     statement shift        6        /* because statement==statement_list */
          expression_statement shift        6        /* because expression_statement==statement */
           selection_statement shift        6        /* because selection_statement==statement */
   forloop_iteration_statement shift        6        /* because forloop_iteration_statement==statement */
                jump_statement shift        6        /* because jump_statement==statement */
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
        declaration_specifiers shift        46     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 2:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          statement_list ::= * statement
          statement_list ::= * statement_list statement
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * forloop_iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= LBRACKET declaration_list * RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          compound_statement ::= LBRACKET declaration_list * statement_list RBRACKET
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          declaration_list ::= declaration_list * declaration
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        80     
                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                           FOR shift        82     
                        SWITCH shift        83     
                            IF shift        85     
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 26     compound_statement ::= LBRACKET declaration_list RBRACKET
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                      CONTINUE shift        81     
                          ENUM shift        71     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
                   declaration shift-reduce 33     declaration_list ::= declaration_list declaration
            compound_statement shift        5        /* because compound_statement==statement_list */
                statement_list shift        5      
                     statement shift        5        /* because statement==statement_list */
          expression_statement shift        5        /* because expression_statement==statement */
           selection_statement shift        5        /* because selection_statement==statement */
   forloop_iteration_statement shift        5        /* because forloop_iteration_statement==statement */
                jump_statement shift        5        /* because jump_statement==statement */
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
        declaration_specifiers shift        46     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 3:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          type_name ::= * specifier_qualifier_list
          type_name ::= * specifier_qualifier_list abstract_declarator
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_expression ::= SIZEOF LPAREN * type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                          ENUM shift        71     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        76     
      specifier_qualifier_list shift        51     
                     type_name shift        88     
         assignment_expression shift        76       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 4:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          type_name ::= * specifier_qualifier_list
          type_name ::= * specifier_qualifier_list abstract_declarator
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= LPAREN * type_name RPAREN cast_expression

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                          ENUM shift        71     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        76     
      specifier_qualifier_list shift        51     
                     type_name shift        87     
         assignment_expression shift        76       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 5:
          statement_list ::= statement_list * statement
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * forloop_iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          compound_statement ::= LBRACKET declaration_list statement_list * RBRACKET
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        80     
                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                           FOR shift        82     
                        SWITCH shift        83     
                            IF shift        85     
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 27     compound_statement ::= LBRACKET declaration_list statement_list RBRACKET
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                      CONTINUE shift        81     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            compound_statement shift-reduce 18     statement_list ::= statement_list statement  /* because compound_statement==statement */
                     statement shift-reduce 18     statement_list ::= statement_list statement
          expression_statement shift-reduce 18     statement_list ::= statement_list statement  /* because expression_statement==statement */
           selection_statement shift-reduce 18     statement_list ::= statement_list statement  /* because selection_statement==statement */
   forloop_iteration_statement shift-reduce 18     statement_list ::= statement_list statement  /* because forloop_iteration_statement==statement */
                jump_statement shift-reduce 18     statement_list ::= statement_list statement  /* because jump_statement==statement */
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 6:
          statement_list ::= statement_list * statement
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * forloop_iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= LBRACKET statement_list * RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        80     
                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                           FOR shift        82     
                        SWITCH shift        83     
                            IF shift        85     
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 25     compound_statement ::= LBRACKET statement_list RBRACKET
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                      CONTINUE shift        81     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            compound_statement shift-reduce 18     statement_list ::= statement_list statement  /* because compound_statement==statement */
                     statement shift-reduce 18     statement_list ::= statement_list statement
          expression_statement shift-reduce 18     statement_list ::= statement_list statement  /* because expression_statement==statement */
           selection_statement shift-reduce 18     statement_list ::= statement_list statement  /* because selection_statement==statement */
   forloop_iteration_statement shift-reduce 18     statement_list ::= statement_list statement  /* because forloop_iteration_statement==statement */
                jump_statement shift-reduce 18     statement_list ::= statement_list statement  /* because jump_statement==statement */
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 7:
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * forloop_iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN * statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        80     
                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                           FOR shift        82     
                        SWITCH shift        83     
                            IF shift        85     
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                      CONTINUE shift        81     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            compound_statement shift-reduce 88     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because compound_statement==statement */
                     statement shift-reduce 88     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement
          expression_statement shift-reduce 88     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because expression_statement==statement */
           selection_statement shift-reduce 88     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because selection_statement==statement */
   forloop_iteration_statement shift-reduce 88     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because forloop_iteration_statement==statement */
                jump_statement shift-reduce 88     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because jump_statement==statement */
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 8:
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * forloop_iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN * statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        80     
                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                           FOR shift        82     
                        SWITCH shift        83     
                            IF shift        85     
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                      CONTINUE shift        81     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            compound_statement shift-reduce 87     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because compound_statement==statement */
                     statement shift-reduce 87     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement
          expression_statement shift-reduce 87     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because expression_statement==statement */
           selection_statement shift-reduce 87     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because selection_statement==statement */
   forloop_iteration_statement shift-reduce 87     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because forloop_iteration_statement==statement */
                jump_statement shift-reduce 87     forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because jump_statement==statement */
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 9:
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * forloop_iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          selection_statement ::= SWITCH LPAREN expression RPAREN * statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        80     
                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                           FOR shift        82     
                        SWITCH shift        83     
                            IF shift        85     
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                      CONTINUE shift        81     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            compound_statement shift-reduce 86     selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because compound_statement==statement */
                     statement shift-reduce 86     selection_statement ::= SWITCH LPAREN expression RPAREN statement
          expression_statement shift-reduce 86     selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because expression_statement==statement */
           selection_statement shift-reduce 86     selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because selection_statement==statement */
   forloop_iteration_statement shift-reduce 86     selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because forloop_iteration_statement==statement */
                jump_statement shift-reduce 86     selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because jump_statement==statement */
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 10:
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * forloop_iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= IF LPAREN expression RPAREN statement ELSE * statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        80     
                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                           FOR shift        82     
                        SWITCH shift        83     
                            IF shift        85     
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                      CONTINUE shift        81     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            compound_statement shift-reduce 85     selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because compound_statement==statement */
                     statement shift-reduce 85     selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement
          expression_statement shift-reduce 85     selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because expression_statement==statement */
           selection_statement shift-reduce 85     selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because selection_statement==statement */
   forloop_iteration_statement shift-reduce 85     selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because forloop_iteration_statement==statement */
                jump_statement shift-reduce 85     selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because jump_statement==statement */
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 11:
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * forloop_iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= IF LPAREN expression RPAREN * statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= IF LPAREN expression RPAREN * statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                         BREAK shift        57     
                        RETURN shift        56     
                   FALLTHROUGH shift        80     
                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                           FOR shift        82     
                        SWITCH shift        83     
                            IF shift        85     
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                      CONTINUE shift        81     
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            compound_statement shift        84       /* because compound_statement==statement */
                     statement shift        84     
          expression_statement shift        84       /* because expression_statement==statement */
           selection_statement shift        84       /* because selection_statement==statement */
   forloop_iteration_statement shift        84       /* because forloop_iteration_statement==statement */
                jump_statement shift        84       /* because jump_statement==statement */
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 12:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= LPAREN * declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= LPAREN * abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= LPAREN * RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= LPAREN * parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                    IDENTIFIER shift-reduce 56     direct_declarator ::= IDENTIFIER
                        LPAREN shift        12     
                        RPAREN shift-reduce 66     direct_abstract_declarator ::= LPAREN RPAREN
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      LSQUAREB shift        90     
                          ENUM shift        71     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
                    declarator shift        94     
        declaration_specifiers shift        47     
           abstract_declarator shift        91     
             direct_declarator shift        72     
           parameter_type_list shift        89     
    direct_abstract_declarator shift        67     
                parameter_list shift        95     
         parameter_declaration shift        95       /* because parameter_declaration==parameter_list */

State 13:
      (3) program ::= input *
          input ::= input * lines
          lines ::= * translation_unit END_OF_LINE|END_OF_FILE
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          translation_unit ::= * external_declaration
          translation_unit ::= * translation_unit external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          function_definition ::= * declarator declaration_list compound_statement
          function_definition ::= * declarator compound_statement
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                             $ reduce       3      program ::= input
                    IDENTIFIER shift-reduce 56     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                         lines shift-reduce 5      input ::= input lines
              translation_unit shift        14     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
          external_declaration shift        14       /* because external_declaration==translation_unit */
           function_definition shift        14       /* because function_definition==external_declaration */
                   declaration shift        14       /* because declaration==external_declaration */
                    declarator shift        18     
        declaration_specifiers shift        46     
             direct_declarator shift        72     

State 14:
          lines ::= translation_unit * END_OF_LINE|END_OF_FILE
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          translation_unit ::= translation_unit * external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          function_definition ::= * declarator declaration_list compound_statement
          function_definition ::= * declarator compound_statement
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                    IDENTIFIER shift-reduce 56     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                   END_OF_LINE shift-reduce 0      lines ::= translation_unit END_OF_LINE|END_OF_FILE
                   END_OF_FILE shift-reduce 0      lines ::= translation_unit END_OF_LINE|END_OF_FILE
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
          external_declaration shift-reduce 12     translation_unit ::= translation_unit external_declaration
           function_definition shift-reduce 12     translation_unit ::= translation_unit external_declaration  /* because function_definition==external_declaration */
                   declaration shift-reduce 12     translation_unit ::= translation_unit external_declaration  /* because declaration==external_declaration */
                    declarator shift        18     
        declaration_specifiers shift        46     
             direct_declarator shift        72     

State 15:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= LPAREN * abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= LPAREN * RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= LPAREN * parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                        LPAREN shift        15     
                        RPAREN shift-reduce 66     direct_abstract_declarator ::= LPAREN RPAREN
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      LSQUAREB shift        90     
                          ENUM shift        71     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
        declaration_specifiers shift        47     
           abstract_declarator shift        91     
           parameter_type_list shift        89     
    direct_abstract_declarator shift        67     
                parameter_list shift        95     
         parameter_declaration shift        95       /* because parameter_declaration==parameter_list */

State 16:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          direct_declarator ::= direct_declarator LPAREN * parameter_type_list RPAREN
          direct_declarator ::= direct_declarator LPAREN * identifier_list RPAREN
          direct_declarator ::= direct_declarator LPAREN * RPAREN
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                    IDENTIFIER shift-reduce 77     identifier_list ::= IDENTIFIER
                        RPAREN shift-reduce 61     direct_declarator ::= direct_declarator LPAREN RPAREN
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
        declaration_specifiers shift        47     
           parameter_type_list shift        97     
               identifier_list shift        68     
                parameter_list shift        95     
         parameter_declaration shift        95       /* because parameter_declaration==parameter_list */

State 17:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN * RPAREN
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN * parameter_type_list RPAREN
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                        RPAREN shift-reduce 68     direct_abstract_declarator ::= direct_abstract_declarator LPAREN RPAREN
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
        declaration_specifiers shift        47     
           parameter_type_list shift        92     
                parameter_list shift        95     
         parameter_declaration shift        95       /* because parameter_declaration==parameter_list */

State 18:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          function_definition ::= declarator * declaration_list compound_statement
          function_definition ::= declarator * compound_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          declaration_list ::= * declaration
          declaration_list ::= * declaration_list declaration
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                      LBRACKET shift        1      
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
                   declaration shift        22       /* because declaration==declaration_list */
              declaration_list shift        22     
            compound_statement shift-reduce 16     function_definition ::= declarator compound_statement
        declaration_specifiers shift        46     

State 19:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          initializer_list ::= * initializer
          initializer_list ::= * initializer_list COMMA initializer
          initializer ::= * assignment_expression
          initializer ::= * LBRACKET initializer_list RBRACKET
          initializer ::= LBRACKET * initializer_list RBRACKET
          initializer ::= * LBRACKET initializer_list COMMA RBRACKET
          initializer ::= LBRACKET * initializer_list COMMA RBRACKET
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        19     
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                   initializer shift        60       /* because initializer==initializer_list */
              initializer_list shift        60     
         assignment_expression shift        60       /* because assignment_expression==initializer */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 20:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          forloop_iteration_statement ::= FOR LPAREN expression_statement * expression_statement RPAREN statement
          forloop_iteration_statement ::= FOR LPAREN expression_statement * expression_statement expression RPAREN statement
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
          expression_statement shift        27     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 21:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          forloop_iteration_statement ::= FOR LPAREN * expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= FOR LPAREN * expression_statement expression_statement expression RPAREN statement
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                        SEMCOL shift-reduce 109    expression_statement ::= SEMCOL
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
          expression_statement shift        20     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        63     
         assignment_expression shift        63       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 22:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          function_definition ::= declarator declaration_list * compound_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          declaration_list ::= declaration_list * declaration
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                      LBRACKET shift        1      
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
                   declaration shift-reduce 33     declaration_list ::= declaration_list declaration
            compound_statement shift-reduce 15     function_definition ::= declarator declaration_list compound_statement
        declaration_specifiers shift        46     

State 23:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union LBRACKET * struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
       struct_declaration_list shift        29     
            struct_declaration shift        29       /* because struct_declaration==struct_declaration_list */
      specifier_qualifier_list shift        48     

State 24:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET * struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
       struct_declaration_list shift        31     
            struct_declaration shift        31       /* because struct_declaration==struct_declaration_list */
      specifier_qualifier_list shift        48     

State 25:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          initializer_list ::= initializer_list COMMA * initializer
          initializer ::= * assignment_expression
          initializer ::= * LBRACKET initializer_list RBRACKET
          initializer ::= * LBRACKET initializer_list COMMA RBRACKET
          initializer ::= LBRACKET initializer_list COMMA * RBRACKET
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        19     
                      RBRACKET shift-reduce 83     initializer ::= LBRACKET initializer_list COMMA RBRACKET
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                   initializer shift-reduce 80     initializer_list ::= initializer_list COMMA initializer
         assignment_expression shift-reduce 80     initializer_list ::= initializer_list COMMA initializer  /* because assignment_expression==initializer */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 26:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          init_declarator ::= declarator ASSIGN * initializer
          initializer ::= * assignment_expression
          initializer ::= * LBRACKET initializer_list RBRACKET
          initializer ::= * LBRACKET initializer_list COMMA RBRACKET
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                      LBRACKET shift        19     
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                   initializer shift-reduce 41     init_declarator ::= declarator ASSIGN initializer
         assignment_expression shift-reduce 41     init_declarator ::= declarator ASSIGN initializer  /* because assignment_expression==initializer */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 27:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement * RPAREN statement
          forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement * expression RPAREN statement
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                        RPAREN shift        8      
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        62     
         assignment_expression shift        62       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 28:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= postfix_expression LPAREN * RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= postfix_expression LPAREN * argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          argument_expression_list ::= * assignment_expression
          argument_expression_list ::= * argument_expression_list COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                        RPAREN shift-reduce 101    postfix_expression ::= postfix_expression LPAREN RPAREN
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
         assignment_expression shift        66       /* because assignment_expression==argument_expression_list */
            postfix_expression shift        59     
      argument_expression_list shift        66     
                unary_operator shift        40     
              unary_expression shift        55     

State 29:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union LBRACKET struct_declaration_list * RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                      RBRACKET shift-reduce 43     struct_or_union_specifier ::= struct_or_union LBRACKET struct_declaration_list RBRACKET
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
            struct_declaration shift-reduce 46     struct_declaration_list ::= struct_declaration_list struct_declaration
      specifier_qualifier_list shift        48     

State 30:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          parameter_type_list ::= parameter_list COMMA * ELLIPSIS
          parameter_list ::= parameter_list COMMA * parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                      ELLIPSIS shift-reduce 71     parameter_type_list ::= parameter_list COMMA ELLIPSIS
                          ENUM shift        71     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
        declaration_specifiers shift        47     
         parameter_declaration shift-reduce 73     parameter_list ::= parameter_list COMMA parameter_declaration

State 31:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET struct_declaration_list * RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                      RBRACKET shift-reduce 42     struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
            struct_declaration shift-reduce 46     struct_declaration_list ::= struct_declaration_list struct_declaration
      specifier_qualifier_list shift        48     

State 32:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          selection_statement ::= SWITCH LPAREN * expression RPAREN statement
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        64     
         assignment_expression shift        64       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 33:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          selection_statement ::= IF LPAREN * expression RPAREN statement
          selection_statement ::= IF LPAREN * expression RPAREN statement ELSE statement
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        65     
         assignment_expression shift        65       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 34:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= postfix_expression LSQUAREB * expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        75     
         assignment_expression shift        75       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 35:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
                    expression shift        76     
         assignment_expression shift        76       /* because assignment_expression==expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 36:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          argument_expression_list ::= argument_expression_list COMMA * assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
         assignment_expression shift-reduce 108    argument_expression_list ::= argument_expression_list COMMA assignment_expression
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 37:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          cast_expression ::= LPAREN type_name RPAREN * cast_expression

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        4      
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift-reduce 121    cast_expression ::= LPAREN type_name RPAREN cast_expression  /* because unary_expression==cast_expression */
               cast_expression shift-reduce 121    cast_expression ::= LPAREN type_name RPAREN cast_expression

State 38:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= type_specifier * specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
     (51) specifier_qualifier_list ::= type_specifier *
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        38     
     struct_or_union_specifier shift        38       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        38       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
      specifier_qualifier_list shift-reduce 50     specifier_qualifier_list ::= type_specifier specifier_qualifier_list
                     {default} reduce       51     specifier_qualifier_list ::= type_specifier

State 39:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union ::= * STRUCT|UNION
          declaration_specifiers ::= * type_specifier
     (36) declaration_specifiers ::= type_specifier *
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= type_specifier * declaration_specifiers
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 7      type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 10     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 10     struct_or_union ::= STRUCT|UNION
                          ENUM shift        71     
                type_specifier shift        39     
     struct_or_union_specifier shift        39       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        39       /* because enum_specifier==type_specifier */
               struct_or_union shift        74     
        declaration_specifiers shift-reduce 37     declaration_specifiers ::= type_specifier declaration_specifiers
                     {default} reduce       36     declaration_specifiers ::= type_specifier

State 40:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= unary_operator * cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        4      
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift-reduce 117    unary_expression ::= unary_operator cast_expression  /* because unary_expression==cast_expression */
               cast_expression shift-reduce 117    unary_expression ::= unary_operator cast_expression

State 41:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          assignment_expression ::= unary_expression assignment_operator * assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
         assignment_expression shift-reduce 113    assignment_expression ::= unary_expression assignment_operator assignment_expression
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 42:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          expression ::= expression COMMA * assignment_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
         assignment_expression shift-reduce 112    expression ::= expression COMMA assignment_expression
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift        55     

State 43:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= SIZEOF * unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_expression ::= SIZEOF * LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        3      
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift-reduce 118    unary_expression ::= SIZEOF unary_expression

State 44:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= DEC_OP * unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift-reduce 116    unary_expression ::= DEC_OP unary_expression

State 45:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= INC_OP * unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN

                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                           NOT shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
                        INC_OP shift        45     
                        DEC_OP shift        44     
                           REF shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 106    unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                        SIZEOF shift        43     
            primary_expression shift        59       /* because primary_expression==postfix_expression */
            postfix_expression shift        59     
                unary_operator shift        40     
              unary_expression shift-reduce 115    unary_expression ::= INC_OP unary_expression

State 46:
          declaration ::= declaration_specifiers * SEMCOL
          declaration ::= declaration_specifiers * init_declarator_list SEMCOL
          init_declarator_list ::= * init_declarator
          init_declarator_list ::= * init_declarator_list COMMA init_declarator
          init_declarator ::= * declarator
          init_declarator ::= * declarator ASSIGN initializer
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                        SEMCOL shift-reduce 34     declaration ::= declaration_specifiers SEMCOL
                    IDENTIFIER shift-reduce 56     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                    declarator shift        77     
          init_declarator_list shift        61     
               init_declarator shift        61       /* because init_declarator==init_declarator_list */
             direct_declarator shift        72     

State 47:
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN
          parameter_declaration ::= declaration_specifiers * declarator
          parameter_declaration ::= declaration_specifiers * abstract_declarator
     (76) parameter_declaration ::= declaration_specifiers *

                    IDENTIFIER shift-reduce 56     direct_declarator ::= IDENTIFIER
                        LPAREN shift        12     
                      LSQUAREB shift        90     
                    declarator shift-reduce 74     parameter_declaration ::= declaration_specifiers declarator
           abstract_declarator shift-reduce 75     parameter_declaration ::= declaration_specifiers abstract_declarator
             direct_declarator shift        72     
    direct_abstract_declarator shift        67     
                     {default} reduce       76     parameter_declaration ::= declaration_specifiers

State 48:
          struct_declaration ::= specifier_qualifier_list * struct_declarator_list SEMCOL
          struct_declarator_list ::= * struct_declarator
          struct_declarator_list ::= * struct_declarator_list COMMA struct_declarator
          struct_declarator ::= * declarator
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 56     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                    declarator shift        73       /* because declarator==struct_declarator_list */
        struct_declarator_list shift        73     
             struct_declarator shift        73       /* because struct_declarator==struct_declarator_list */
             direct_declarator shift        72     

State 49:
          init_declarator_list ::= init_declarator_list COMMA * init_declarator
          init_declarator ::= * declarator
          init_declarator ::= * declarator ASSIGN initializer
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 56     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                    declarator shift        77     
               init_declarator shift-reduce 39     init_declarator_list ::= init_declarator_list COMMA init_declarator
             direct_declarator shift        72     

State 50:
          struct_declarator_list ::= struct_declarator_list COMMA * struct_declarator
          struct_declarator ::= * declarator
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 56     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                    declarator shift-reduce 53     struct_declarator_list ::= struct_declarator_list COMMA struct_declarator  /* because declarator==struct_declarator */
             struct_declarator shift-reduce 53     struct_declarator_list ::= struct_declarator_list COMMA struct_declarator
             direct_declarator shift        72     

State 51:
     (48) type_name ::= specifier_qualifier_list *
          type_name ::= specifier_qualifier_list * abstract_declarator
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN

                        LPAREN shift        15     
                      LSQUAREB shift        90     
           abstract_declarator shift-reduce 49     type_name ::= specifier_qualifier_list abstract_declarator
    direct_abstract_declarator shift        67     
                     {default} reduce       48     type_name ::= specifier_qualifier_list

State 52:
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= LPAREN * declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 56     direct_declarator ::= IDENTIFIER
                        LPAREN shift        52     
                    declarator shift        94     
             direct_declarator shift        72     

State 53:
          enum_specifier ::= ENUM IDENTIFIER LBRACKET * enumerator_list RBRACKET
          enumerator_list ::= * enumerator
          enumerator_list ::= * enumerator_list COMMA enumerator
          enumerator ::= * IDENTIFIER

                    IDENTIFIER shift-reduce 98     enumerator ::= IDENTIFIER
               enumerator_list shift        69     
                    enumerator shift        69       /* because enumerator==enumerator_list */

State 54:
          enum_specifier ::= ENUM LBRACKET * enumerator_list RBRACKET
          enumerator_list ::= * enumerator
          enumerator_list ::= * enumerator_list COMMA enumerator
          enumerator ::= * IDENTIFIER

                    IDENTIFIER shift-reduce 98     enumerator ::= IDENTIFIER
               enumerator_list shift        70     
                    enumerator shift        70       /* because enumerator==enumerator_list */

State 55:
          assignment_operator ::= * ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
          assignment_expression ::= unary_expression * assignment_operator assignment_expression

                        ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                   STAR_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    DIV_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    MOD_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    ADD_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    SUB_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                   LEFT_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                  RIGHT_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    AND_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    XOR_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                     OR_ASSIGN shift-reduce 6      assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
           assignment_operator shift        41     

State 56:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          jump_statement ::= RETURN * SEMCOL
          jump_statement ::= RETURN * primary_expression SEMCOL

                        SEMCOL shift-reduce 1      jump_statement ::= RETURN SEMCOL
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
            primary_expression shift        78     

State 57:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          jump_statement ::= BREAK * SEMCOL
          jump_statement ::= BREAK * primary_expression SEMCOL

                        SEMCOL shift-reduce 91     jump_statement ::= BREAK SEMCOL
                    IDENTIFIER shift-reduce 28     primary_expression ::= IDENTIFIER
                        LPAREN shift        35     
                      CONSTANT shift-reduce 29     primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 30     primary_expression ::= STRING_LITERAL
            primary_expression shift        79     

State 58:
          enumerator_list ::= enumerator_list COMMA * enumerator
          enumerator ::= * IDENTIFIER

                    IDENTIFIER shift-reduce 98     enumerator ::= IDENTIFIER
                    enumerator shift-reduce 97     enumerator_list ::= enumerator_list COMMA enumerator

State 59:
          postfix_expression ::= postfix_expression * LSQUAREB expression RSQUAREB
          postfix_expression ::= postfix_expression * LPAREN RPAREN
          postfix_expression ::= postfix_expression * LPAREN argument_expression_list RPAREN
          postfix_expression ::= postfix_expression * DOT IDENTIFIER
          postfix_expression ::= postfix_expression * INC_OP
          postfix_expression ::= postfix_expression * DEC_OP
    (114) unary_expression ::= postfix_expression *

                        LPAREN shift        28     
                      LSQUAREB shift        34     
                           DOT shift        86     
                        INC_OP shift-reduce 104    postfix_expression ::= postfix_expression INC_OP
                        DEC_OP shift-reduce 105    postfix_expression ::= postfix_expression DEC_OP
                     {default} reduce       114    unary_expression ::= postfix_expression

State 60:
          initializer_list ::= initializer_list * COMMA initializer
          initializer ::= LBRACKET initializer_list * RBRACKET
          initializer ::= LBRACKET initializer_list * COMMA RBRACKET

                      RBRACKET shift-reduce 82     initializer ::= LBRACKET initializer_list RBRACKET
                         COMMA shift        25     

State 61:
          declaration ::= declaration_specifiers init_declarator_list * SEMCOL
          init_declarator_list ::= init_declarator_list * COMMA init_declarator

                        SEMCOL shift-reduce 35     declaration ::= declaration_specifiers init_declarator_list SEMCOL
                         COMMA shift        49     

State 62:
          forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement expression * RPAREN statement
          expression ::= expression * COMMA assignment_expression

                        RPAREN shift        7      
                         COMMA shift        42     

State 63:
          expression_statement ::= expression * SEMCOL
          expression ::= expression * COMMA assignment_expression

                        SEMCOL shift-reduce 110    expression_statement ::= expression SEMCOL
                         COMMA shift        42     

State 64:
          selection_statement ::= SWITCH LPAREN expression * RPAREN statement
          expression ::= expression * COMMA assignment_expression

                        RPAREN shift        9      
                         COMMA shift        42     

State 65:
          selection_statement ::= IF LPAREN expression * RPAREN statement
          selection_statement ::= IF LPAREN expression * RPAREN statement ELSE statement
          expression ::= expression * COMMA assignment_expression

                        RPAREN shift        11     
                         COMMA shift        42     

State 66:
          postfix_expression ::= postfix_expression LPAREN argument_expression_list * RPAREN
          argument_expression_list ::= argument_expression_list * COMMA assignment_expression

                        RPAREN shift-reduce 102    postfix_expression ::= postfix_expression LPAREN argument_expression_list RPAREN
                         COMMA shift        36     

State 67:
     (62) abstract_declarator ::= direct_abstract_declarator *
          direct_abstract_declarator ::= direct_abstract_declarator * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= direct_abstract_declarator * LPAREN RPAREN
          direct_abstract_declarator ::= direct_abstract_declarator * LPAREN parameter_type_list RPAREN

                        LPAREN shift        17     
                      LSQUAREB shift        93     
                     {default} reduce       62     abstract_declarator ::= direct_abstract_declarator

State 68:
          direct_declarator ::= direct_declarator LPAREN identifier_list * RPAREN
          identifier_list ::= identifier_list * COMMA IDENTIFIER

                        RPAREN shift-reduce 60     direct_declarator ::= direct_declarator LPAREN identifier_list RPAREN
                         COMMA shift        96     

State 69:
          enum_specifier ::= ENUM IDENTIFIER LBRACKET enumerator_list * RBRACKET
          enumerator_list ::= enumerator_list * COMMA enumerator

                      RBRACKET shift-reduce 94     enum_specifier ::= ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
                         COMMA shift        58     

State 70:
          enum_specifier ::= ENUM LBRACKET enumerator_list * RBRACKET
          enumerator_list ::= enumerator_list * COMMA enumerator

                      RBRACKET shift-reduce 93     enum_specifier ::= ENUM LBRACKET enumerator_list RBRACKET
                         COMMA shift        58     

State 71:
          enum_specifier ::= ENUM * LBRACKET enumerator_list RBRACKET
          enum_specifier ::= ENUM * IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= ENUM * IDENTIFIER

                    IDENTIFIER shift        98     
                      LBRACKET shift        54     

State 72:
     (55) declarator ::= direct_declarator *
          direct_declarator ::= direct_declarator * LSQUAREB RSQUAREB
          direct_declarator ::= direct_declarator * LPAREN parameter_type_list RPAREN
          direct_declarator ::= direct_declarator * LPAREN identifier_list RPAREN
          direct_declarator ::= direct_declarator * LPAREN RPAREN

                        LPAREN shift        16     
                      LSQUAREB shift        99     
                     {default} reduce       55     declarator ::= direct_declarator

State 73:
          struct_declaration ::= specifier_qualifier_list struct_declarator_list * SEMCOL
          struct_declarator_list ::= struct_declarator_list * COMMA struct_declarator

                        SEMCOL shift-reduce 47     struct_declaration ::= specifier_qualifier_list struct_declarator_list SEMCOL
                         COMMA shift        50     

State 74:
          struct_or_union_specifier ::= struct_or_union * IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union * LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union * IDENTIFIER

                    IDENTIFIER shift        100    
                      LBRACKET shift        23     

State 75:
          postfix_expression ::= postfix_expression LSQUAREB expression * RSQUAREB
          expression ::= expression * COMMA assignment_expression

                         COMMA shift        42     
                      RSQUAREB shift-reduce 100    postfix_expression ::= postfix_expression LSQUAREB expression RSQUAREB

State 76:
          primary_expression ::= LPAREN expression * RPAREN
          expression ::= expression * COMMA assignment_expression

                        RPAREN shift-reduce 31     primary_expression ::= LPAREN expression RPAREN
                         COMMA shift        42     

State 77:
     (40) init_declarator ::= declarator *
          init_declarator ::= declarator * ASSIGN initializer

                        ASSIGN shift        26     
                     {default} reduce       40     init_declarator ::= declarator

State 78:
          jump_statement ::= RETURN primary_expression * SEMCOL

                        SEMCOL shift-reduce 2      jump_statement ::= RETURN primary_expression SEMCOL

State 79:
          jump_statement ::= BREAK primary_expression * SEMCOL

                        SEMCOL shift-reduce 92     jump_statement ::= BREAK primary_expression SEMCOL

State 80:
          jump_statement ::= FALLTHROUGH * SEMCOL

                        SEMCOL shift-reduce 90     jump_statement ::= FALLTHROUGH SEMCOL

State 81:
          jump_statement ::= CONTINUE * SEMCOL

                        SEMCOL shift-reduce 89     jump_statement ::= CONTINUE SEMCOL

State 82:
          forloop_iteration_statement ::= FOR * LPAREN expression_statement expression_statement RPAREN statement
          forloop_iteration_statement ::= FOR * LPAREN expression_statement expression_statement expression RPAREN statement

                        LPAREN shift        21     

State 83:
          selection_statement ::= SWITCH * LPAREN expression RPAREN statement

                        LPAREN shift        32     

State 84:
     (84) selection_statement ::= IF LPAREN expression RPAREN statement *
          selection_statement ::= IF LPAREN expression RPAREN statement * ELSE statement

                          ELSE shift        10     
                          ELSE reduce       84      ** Parsing conflict **
                     {default} reduce       84     selection_statement ::= IF LPAREN expression RPAREN statement

State 85:
          selection_statement ::= IF * LPAREN expression RPAREN statement
          selection_statement ::= IF * LPAREN expression RPAREN statement ELSE statement

                        LPAREN shift        33     

State 86:
          postfix_expression ::= postfix_expression DOT * IDENTIFIER

                    IDENTIFIER shift-reduce 103    postfix_expression ::= postfix_expression DOT IDENTIFIER

State 87:
          cast_expression ::= LPAREN type_name * RPAREN cast_expression

                        RPAREN shift        37     

State 88:
          unary_expression ::= SIZEOF LPAREN type_name * RPAREN

                        RPAREN shift-reduce 119    unary_expression ::= SIZEOF LPAREN type_name RPAREN

State 89:
          direct_abstract_declarator ::= LPAREN parameter_type_list * RPAREN

                        RPAREN shift-reduce 67     direct_abstract_declarator ::= LPAREN parameter_type_list RPAREN

State 90:
          direct_abstract_declarator ::= LSQUAREB * RSQUAREB

                      RSQUAREB shift-reduce 64     direct_abstract_declarator ::= LSQUAREB RSQUAREB

State 91:
          direct_abstract_declarator ::= LPAREN abstract_declarator * RPAREN

                        RPAREN shift-reduce 63     direct_abstract_declarator ::= LPAREN abstract_declarator RPAREN

State 92:
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list * RPAREN

                        RPAREN shift-reduce 69     direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list RPAREN

State 93:
          direct_abstract_declarator ::= direct_abstract_declarator LSQUAREB * RSQUAREB

                      RSQUAREB shift-reduce 65     direct_abstract_declarator ::= direct_abstract_declarator LSQUAREB RSQUAREB

State 94:
          direct_declarator ::= LPAREN declarator * RPAREN

                        RPAREN shift-reduce 57     direct_declarator ::= LPAREN declarator RPAREN

State 95:
     (70) parameter_type_list ::= parameter_list *
          parameter_type_list ::= parameter_list * COMMA ELLIPSIS
          parameter_list ::= parameter_list * COMMA parameter_declaration

                         COMMA shift        30     
                     {default} reduce       70     parameter_type_list ::= parameter_list

State 96:
          identifier_list ::= identifier_list COMMA * IDENTIFIER

                    IDENTIFIER shift-reduce 78     identifier_list ::= identifier_list COMMA IDENTIFIER

State 97:
          direct_declarator ::= direct_declarator LPAREN parameter_type_list * RPAREN

                        RPAREN shift-reduce 59     direct_declarator ::= direct_declarator LPAREN parameter_type_list RPAREN

State 98:
          enum_specifier ::= ENUM IDENTIFIER * LBRACKET enumerator_list RBRACKET
     (95) enum_specifier ::= ENUM IDENTIFIER *

                      LBRACKET shift        53     
                     {default} reduce       95     enum_specifier ::= ENUM IDENTIFIER

State 99:
          direct_declarator ::= direct_declarator LSQUAREB * RSQUAREB

                      RSQUAREB shift-reduce 58     direct_declarator ::= direct_declarator LSQUAREB RSQUAREB

State 100:
          struct_or_union_specifier ::= struct_or_union IDENTIFIER * LBRACKET struct_declaration_list RBRACKET
     (44) struct_or_union_specifier ::= struct_or_union IDENTIFIER *

                      LBRACKET shift        24     
                     {default} reduce       44     struct_or_union_specifier ::= struct_or_union IDENTIFIER

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: DEFAULT (precedence=1)
    2: BREAK (precedence=1)
    3: RETURN (precedence=1)
    4: FALLTHROUGH (precedence=1)
    5: SEMCOL (precedence=1)
    6: FOR (precedence=1)
    7: SWITCH (precedence=1)
    8: IF (precedence=1)
    9: VARTYPE (precedence=1)
   10: IDENTIFIER (precedence=1)
   11: ASSIGN (precedence=1)
   12: AND (precedence=2)
   13: OR (precedence=3)
   14: EQ (precedence=4)
   15: NE (precedence=4)
   16: GT (precedence=4)
   17: GE (precedence=4)
   18: LT (precedence=4)
   19: LE (precedence=4)
   20: ADD (precedence=5)
   21: SUB (precedence=5)
   22: MUL (precedence=6)
   23: DIV (precedence=6)
   24: MOD (precedence=6)
   25: POS (precedence=7)
   26: NEG (precedence=7)
   27: LBRACKET (precedence=8)
   28: RBRACKET (precedence=8)
   29: LPAREN (precedence=8)
   30: RPAREN (precedence=8)
   31: EXP (precedence=9)
   32: NOT (precedence=9)
   33: END_OF_LINE
   34: END_OF_FILE
   35: STAR_ASSIGN
   36: DIV_ASSIGN
   37: MOD_ASSIGN
   38: ADD_ASSIGN
   39: SUB_ASSIGN
   40: LEFT_ASSIGN
   41: RIGHT_ASSIGN
   42: AND_ASSIGN
   43: XOR_ASSIGN
   44: OR_ASSIGN
   45: VOID
   46: CHAR
   47: SHORT
   48: INT
   49: LONG
   50: FLOAT
   51: DOUBLE
   52: SIGNED
   53: UNSIGNED
   54: TYPE_NAME
   55: STRUCT
   56: UNION
   57: CONSTANT
   58: STRING_LITERAL
   59: COMMA
   60: LSQUAREB
   61: RSQUAREB
   62: ELLIPSIS
   63: ELSE
   64: CONTINUE
   65: ENUM
   66: DOT
   67: INC_OP
   68: DEC_OP
   69: REF
   70: STAR
   71: PLUS
   72: MINUS
   73: TILDE
   74: SIZEOF
   75: program: <lambda> IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   76: input: <lambda> IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   77: lines: IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   78: translation_unit: IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   79: assignment_operator: ASSIGN STAR_ASSIGN DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN SUB_ASSIGN LEFT_ASSIGN RIGHT_ASSIGN AND_ASSIGN XOR_ASSIGN OR_ASSIGN
   80: type_specifier: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   81: struct_or_union_specifier: STRUCT UNION
   82: enum_specifier: ENUM
   83: struct_or_union: STRUCT UNION
   84: external_declaration: IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   85: function_definition: IDENTIFIER LPAREN
   86: declaration: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   87: declarator: IDENTIFIER LPAREN
   88: declaration_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   89: compound_statement: LBRACKET
   90: statement_list: BREAK RETURN FALLTHROUGH SEMCOL FOR SWITCH IF IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL CONTINUE INC_OP DEC_OP REF STAR PLUS MINUS TILDE SIZEOF
   91: statement: BREAK RETURN FALLTHROUGH SEMCOL FOR SWITCH IF IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL CONTINUE INC_OP DEC_OP REF STAR PLUS MINUS TILDE SIZEOF
   92: expression_statement: SEMCOL IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP REF STAR PLUS MINUS TILDE SIZEOF
   93: selection_statement: SWITCH IF
   94: forloop_iteration_statement: FOR
   95: jump_statement: BREAK RETURN FALLTHROUGH CONTINUE
   96: primary_expression: IDENTIFIER LPAREN CONSTANT STRING_LITERAL
   97: expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP REF STAR PLUS MINUS TILDE SIZEOF
   98: declaration_specifiers: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   99: init_declarator_list: IDENTIFIER LPAREN
  100: init_declarator: IDENTIFIER LPAREN
  101: initializer: IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP REF STAR PLUS MINUS TILDE SIZEOF
  102: struct_declaration_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  103: struct_declaration: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  104: specifier_qualifier_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  105: struct_declarator_list: IDENTIFIER LPAREN
  106: type_name: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  107: abstract_declarator: LPAREN LSQUAREB
  108: struct_declarator: IDENTIFIER LPAREN
  109: direct_declarator: IDENTIFIER LPAREN
  110: parameter_type_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  111: identifier_list: IDENTIFIER
  112: direct_abstract_declarator: LPAREN LSQUAREB
  113: parameter_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  114: parameter_declaration: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  115: initializer_list: IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP REF STAR PLUS MINUS TILDE SIZEOF
  116: assignment_expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP REF STAR PLUS MINUS TILDE SIZEOF
  117: enumerator_list: IDENTIFIER
  118: enumerator: IDENTIFIER
  119: postfix_expression: IDENTIFIER LPAREN CONSTANT STRING_LITERAL
  120: argument_expression_list: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP REF STAR PLUS MINUS TILDE SIZEOF
  121: unary_operator: NOT REF STAR PLUS MINUS TILDE
  122: unary_expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP REF STAR PLUS MINUS TILDE SIZEOF
  123: cast_expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP REF STAR PLUS MINUS TILDE SIZEOF
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ DEFAULT BREAK RETURN FALLTHROUGH SEMCOL FOR SWITCH IF VARTYPE IDENTIFIER
ASSIGN AND OR EQ NE GT GE LT LE ADD SUB MUL DIV MOD POS NEG LBRACKET
RBRACKET LPAREN RPAREN EXP NOT END_OF_LINE END_OF_FILE STAR_ASSIGN
DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN SUB_ASSIGN LEFT_ASSIGN RIGHT_ASSIGN
AND_ASSIGN XOR_ASSIGN OR_ASSIGN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED
UNSIGNED TYPE_NAME STRUCT UNION CONSTANT STRING_LITERAL COMMA LSQUAREB
RSQUAREB ELLIPSIS ELSE CONTINUE ENUM DOT INC_OP DEC_OP REF STAR PLUS MINUS
TILDE SIZEOF program input lines translation_unit assignment_operator
type_specifier struct_or_union_specifier enum_specifier struct_or_union
external_declaration function_definition declaration declarator
declaration_list compound_statement statement_list statement
expression_statement selection_statement forloop_iteration_statement
jump_statement primary_expression expression declaration_specifiers
init_declarator_list init_declarator initializer struct_declaration_list
struct_declaration specifier_qualifier_list struct_declarator_list type_name
abstract_declarator struct_declarator direct_declarator parameter_type_list
identifier_list direct_abstract_declarator parameter_list
parameter_declaration initializer_list assignment_expression enumerator_list
enumerator postfix_expression argument_expression_list unary_operator
unary_expression cast_expression
----------------------------------------------------
Rules:
   0: lines ::= translation_unit END_OF_LINE|END_OF_FILE.
   1: jump_statement ::= RETURN SEMCOL. [RETURN precedence=1]
   2: jump_statement ::= RETURN primary_expression SEMCOL. [RETURN precedence=1]
   3: program ::= input.
   4: input ::=.
   5: input ::= input lines.
   6: assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN. [ASSIGN precedence=1]
   7: type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME.
   8: type_specifier ::= struct_or_union_specifier.
   9: type_specifier ::= enum_specifier.
  10: struct_or_union ::= STRUCT|UNION.
  11: translation_unit ::= external_declaration.
  12: translation_unit ::= translation_unit external_declaration.
  13: external_declaration ::= function_definition.
  14: external_declaration ::= declaration.
  15: function_definition ::= declarator declaration_list compound_statement.
  16: function_definition ::= declarator compound_statement.
  17: statement_list ::= statement.
  18: statement_list ::= statement_list statement.
  19: statement ::= compound_statement.
  20: statement ::= expression_statement.
  21: statement ::= selection_statement.
  22: statement ::= forloop_iteration_statement.
  23: statement ::= jump_statement.
  24: compound_statement ::= LBRACKET RBRACKET. [LBRACKET precedence=8]
  25: compound_statement ::= LBRACKET statement_list RBRACKET. [LBRACKET precedence=8]
  26: compound_statement ::= LBRACKET declaration_list RBRACKET. [LBRACKET precedence=8]
  27: compound_statement ::= LBRACKET declaration_list statement_list RBRACKET. [LBRACKET precedence=8]
  28: primary_expression ::= IDENTIFIER. [IDENTIFIER precedence=1]
  29: primary_expression ::= CONSTANT.
  30: primary_expression ::= STRING_LITERAL.
  31: primary_expression ::= LPAREN expression RPAREN. [LPAREN precedence=8]
  32: declaration_list ::= declaration.
  33: declaration_list ::= declaration_list declaration.
  34: declaration ::= declaration_specifiers SEMCOL. [SEMCOL precedence=1]
  35: declaration ::= declaration_specifiers init_declarator_list SEMCOL. [SEMCOL precedence=1]
  36: declaration_specifiers ::= type_specifier.
  37: declaration_specifiers ::= type_specifier declaration_specifiers.
  38: init_declarator_list ::= init_declarator.
  39: init_declarator_list ::= init_declarator_list COMMA init_declarator.
  40: init_declarator ::= declarator.
  41: init_declarator ::= declarator ASSIGN initializer. [ASSIGN precedence=1]
  42: struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET. [IDENTIFIER precedence=1]
  43: struct_or_union_specifier ::= struct_or_union LBRACKET struct_declaration_list RBRACKET. [LBRACKET precedence=8]
  44: struct_or_union_specifier ::= struct_or_union IDENTIFIER. [IDENTIFIER precedence=1]
  45: struct_declaration_list ::= struct_declaration.
  46: struct_declaration_list ::= struct_declaration_list struct_declaration.
  47: struct_declaration ::= specifier_qualifier_list struct_declarator_list SEMCOL. [SEMCOL precedence=1]
  48: type_name ::= specifier_qualifier_list.
  49: type_name ::= specifier_qualifier_list abstract_declarator.
  50: specifier_qualifier_list ::= type_specifier specifier_qualifier_list.
  51: specifier_qualifier_list ::= type_specifier.
  52: struct_declarator_list ::= struct_declarator.
  53: struct_declarator_list ::= struct_declarator_list COMMA struct_declarator.
  54: struct_declarator ::= declarator.
  55: declarator ::= direct_declarator.
  56: direct_declarator ::= IDENTIFIER. [IDENTIFIER precedence=1]
  57: direct_declarator ::= LPAREN declarator RPAREN. [LPAREN precedence=8]
  58: direct_declarator ::= direct_declarator LSQUAREB RSQUAREB.
  59: direct_declarator ::= direct_declarator LPAREN parameter_type_list RPAREN. [LPAREN precedence=8]
  60: direct_declarator ::= direct_declarator LPAREN identifier_list RPAREN. [LPAREN precedence=8]
  61: direct_declarator ::= direct_declarator LPAREN RPAREN. [LPAREN precedence=8]
  62: abstract_declarator ::= direct_abstract_declarator.
  63: direct_abstract_declarator ::= LPAREN abstract_declarator RPAREN. [LPAREN precedence=8]
  64: direct_abstract_declarator ::= LSQUAREB RSQUAREB.
  65: direct_abstract_declarator ::= direct_abstract_declarator LSQUAREB RSQUAREB.
  66: direct_abstract_declarator ::= LPAREN RPAREN. [LPAREN precedence=8]
  67: direct_abstract_declarator ::= LPAREN parameter_type_list RPAREN. [LPAREN precedence=8]
  68: direct_abstract_declarator ::= direct_abstract_declarator LPAREN RPAREN. [LPAREN precedence=8]
  69: direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list RPAREN. [LPAREN precedence=8]
  70: parameter_type_list ::= parameter_list.
  71: parameter_type_list ::= parameter_list COMMA ELLIPSIS.
  72: parameter_list ::= parameter_declaration.
  73: parameter_list ::= parameter_list COMMA parameter_declaration.
  74: parameter_declaration ::= declaration_specifiers declarator.
  75: parameter_declaration ::= declaration_specifiers abstract_declarator.
  76: parameter_declaration ::= declaration_specifiers.
  77: identifier_list ::= IDENTIFIER. [IDENTIFIER precedence=1]
  78: identifier_list ::= identifier_list COMMA IDENTIFIER. [IDENTIFIER precedence=1]
  79: initializer_list ::= initializer.
  80: initializer_list ::= initializer_list COMMA initializer.
  81: initializer ::= assignment_expression.
  82: initializer ::= LBRACKET initializer_list RBRACKET. [LBRACKET precedence=8]
  83: initializer ::= LBRACKET initializer_list COMMA RBRACKET. [LBRACKET precedence=8]
  84: selection_statement ::= IF LPAREN expression RPAREN statement. [IF precedence=1]
  85: selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement. [IF precedence=1]
  86: selection_statement ::= SWITCH LPAREN expression RPAREN statement. [SWITCH precedence=1]
  87: forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement. [FOR precedence=1]
  88: forloop_iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement. [FOR precedence=1]
  89: jump_statement ::= CONTINUE SEMCOL. [SEMCOL precedence=1]
  90: jump_statement ::= FALLTHROUGH SEMCOL. [FALLTHROUGH precedence=1]
  91: jump_statement ::= BREAK SEMCOL. [BREAK precedence=1]
  92: jump_statement ::= BREAK primary_expression SEMCOL. [BREAK precedence=1]
  93: enum_specifier ::= ENUM LBRACKET enumerator_list RBRACKET. [LBRACKET precedence=8]
  94: enum_specifier ::= ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET. [IDENTIFIER precedence=1]
  95: enum_specifier ::= ENUM IDENTIFIER. [IDENTIFIER precedence=1]
  96: enumerator_list ::= enumerator.
  97: enumerator_list ::= enumerator_list COMMA enumerator.
  98: enumerator ::= IDENTIFIER. [IDENTIFIER precedence=1]
  99: postfix_expression ::= primary_expression.
 100: postfix_expression ::= postfix_expression LSQUAREB expression RSQUAREB.
 101: postfix_expression ::= postfix_expression LPAREN RPAREN. [LPAREN precedence=8]
 102: postfix_expression ::= postfix_expression LPAREN argument_expression_list RPAREN. [LPAREN precedence=8]
 103: postfix_expression ::= postfix_expression DOT IDENTIFIER. [IDENTIFIER precedence=1]
 104: postfix_expression ::= postfix_expression INC_OP.
 105: postfix_expression ::= postfix_expression DEC_OP.
 106: unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT. [NOT precedence=9]
 107: argument_expression_list ::= assignment_expression.
 108: argument_expression_list ::= argument_expression_list COMMA assignment_expression.
 109: expression_statement ::= SEMCOL. [SEMCOL precedence=1]
 110: expression_statement ::= expression SEMCOL. [SEMCOL precedence=1]
 111: expression ::= assignment_expression.
 112: expression ::= expression COMMA assignment_expression.
 113: assignment_expression ::= unary_expression assignment_operator assignment_expression.
 114: unary_expression ::= postfix_expression.
 115: unary_expression ::= INC_OP unary_expression.
 116: unary_expression ::= DEC_OP unary_expression.
 117: unary_expression ::= unary_operator cast_expression.
 118: unary_expression ::= SIZEOF unary_expression.
 119: unary_expression ::= SIZEOF LPAREN type_name RPAREN. [LPAREN precedence=8]
 120: cast_expression ::= unary_expression.
 121: cast_expression ::= LPAREN type_name RPAREN cast_expression. [LPAREN precedence=8]
