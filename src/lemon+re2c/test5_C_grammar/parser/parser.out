State 0:
          program ::= * input
      (4) input ::= *
          input ::= * input lines

                       program accept
                         input shift        13     
                     {default} reduce       4      input ::=

State 1:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= LBRACKET * RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= LBRACKET * statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= LBRACKET * declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          compound_statement ::= LBRACKET * declaration_list statement_list RBRACKET
          declaration_list ::= * declaration
          declaration_list ::= * declaration_list declaration
          statement_list ::= * statement
          statement_list ::= * statement_list statement
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        60     
                        RETURN shift        59     
                   FALLTHROUGH shift        82     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        84     
                        SWITCH shift        85     
                            IF shift        87     
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 98     compound_statement ::= LBRACKET RBRACKET
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                      CONTINUE shift        83     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                   declaration shift        2        /* because declaration==declaration_list */
        declaration_specifiers shift        48     
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
                     statement shift        6        /* because statement==statement_list */
            compound_statement shift        6        /* because compound_statement==statement */
          expression_statement shift        6        /* because expression_statement==statement */
           selection_statement shift        6        /* because selection_statement==statement */
           iteration_statement shift        6        /* because iteration_statement==statement */
                jump_statement shift        6        /* because jump_statement==statement */
                statement_list shift        6      
              declaration_list shift        2      

State 2:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= LBRACKET declaration_list * RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          compound_statement ::= LBRACKET declaration_list * statement_list RBRACKET
          declaration_list ::= declaration_list * declaration
          statement_list ::= * statement
          statement_list ::= * statement_list statement
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        60     
                        RETURN shift        59     
                   FALLTHROUGH shift        82     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        84     
                        SWITCH shift        85     
                            IF shift        87     
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 100    compound_statement ::= LBRACKET declaration_list RBRACKET
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                      CONTINUE shift        83     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                   declaration shift-reduce 103    declaration_list ::= declaration_list declaration
        declaration_specifiers shift        48     
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
                     statement shift        5        /* because statement==statement_list */
            compound_statement shift        5        /* because compound_statement==statement */
          expression_statement shift        5        /* because expression_statement==statement */
           selection_statement shift        5        /* because selection_statement==statement */
           iteration_statement shift        5        /* because iteration_statement==statement */
                jump_statement shift        5        /* because jump_statement==statement */
                statement_list shift        5      

State 3:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_expression ::= SIZEOF LPAREN * type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          type_name ::= * specifier_qualifier_list
          type_name ::= * specifier_qualifier_list abstract_declarator

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        78     
            postfix_expression shift        62     
         assignment_expression shift        78       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                     type_name shift        103    
                type_specifier shift        40     
     struct_or_union_specifier shift        40       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        40       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
      specifier_qualifier_list shift        54     

State 4:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          cast_expression ::= LPAREN * type_name RPAREN cast_expression
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          type_name ::= * specifier_qualifier_list
          type_name ::= * specifier_qualifier_list abstract_declarator

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        78     
            postfix_expression shift        62     
         assignment_expression shift        78       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                     type_name shift        90     
                type_specifier shift        40     
     struct_or_union_specifier shift        40       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        40       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
      specifier_qualifier_list shift        54     

State 5:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          compound_statement ::= LBRACKET declaration_list statement_list * RBRACKET
          statement_list ::= statement_list * statement
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        60     
                        RETURN shift        59     
                   FALLTHROUGH shift        82     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        84     
                        SWITCH shift        85     
                            IF shift        87     
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 101    compound_statement ::= LBRACKET declaration_list statement_list RBRACKET
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        83     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                     statement shift-reduce 105    statement_list ::= statement_list statement
            compound_statement shift-reduce 105    statement_list ::= statement_list statement  /* because compound_statement==statement */
          expression_statement shift-reduce 105    statement_list ::= statement_list statement  /* because expression_statement==statement */
           selection_statement shift-reduce 105    statement_list ::= statement_list statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 105    statement_list ::= statement_list statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 105    statement_list ::= statement_list statement  /* because jump_statement==statement */

State 6:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= LBRACKET statement_list * RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          statement_list ::= statement_list * statement
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        60     
                        RETURN shift        59     
                   FALLTHROUGH shift        82     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        84     
                        SWITCH shift        85     
                            IF shift        87     
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                      RBRACKET shift-reduce 99     compound_statement ::= LBRACKET statement_list RBRACKET
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        83     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                     statement shift-reduce 105    statement_list ::= statement_list statement
            compound_statement shift-reduce 105    statement_list ::= statement_list statement  /* because compound_statement==statement */
          expression_statement shift-reduce 105    statement_list ::= statement_list statement  /* because expression_statement==statement */
           selection_statement shift-reduce 105    statement_list ::= statement_list statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 105    statement_list ::= statement_list statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 105    statement_list ::= statement_list statement  /* because jump_statement==statement */

State 7:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN * statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        60     
                        RETURN shift        59     
                   FALLTHROUGH shift        82     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        84     
                        SWITCH shift        85     
                            IF shift        87     
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        83     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                     statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement
            compound_statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because compound_statement==statement */
          expression_statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because expression_statement==statement */
           selection_statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 111    iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement  /* because jump_statement==statement */

State 8:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN * statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        60     
                        RETURN shift        59     
                   FALLTHROUGH shift        82     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        84     
                        SWITCH shift        85     
                            IF shift        87     
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        83     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                     statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement
            compound_statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because compound_statement==statement */
          expression_statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because expression_statement==statement */
           selection_statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 112    iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement  /* because jump_statement==statement */

State 9:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          selection_statement ::= SWITCH LPAREN expression RPAREN * statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        60     
                        RETURN shift        59     
                   FALLTHROUGH shift        82     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        84     
                        SWITCH shift        85     
                            IF shift        87     
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        83     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                     statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement
            compound_statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because compound_statement==statement */
          expression_statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because expression_statement==statement */
           selection_statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 110    selection_statement ::= SWITCH LPAREN expression RPAREN statement  /* because jump_statement==statement */

State 10:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= IF LPAREN expression RPAREN statement ELSE * statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        60     
                        RETURN shift        59     
                   FALLTHROUGH shift        82     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        84     
                        SWITCH shift        85     
                            IF shift        87     
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        83     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                     statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement
            compound_statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because compound_statement==statement */
          expression_statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because expression_statement==statement */
           selection_statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because selection_statement==statement */
           iteration_statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because iteration_statement==statement */
                jump_statement shift-reduce 109    selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement  /* because jump_statement==statement */

State 11:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          statement ::= * compound_statement
          statement ::= * expression_statement
          statement ::= * selection_statement
          statement ::= * iteration_statement
          statement ::= * jump_statement
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          selection_statement ::= * IF LPAREN expression RPAREN statement
          selection_statement ::= IF LPAREN expression RPAREN * statement
          selection_statement ::= * IF LPAREN expression RPAREN statement ELSE statement
          selection_statement ::= IF LPAREN expression RPAREN * statement ELSE statement
          selection_statement ::= * SWITCH LPAREN expression RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= * FOR LPAREN expression_statement expression_statement expression RPAREN statement
          jump_statement ::= * CONTINUE SEMCOL
          jump_statement ::= * FALLTHROUGH SEMCOL
          jump_statement ::= * BREAK SEMCOL
          jump_statement ::= * BREAK primary_expression SEMCOL
          jump_statement ::= * RETURN SEMCOL
          jump_statement ::= * RETURN primary_expression SEMCOL

                         BREAK shift        60     
                        RETURN shift        59     
                   FALLTHROUGH shift        82     
                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                           FOR shift        84     
                        SWITCH shift        85     
                            IF shift        87     
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        1      
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONTINUE shift        83     
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
                     statement shift        86     
            compound_statement shift        86       /* because compound_statement==statement */
          expression_statement shift        86       /* because expression_statement==statement */
           selection_statement shift        86       /* because selection_statement==statement */
           iteration_statement shift        86       /* because iteration_statement==statement */
                jump_statement shift        86       /* because jump_statement==statement */

State 12:
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= LPAREN * declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= LPAREN * abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= LPAREN * RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= LPAREN * parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        12     
                        RPAREN shift-reduce 84     direct_abstract_declarator ::= LPAREN RPAREN
                      LSQUAREB shift        92     
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
        declaration_specifiers shift        49     
                type_specifier shift        41     
                    declarator shift        96     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
             direct_declarator shift        74     
           parameter_type_list shift        91     
                parameter_list shift        97     
         parameter_declaration shift        97       /* because parameter_declaration==parameter_list */
           abstract_declarator shift        93     
    direct_abstract_declarator shift        69     

State 13:
      (3) program ::= input *
          input ::= input * lines
          lines ::= * translation_unit END_OF_LINE|END_OF_FILE
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          translation_unit ::= * external_declaration
          translation_unit ::= * translation_unit external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          function_definition ::= * declaration_specifiers declarator declaration_list compound_statement
          function_definition ::= * declaration_specifiers declarator compound_statement
          function_definition ::= * declarator declaration_list compound_statement
          function_definition ::= * declarator compound_statement

                             $ reduce       3      program ::= input
                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        55     
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                         lines shift-reduce 5      input ::= input lines
              translation_unit shift        14     
                   declaration shift        14       /* because declaration==translation_unit */
        declaration_specifiers shift        50     
                type_specifier shift        41     
                    declarator shift        18     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
             direct_declarator shift        74     
          external_declaration shift        14       /* because external_declaration==translation_unit */
           function_definition shift        14       /* because function_definition==external_declaration */

State 14:
          lines ::= translation_unit * END_OF_LINE|END_OF_FILE
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          translation_unit ::= translation_unit * external_declaration
          external_declaration ::= * function_definition
          external_declaration ::= * declaration
          function_definition ::= * declaration_specifiers declarator declaration_list compound_statement
          function_definition ::= * declaration_specifiers declarator compound_statement
          function_definition ::= * declarator declaration_list compound_statement
          function_definition ::= * declarator compound_statement

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        55     
                   END_OF_LINE shift-reduce 0      lines ::= translation_unit END_OF_LINE|END_OF_FILE
                   END_OF_FILE shift-reduce 0      lines ::= translation_unit END_OF_LINE|END_OF_FILE
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                   declaration shift-reduce 118    translation_unit ::= translation_unit external_declaration  /* because declaration==external_declaration */
        declaration_specifiers shift        50     
                type_specifier shift        41     
                    declarator shift        18     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
             direct_declarator shift        74     
          external_declaration shift-reduce 118    translation_unit ::= translation_unit external_declaration
           function_definition shift-reduce 118    translation_unit ::= translation_unit external_declaration  /* because function_definition==external_declaration */

State 15:
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= LPAREN * abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= LPAREN * RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= LPAREN * parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN

                        LPAREN shift        15     
                        RPAREN shift-reduce 84     direct_abstract_declarator ::= LPAREN RPAREN
                      LSQUAREB shift        92     
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
        declaration_specifiers shift        49     
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
           parameter_type_list shift        91     
                parameter_list shift        97     
         parameter_declaration shift        97       /* because parameter_declaration==parameter_list */
           abstract_declarator shift        93     
    direct_abstract_declarator shift        69     

State 16:
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          direct_declarator ::= direct_declarator LPAREN * parameter_type_list RPAREN
          direct_declarator ::= direct_declarator LPAREN * identifier_list RPAREN
          direct_declarator ::= direct_declarator LPAREN * RPAREN
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER

                    IDENTIFIER shift-reduce 76     identifier_list ::= IDENTIFIER
                        RPAREN shift-reduce 68     direct_declarator ::= direct_declarator LPAREN RPAREN
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
        declaration_specifiers shift        49     
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
           parameter_type_list shift        99     
               identifier_list shift        70     
                parameter_list shift        97     
         parameter_declaration shift        97       /* because parameter_declaration==parameter_list */

State 17:
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
     (39) init_declarator ::= declarator *
          init_declarator ::= declarator * ASSIGN initializer
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          declaration_list ::= * declaration
          declaration_list ::= * declaration_list declaration
          function_definition ::= declaration_specifiers declarator * declaration_list compound_statement
          function_definition ::= declaration_specifiers declarator * compound_statement

                        ASSIGN shift        33     
                      LBRACKET shift        1      
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                   declaration shift        21       /* because declaration==declaration_list */
        declaration_specifiers shift        48     
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
            compound_statement shift-reduce 122    function_definition ::= declaration_specifiers declarator compound_statement
              declaration_list shift        21     
                     {default} reduce       39     init_declarator ::= declarator

State 18:
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          declaration_list ::= * declaration
          declaration_list ::= * declaration_list declaration
          function_definition ::= declarator * declaration_list compound_statement
          function_definition ::= declarator * compound_statement

                      LBRACKET shift        1      
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                   declaration shift        20       /* because declaration==declaration_list */
        declaration_specifiers shift        48     
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
            compound_statement shift-reduce 124    function_definition ::= declarator compound_statement
              declaration_list shift        20     

State 19:
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          parameter_type_list ::= * parameter_list
          parameter_type_list ::= * parameter_list COMMA ELLIPSIS
          parameter_list ::= * parameter_declaration
          parameter_list ::= * parameter_list COMMA parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN * RPAREN
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN * parameter_type_list RPAREN

                        RPAREN shift-reduce 86     direct_abstract_declarator ::= direct_abstract_declarator LPAREN RPAREN
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
        declaration_specifiers shift        49     
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
           parameter_type_list shift        94     
                parameter_list shift        97     
         parameter_declaration shift        97       /* because parameter_declaration==parameter_list */

State 20:
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          declaration_list ::= declaration_list * declaration
          function_definition ::= declarator declaration_list * compound_statement

                      LBRACKET shift        1      
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                   declaration shift-reduce 103    declaration_list ::= declaration_list declaration
        declaration_specifiers shift        48     
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
            compound_statement shift-reduce 123    function_definition ::= declarator declaration_list compound_statement

State 21:
          declaration ::= * declaration_specifiers SEMCOL
          declaration ::= * declaration_specifiers init_declarator_list SEMCOL
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          compound_statement ::= * LBRACKET RBRACKET
          compound_statement ::= * LBRACKET statement_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list RBRACKET
          compound_statement ::= * LBRACKET declaration_list statement_list RBRACKET
          declaration_list ::= declaration_list * declaration
          function_definition ::= declaration_specifiers declarator declaration_list * compound_statement

                      LBRACKET shift        1      
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                   declaration shift-reduce 103    declaration_list ::= declaration_list declaration
        declaration_specifiers shift        48     
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
            compound_statement shift-reduce 121    function_definition ::= declaration_specifiers declarator declaration_list compound_statement

State 22:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          iteration_statement ::= FOR LPAREN expression_statement * expression_statement RPAREN statement
          iteration_statement ::= FOR LPAREN expression_statement * expression_statement expression RPAREN statement

                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
          expression_statement shift        28     

State 23:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          expression_statement ::= * SEMCOL
          expression_statement ::= * expression SEMCOL
          iteration_statement ::= FOR LPAREN * expression_statement expression_statement RPAREN statement
          iteration_statement ::= FOR LPAREN * expression_statement expression_statement expression RPAREN statement

                        SEMCOL shift-reduce 106    expression_statement ::= SEMCOL
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        66     
            postfix_expression shift        62     
         assignment_expression shift        66       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     
          expression_statement shift        22     

State 24:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          initializer ::= * assignment_expression
          initializer ::= * LBRACKET initializer_list RBRACKET
          initializer ::= LBRACKET * initializer_list RBRACKET
          initializer ::= * LBRACKET initializer_list COMMA RBRACKET
          initializer ::= LBRACKET * initializer_list COMMA RBRACKET
          initializer_list ::= * initializer
          initializer_list ::= * initializer_list COMMA initializer

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        24     
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
         assignment_expression shift        67       /* because assignment_expression==initializer_list */
              unary_expression shift        58     
                unary_operator shift        43     
                   initializer shift        67       /* because initializer==initializer_list */
              initializer_list shift        67     

State 25:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union LBRACKET * struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                type_specifier shift        40     
     struct_or_union_specifier shift        40       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        40       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
       struct_declaration_list shift        30     
            struct_declaration shift        30       /* because struct_declaration==struct_declaration_list */
      specifier_qualifier_list shift        51     

State 26:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET * struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          struct_declaration_list ::= * struct_declaration
          struct_declaration_list ::= * struct_declaration_list struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                type_specifier shift        40     
     struct_or_union_specifier shift        40       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        40       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
       struct_declaration_list shift        32     
            struct_declaration shift        32       /* because struct_declaration==struct_declaration_list */
      specifier_qualifier_list shift        51     

State 27:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          initializer ::= * assignment_expression
          initializer ::= * LBRACKET initializer_list RBRACKET
          initializer ::= * LBRACKET initializer_list COMMA RBRACKET
          initializer ::= LBRACKET initializer_list COMMA * RBRACKET
          initializer_list ::= initializer_list COMMA * initializer

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        24     
                      RBRACKET shift-reduce 90     initializer ::= LBRACKET initializer_list COMMA RBRACKET
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
         assignment_expression shift-reduce 92     initializer_list ::= initializer_list COMMA initializer  /* because assignment_expression==initializer */
              unary_expression shift        58     
                unary_operator shift        43     
                   initializer shift-reduce 92     initializer_list ::= initializer_list COMMA initializer

State 28:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression_statement expression_statement * RPAREN statement
          iteration_statement ::= FOR LPAREN expression_statement expression_statement * expression RPAREN statement

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                        RPAREN shift        7      
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        63     
            postfix_expression shift        62     
         assignment_expression shift        63       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     

State 29:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= postfix_expression LPAREN * RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= postfix_expression LPAREN * argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          argument_expression_list ::= * assignment_expression
          argument_expression_list ::= * argument_expression_list COMMA assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                        RPAREN shift-reduce 12     postfix_expression ::= postfix_expression LPAREN RPAREN
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
      argument_expression_list shift        68     
         assignment_expression shift        68       /* because assignment_expression==argument_expression_list */
              unary_expression shift        58     
                unary_operator shift        43     

State 30:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union LBRACKET struct_declaration_list * RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                      RBRACKET shift-reduce 45     struct_or_union_specifier ::= struct_or_union LBRACKET struct_declaration_list RBRACKET
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                type_specifier shift        40     
     struct_or_union_specifier shift        40       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        40       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
            struct_declaration shift-reduce 49     struct_declaration_list ::= struct_declaration_list struct_declaration
      specifier_qualifier_list shift        51     

State 31:
          declaration_specifiers ::= * type_specifier
          declaration_specifiers ::= * type_specifier declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER
          parameter_type_list ::= parameter_list COMMA * ELLIPSIS
          parameter_list ::= parameter_list COMMA * parameter_declaration
          parameter_declaration ::= * declaration_specifiers declarator
          parameter_declaration ::= * declaration_specifiers abstract_declarator
          parameter_declaration ::= * declaration_specifiers

                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                      ELLIPSIS shift-reduce 70     parameter_type_list ::= parameter_list COMMA ELLIPSIS
        declaration_specifiers shift        49     
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
         parameter_declaration shift-reduce 72     parameter_list ::= parameter_list COMMA parameter_declaration

State 32:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET struct_declaration_list * RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          struct_declaration_list ::= struct_declaration_list * struct_declaration
          struct_declaration ::= * specifier_qualifier_list struct_declarator_list SEMCOL
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                      RBRACKET shift-reduce 44     struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                type_specifier shift        40     
     struct_or_union_specifier shift        40       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        40       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
            struct_declaration shift-reduce 49     struct_declaration_list ::= struct_declaration_list struct_declaration
      specifier_qualifier_list shift        51     

State 33:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          init_declarator ::= declarator ASSIGN * initializer
          initializer ::= * assignment_expression
          initializer ::= * LBRACKET initializer_list RBRACKET
          initializer ::= * LBRACKET initializer_list COMMA RBRACKET

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                      LBRACKET shift        24     
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
         assignment_expression shift-reduce 40     init_declarator ::= declarator ASSIGN initializer  /* because assignment_expression==initializer */
              unary_expression shift        58     
                unary_operator shift        43     
                   initializer shift-reduce 40     init_declarator ::= declarator ASSIGN initializer

State 34:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          selection_statement ::= SWITCH LPAREN * expression RPAREN statement

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        64     
            postfix_expression shift        62     
         assignment_expression shift        64       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     

State 35:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression
          selection_statement ::= IF LPAREN * expression RPAREN statement
          selection_statement ::= IF LPAREN * expression RPAREN statement ELSE statement

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        65     
            postfix_expression shift        62     
         assignment_expression shift        65       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     

State 36:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= postfix_expression LSQUAREB * expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        77     
            postfix_expression shift        62     
         assignment_expression shift        77       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     

State 37:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          primary_expression ::= LPAREN * expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= * assignment_expression
          expression ::= * expression COMMA assignment_expression

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
                    expression shift        78     
            postfix_expression shift        62     
         assignment_expression shift        78       /* because assignment_expression==expression */
              unary_expression shift        58     
                unary_operator shift        43     

State 38:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          argument_expression_list ::= argument_expression_list COMMA * assignment_expression
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
         assignment_expression shift-reduce 19     argument_expression_list ::= argument_expression_list COMMA assignment_expression
              unary_expression shift        58     
                unary_operator shift        43     

State 39:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression
          cast_expression ::= LPAREN type_name RPAREN * cast_expression

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        4      
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
              unary_expression shift-reduce 28     cast_expression ::= LPAREN type_name RPAREN cast_expression  /* because unary_expression==cast_expression */
                unary_operator shift        43     
               cast_expression shift-reduce 28     cast_expression ::= LPAREN type_name RPAREN cast_expression

State 40:
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          specifier_qualifier_list ::= * type_specifier specifier_qualifier_list
          specifier_qualifier_list ::= type_specifier * specifier_qualifier_list
          specifier_qualifier_list ::= * type_specifier
     (52) specifier_qualifier_list ::= type_specifier *
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
                type_specifier shift        40     
     struct_or_union_specifier shift        40       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        40       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
      specifier_qualifier_list shift-reduce 51     specifier_qualifier_list ::= type_specifier specifier_qualifier_list
                     {default} reduce       52     specifier_qualifier_list ::= type_specifier

State 41:
          declaration_specifiers ::= * type_specifier
     (35) declaration_specifiers ::= type_specifier *
          declaration_specifiers ::= * type_specifier declaration_specifiers
          declaration_specifiers ::= type_specifier * declaration_specifiers
          type_specifier ::= * VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
          type_specifier ::= * struct_or_union_specifier
          type_specifier ::= * enum_specifier
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= * struct_or_union IDENTIFIER
          struct_or_union ::= * STRUCT|UNION
          enum_specifier ::= * ENUM LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= * ENUM IDENTIFIER

                          VOID shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          CHAR shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         SHORT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                           INT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                          LONG shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                         FLOAT shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        DOUBLE shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        SIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                      UNSIGNED shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                     TYPE_NAME shift-reduce 41     type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME
                        STRUCT shift-reduce 47     struct_or_union ::= STRUCT|UNION
                         UNION shift-reduce 47     struct_or_union ::= STRUCT|UNION
                          ENUM shift        73     
        declaration_specifiers shift-reduce 36     declaration_specifiers ::= type_specifier declaration_specifiers
                type_specifier shift        41     
     struct_or_union_specifier shift        41       /* because struct_or_union_specifier==type_specifier */
                enum_specifier shift        41       /* because enum_specifier==type_specifier */
               struct_or_union shift        76     
                     {default} reduce       35     declaration_specifiers ::= type_specifier

State 42:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          assignment_expression ::= unary_expression assignment_operator * assignment_expression

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
         assignment_expression shift-reduce 29     assignment_expression ::= unary_expression assignment_operator assignment_expression
              unary_expression shift        58     
                unary_operator shift        43     

State 43:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= unary_operator * cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          cast_expression ::= * unary_expression
          cast_expression ::= * LPAREN type_name RPAREN cast_expression

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        4      
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
              unary_expression shift-reduce 23     unary_expression ::= unary_operator cast_expression  /* because unary_expression==cast_expression */
                unary_operator shift        43     
               cast_expression shift-reduce 23     unary_expression ::= unary_operator cast_expression

State 44:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT
          assignment_expression ::= * unary_expression assignment_operator assignment_expression
          expression ::= expression COMMA * assignment_expression

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
         assignment_expression shift-reduce 32     expression ::= expression COMMA assignment_expression
              unary_expression shift        58     
                unary_operator shift        43     

State 45:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= SIZEOF * unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_expression ::= SIZEOF * LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        3      
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
              unary_expression shift-reduce 24     unary_expression ::= SIZEOF unary_expression
                unary_operator shift        43     

State 46:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= DEC_OP * unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
              unary_expression shift-reduce 22     unary_expression ::= DEC_OP unary_expression
                unary_operator shift        43     

State 47:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          postfix_expression ::= * primary_expression
          postfix_expression ::= * postfix_expression LSQUAREB expression RSQUAREB
          postfix_expression ::= * postfix_expression LPAREN RPAREN
          postfix_expression ::= * postfix_expression LPAREN argument_expression_list RPAREN
          postfix_expression ::= * postfix_expression DOT IDENTIFIER
          postfix_expression ::= * postfix_expression PTR_OP IDENTIFIER
          postfix_expression ::= * postfix_expression INC_OP
          postfix_expression ::= * postfix_expression DEC_OP
          unary_expression ::= * postfix_expression
          unary_expression ::= * INC_OP unary_expression
          unary_expression ::= INC_OP * unary_expression
          unary_expression ::= * DEC_OP unary_expression
          unary_expression ::= * unary_operator cast_expression
          unary_expression ::= * SIZEOF unary_expression
          unary_expression ::= * SIZEOF LPAREN type_name RPAREN
          unary_operator ::= * REF|STAR|PLUS|MINUS|TILDE|NOT

                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                           NOT shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
                        INC_OP shift        47     
                        DEC_OP shift        46     
                        SIZEOF shift        45     
                           REF shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          STAR shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                          PLUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         MINUS shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
                         TILDE shift-reduce 26     unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT
            primary_expression shift        62       /* because primary_expression==postfix_expression */
            postfix_expression shift        62     
              unary_expression shift-reduce 21     unary_expression ::= INC_OP unary_expression
                unary_operator shift        43     

State 48:
          declaration ::= declaration_specifiers * SEMCOL
          declaration ::= declaration_specifiers * init_declarator_list SEMCOL
          init_declarator_list ::= * init_declarator
          init_declarator_list ::= * init_declarator_list COMMA init_declarator
          init_declarator ::= * declarator
          init_declarator ::= * declarator ASSIGN initializer
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                        SEMCOL shift-reduce 33     declaration ::= declaration_specifiers SEMCOL
                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        55     
          init_declarator_list shift        79     
               init_declarator shift        79       /* because init_declarator==init_declarator_list */
                    declarator shift        104    
             direct_declarator shift        74     

State 49:
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          parameter_declaration ::= declaration_specifiers * declarator
          parameter_declaration ::= declaration_specifiers * abstract_declarator
     (75) parameter_declaration ::= declaration_specifiers *
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        12     
                      LSQUAREB shift        92     
                    declarator shift-reduce 73     parameter_declaration ::= declaration_specifiers declarator
             direct_declarator shift        74     
           abstract_declarator shift-reduce 74     parameter_declaration ::= declaration_specifiers abstract_declarator
    direct_abstract_declarator shift        69     
                     {default} reduce       75     parameter_declaration ::= declaration_specifiers

State 50:
          declaration ::= declaration_specifiers * SEMCOL
          declaration ::= declaration_specifiers * init_declarator_list SEMCOL
          init_declarator_list ::= * init_declarator
          init_declarator_list ::= * init_declarator_list COMMA init_declarator
          init_declarator ::= * declarator
          init_declarator ::= * declarator ASSIGN initializer
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN
          function_definition ::= declaration_specifiers * declarator declaration_list compound_statement
          function_definition ::= declaration_specifiers * declarator compound_statement

                        SEMCOL shift-reduce 33     declaration ::= declaration_specifiers SEMCOL
                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        55     
          init_declarator_list shift        79     
               init_declarator shift        79       /* because init_declarator==init_declarator_list */
                    declarator shift        17     
             direct_declarator shift        74     

State 51:
          struct_declaration ::= specifier_qualifier_list * struct_declarator_list SEMCOL
          struct_declarator_list ::= * struct_declarator
          struct_declarator_list ::= * struct_declarator_list COMMA struct_declarator
          struct_declarator ::= * declarator
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        55     
                    declarator shift        75       /* because declarator==struct_declarator_list */
        struct_declarator_list shift        75     
             struct_declarator shift        75       /* because struct_declarator==struct_declarator_list */
             direct_declarator shift        74     

State 52:
          struct_declarator_list ::= struct_declarator_list COMMA * struct_declarator
          struct_declarator ::= * declarator
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        55     
                    declarator shift-reduce 54     struct_declarator_list ::= struct_declarator_list COMMA struct_declarator  /* because declarator==struct_declarator */
             struct_declarator shift-reduce 54     struct_declarator_list ::= struct_declarator_list COMMA struct_declarator
             direct_declarator shift        74     

State 53:
          init_declarator_list ::= init_declarator_list COMMA * init_declarator
          init_declarator ::= * declarator
          init_declarator ::= * declarator ASSIGN initializer
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        55     
               init_declarator shift-reduce 38     init_declarator_list ::= init_declarator_list COMMA init_declarator
                    declarator shift        104    
             direct_declarator shift        74     

State 54:
     (78) type_name ::= specifier_qualifier_list *
          type_name ::= specifier_qualifier_list * abstract_declarator
          abstract_declarator ::= * direct_abstract_declarator
          direct_abstract_declarator ::= * LPAREN abstract_declarator RPAREN
          direct_abstract_declarator ::= * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * direct_abstract_declarator LSQUAREB RSQUAREB
          direct_abstract_declarator ::= * LPAREN RPAREN
          direct_abstract_declarator ::= * LPAREN parameter_type_list RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN RPAREN
          direct_abstract_declarator ::= * direct_abstract_declarator LPAREN parameter_type_list RPAREN

                        LPAREN shift        15     
                      LSQUAREB shift        92     
           abstract_declarator shift-reduce 79     type_name ::= specifier_qualifier_list abstract_declarator
    direct_abstract_declarator shift        69     
                     {default} reduce       78     type_name ::= specifier_qualifier_list

State 55:
          declarator ::= * direct_declarator
          direct_declarator ::= * IDENTIFIER
          direct_declarator ::= * LPAREN declarator RPAREN
          direct_declarator ::= LPAREN * declarator RPAREN
          direct_declarator ::= * direct_declarator LSQUAREB RSQUAREB
          direct_declarator ::= * direct_declarator LPAREN parameter_type_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN identifier_list RPAREN
          direct_declarator ::= * direct_declarator LPAREN RPAREN

                    IDENTIFIER shift-reduce 63     direct_declarator ::= IDENTIFIER
                        LPAREN shift        55     
                    declarator shift        96     
             direct_declarator shift        74     

State 56:
          enum_specifier ::= ENUM IDENTIFIER LBRACKET * enumerator_list RBRACKET
          enumerator_list ::= * enumerator
          enumerator_list ::= * enumerator_list COMMA enumerator
          enumerator ::= * IDENTIFIER

                    IDENTIFIER shift-reduce 61     enumerator ::= IDENTIFIER
               enumerator_list shift        71     
                    enumerator shift        71       /* because enumerator==enumerator_list */

State 57:
          enum_specifier ::= ENUM LBRACKET * enumerator_list RBRACKET
          enumerator_list ::= * enumerator
          enumerator_list ::= * enumerator_list COMMA enumerator
          enumerator ::= * IDENTIFIER

                    IDENTIFIER shift-reduce 61     enumerator ::= IDENTIFIER
               enumerator_list shift        72     
                    enumerator shift        72       /* because enumerator==enumerator_list */

State 58:
          assignment_expression ::= unary_expression * assignment_operator assignment_expression
          assignment_operator ::= * ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN

                        ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                   STAR_ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    DIV_ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    MOD_ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    ADD_ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    SUB_ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                   LEFT_ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                  RIGHT_ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    AND_ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                    XOR_ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
                     OR_ASSIGN shift-reduce 30     assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN
           assignment_operator shift        42     

State 59:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          jump_statement ::= RETURN * SEMCOL
          jump_statement ::= RETURN * primary_expression SEMCOL

                        SEMCOL shift-reduce 1      jump_statement ::= RETURN SEMCOL
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
            primary_expression shift        80     

State 60:
          primary_expression ::= * IDENTIFIER
          primary_expression ::= * CONSTANT
          primary_expression ::= * STRING_LITERAL
          primary_expression ::= * LPAREN expression RPAREN
          jump_statement ::= BREAK * SEMCOL
          jump_statement ::= BREAK * primary_expression SEMCOL

                        SEMCOL shift-reduce 115    jump_statement ::= BREAK SEMCOL
                    IDENTIFIER shift-reduce 6      primary_expression ::= IDENTIFIER
                        LPAREN shift        37     
                      CONSTANT shift-reduce 7      primary_expression ::= CONSTANT
                STRING_LITERAL shift-reduce 8      primary_expression ::= STRING_LITERAL
            primary_expression shift        81     

State 61:
          enumerator_list ::= enumerator_list COMMA * enumerator
          enumerator ::= * IDENTIFIER

                    IDENTIFIER shift-reduce 61     enumerator ::= IDENTIFIER
                    enumerator shift-reduce 60     enumerator_list ::= enumerator_list COMMA enumerator

State 62:
          postfix_expression ::= postfix_expression * LSQUAREB expression RSQUAREB
          postfix_expression ::= postfix_expression * LPAREN RPAREN
          postfix_expression ::= postfix_expression * LPAREN argument_expression_list RPAREN
          postfix_expression ::= postfix_expression * DOT IDENTIFIER
          postfix_expression ::= postfix_expression * PTR_OP IDENTIFIER
          postfix_expression ::= postfix_expression * INC_OP
          postfix_expression ::= postfix_expression * DEC_OP
     (20) unary_expression ::= postfix_expression *

                        LPAREN shift        29     
                      LSQUAREB shift        36     
                           DOT shift        89     
                        PTR_OP shift        88     
                        INC_OP shift-reduce 16     postfix_expression ::= postfix_expression INC_OP
                        DEC_OP shift-reduce 17     postfix_expression ::= postfix_expression DEC_OP
                     {default} reduce       20     unary_expression ::= postfix_expression

State 63:
          expression ::= expression * COMMA assignment_expression
          iteration_statement ::= FOR LPAREN expression_statement expression_statement expression * RPAREN statement

                        RPAREN shift        8      
                         COMMA shift        44     

State 64:
          expression ::= expression * COMMA assignment_expression
          selection_statement ::= SWITCH LPAREN expression * RPAREN statement

                        RPAREN shift        9      
                         COMMA shift        44     

State 65:
          expression ::= expression * COMMA assignment_expression
          selection_statement ::= IF LPAREN expression * RPAREN statement
          selection_statement ::= IF LPAREN expression * RPAREN statement ELSE statement

                        RPAREN shift        11     
                         COMMA shift        44     

State 66:
          expression ::= expression * COMMA assignment_expression
          expression_statement ::= expression * SEMCOL

                        SEMCOL shift-reduce 107    expression_statement ::= expression SEMCOL
                         COMMA shift        44     

State 67:
          initializer ::= LBRACKET initializer_list * RBRACKET
          initializer ::= LBRACKET initializer_list * COMMA RBRACKET
          initializer_list ::= initializer_list * COMMA initializer

                      RBRACKET shift-reduce 89     initializer ::= LBRACKET initializer_list RBRACKET
                         COMMA shift        27     

State 68:
          postfix_expression ::= postfix_expression LPAREN argument_expression_list * RPAREN
          argument_expression_list ::= argument_expression_list * COMMA assignment_expression

                        RPAREN shift-reduce 13     postfix_expression ::= postfix_expression LPAREN argument_expression_list RPAREN
                         COMMA shift        38     

State 69:
     (80) abstract_declarator ::= direct_abstract_declarator *
          direct_abstract_declarator ::= direct_abstract_declarator * LSQUAREB RSQUAREB
          direct_abstract_declarator ::= direct_abstract_declarator * LPAREN RPAREN
          direct_abstract_declarator ::= direct_abstract_declarator * LPAREN parameter_type_list RPAREN

                        LPAREN shift        19     
                      LSQUAREB shift        95     
                     {default} reduce       80     abstract_declarator ::= direct_abstract_declarator

State 70:
          direct_declarator ::= direct_declarator LPAREN identifier_list * RPAREN
          identifier_list ::= identifier_list * COMMA IDENTIFIER

                        RPAREN shift-reduce 67     direct_declarator ::= direct_declarator LPAREN identifier_list RPAREN
                         COMMA shift        98     

State 71:
          enum_specifier ::= ENUM IDENTIFIER LBRACKET enumerator_list * RBRACKET
          enumerator_list ::= enumerator_list * COMMA enumerator

                      RBRACKET shift-reduce 57     enum_specifier ::= ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET
                         COMMA shift        61     

State 72:
          enum_specifier ::= ENUM LBRACKET enumerator_list * RBRACKET
          enumerator_list ::= enumerator_list * COMMA enumerator

                      RBRACKET shift-reduce 56     enum_specifier ::= ENUM LBRACKET enumerator_list RBRACKET
                         COMMA shift        61     

State 73:
          enum_specifier ::= ENUM * LBRACKET enumerator_list RBRACKET
          enum_specifier ::= ENUM * IDENTIFIER LBRACKET enumerator_list RBRACKET
          enum_specifier ::= ENUM * IDENTIFIER

                    IDENTIFIER shift        100    
                      LBRACKET shift        57     

State 74:
     (62) declarator ::= direct_declarator *
          direct_declarator ::= direct_declarator * LSQUAREB RSQUAREB
          direct_declarator ::= direct_declarator * LPAREN parameter_type_list RPAREN
          direct_declarator ::= direct_declarator * LPAREN identifier_list RPAREN
          direct_declarator ::= direct_declarator * LPAREN RPAREN

                        LPAREN shift        16     
                      LSQUAREB shift        101    
                     {default} reduce       62     declarator ::= direct_declarator

State 75:
          struct_declaration ::= specifier_qualifier_list struct_declarator_list * SEMCOL
          struct_declarator_list ::= struct_declarator_list * COMMA struct_declarator

                        SEMCOL shift-reduce 50     struct_declaration ::= specifier_qualifier_list struct_declarator_list SEMCOL
                         COMMA shift        52     

State 76:
          struct_or_union_specifier ::= struct_or_union * IDENTIFIER LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union * LBRACKET struct_declaration_list RBRACKET
          struct_or_union_specifier ::= struct_or_union * IDENTIFIER

                    IDENTIFIER shift        102    
                      LBRACKET shift        25     

State 77:
          postfix_expression ::= postfix_expression LSQUAREB expression * RSQUAREB
          expression ::= expression * COMMA assignment_expression

                      RSQUAREB shift-reduce 11     postfix_expression ::= postfix_expression LSQUAREB expression RSQUAREB
                         COMMA shift        44     

State 78:
          primary_expression ::= LPAREN expression * RPAREN
          expression ::= expression * COMMA assignment_expression

                        RPAREN shift-reduce 9      primary_expression ::= LPAREN expression RPAREN
                         COMMA shift        44     

State 79:
          declaration ::= declaration_specifiers init_declarator_list * SEMCOL
          init_declarator_list ::= init_declarator_list * COMMA init_declarator

                        SEMCOL shift-reduce 34     declaration ::= declaration_specifiers init_declarator_list SEMCOL
                         COMMA shift        53     

State 80:
          jump_statement ::= RETURN primary_expression * SEMCOL

                        SEMCOL shift-reduce 2      jump_statement ::= RETURN primary_expression SEMCOL

State 81:
          jump_statement ::= BREAK primary_expression * SEMCOL

                        SEMCOL shift-reduce 116    jump_statement ::= BREAK primary_expression SEMCOL

State 82:
          jump_statement ::= FALLTHROUGH * SEMCOL

                        SEMCOL shift-reduce 114    jump_statement ::= FALLTHROUGH SEMCOL

State 83:
          jump_statement ::= CONTINUE * SEMCOL

                        SEMCOL shift-reduce 113    jump_statement ::= CONTINUE SEMCOL

State 84:
          iteration_statement ::= FOR * LPAREN expression_statement expression_statement RPAREN statement
          iteration_statement ::= FOR * LPAREN expression_statement expression_statement expression RPAREN statement

                        LPAREN shift        23     

State 85:
          selection_statement ::= SWITCH * LPAREN expression RPAREN statement

                        LPAREN shift        34     

State 86:
    (108) selection_statement ::= IF LPAREN expression RPAREN statement *
          selection_statement ::= IF LPAREN expression RPAREN statement * ELSE statement

                          ELSE shift        10     
                          ELSE reduce       108     ** Parsing conflict **
                     {default} reduce       108    selection_statement ::= IF LPAREN expression RPAREN statement

State 87:
          selection_statement ::= IF * LPAREN expression RPAREN statement
          selection_statement ::= IF * LPAREN expression RPAREN statement ELSE statement

                        LPAREN shift        35     

State 88:
          postfix_expression ::= postfix_expression PTR_OP * IDENTIFIER

                    IDENTIFIER shift-reduce 15     postfix_expression ::= postfix_expression PTR_OP IDENTIFIER

State 89:
          postfix_expression ::= postfix_expression DOT * IDENTIFIER

                    IDENTIFIER shift-reduce 14     postfix_expression ::= postfix_expression DOT IDENTIFIER

State 90:
          cast_expression ::= LPAREN type_name * RPAREN cast_expression

                        RPAREN shift        39     

State 91:
          direct_abstract_declarator ::= LPAREN parameter_type_list * RPAREN

                        RPAREN shift-reduce 85     direct_abstract_declarator ::= LPAREN parameter_type_list RPAREN

State 92:
          direct_abstract_declarator ::= LSQUAREB * RSQUAREB

                      RSQUAREB shift-reduce 82     direct_abstract_declarator ::= LSQUAREB RSQUAREB

State 93:
          direct_abstract_declarator ::= LPAREN abstract_declarator * RPAREN

                        RPAREN shift-reduce 81     direct_abstract_declarator ::= LPAREN abstract_declarator RPAREN

State 94:
          direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list * RPAREN

                        RPAREN shift-reduce 87     direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list RPAREN

State 95:
          direct_abstract_declarator ::= direct_abstract_declarator LSQUAREB * RSQUAREB

                      RSQUAREB shift-reduce 83     direct_abstract_declarator ::= direct_abstract_declarator LSQUAREB RSQUAREB

State 96:
          direct_declarator ::= LPAREN declarator * RPAREN

                        RPAREN shift-reduce 64     direct_declarator ::= LPAREN declarator RPAREN

State 97:
     (69) parameter_type_list ::= parameter_list *
          parameter_type_list ::= parameter_list * COMMA ELLIPSIS
          parameter_list ::= parameter_list * COMMA parameter_declaration

                         COMMA shift        31     
                     {default} reduce       69     parameter_type_list ::= parameter_list

State 98:
          identifier_list ::= identifier_list COMMA * IDENTIFIER

                    IDENTIFIER shift-reduce 77     identifier_list ::= identifier_list COMMA IDENTIFIER

State 99:
          direct_declarator ::= direct_declarator LPAREN parameter_type_list * RPAREN

                        RPAREN shift-reduce 66     direct_declarator ::= direct_declarator LPAREN parameter_type_list RPAREN

State 100:
          enum_specifier ::= ENUM IDENTIFIER * LBRACKET enumerator_list RBRACKET
     (58) enum_specifier ::= ENUM IDENTIFIER *

                      LBRACKET shift        56     
                     {default} reduce       58     enum_specifier ::= ENUM IDENTIFIER

State 101:
          direct_declarator ::= direct_declarator LSQUAREB * RSQUAREB

                      RSQUAREB shift-reduce 65     direct_declarator ::= direct_declarator LSQUAREB RSQUAREB

State 102:
          struct_or_union_specifier ::= struct_or_union IDENTIFIER * LBRACKET struct_declaration_list RBRACKET
     (46) struct_or_union_specifier ::= struct_or_union IDENTIFIER *

                      LBRACKET shift        26     
                     {default} reduce       46     struct_or_union_specifier ::= struct_or_union IDENTIFIER

State 103:
          unary_expression ::= SIZEOF LPAREN type_name * RPAREN

                        RPAREN shift-reduce 25     unary_expression ::= SIZEOF LPAREN type_name RPAREN

State 104:
     (39) init_declarator ::= declarator *
          init_declarator ::= declarator * ASSIGN initializer

                        ASSIGN shift        33     
                     {default} reduce       39     init_declarator ::= declarator

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: DEFAULT (precedence=1)
    2: BREAK (precedence=1)
    3: RETURN (precedence=1)
    4: FALLTHROUGH (precedence=1)
    5: SEMCOL (precedence=1)
    6: FOR (precedence=1)
    7: SWITCH (precedence=1)
    8: IF (precedence=1)
    9: VARTYPE (precedence=1)
   10: IDENTIFIER (precedence=1)
   11: ASSIGN (precedence=1)
   12: AND (precedence=2)
   13: OR (precedence=3)
   14: EQ (precedence=4)
   15: NE (precedence=4)
   16: GT (precedence=4)
   17: GE (precedence=4)
   18: LT (precedence=4)
   19: LE (precedence=4)
   20: ADD (precedence=5)
   21: SUB (precedence=5)
   22: MUL (precedence=6)
   23: DIV (precedence=6)
   24: MOD (precedence=6)
   25: POS (precedence=7)
   26: NEG (precedence=7)
   27: LBRACKET (precedence=8)
   28: RBRACKET (precedence=8)
   29: LPAREN (precedence=8)
   30: RPAREN (precedence=8)
   31: EXP (precedence=9)
   32: NOT (precedence=9)
   33: END_OF_LINE
   34: END_OF_FILE
   35: CONSTANT
   36: STRING_LITERAL
   37: LSQUAREB
   38: RSQUAREB
   39: DOT
   40: PTR_OP
   41: INC_OP
   42: DEC_OP
   43: COMMA
   44: SIZEOF
   45: REF
   46: STAR
   47: PLUS
   48: MINUS
   49: TILDE
   50: STAR_ASSIGN
   51: DIV_ASSIGN
   52: MOD_ASSIGN
   53: ADD_ASSIGN
   54: SUB_ASSIGN
   55: LEFT_ASSIGN
   56: RIGHT_ASSIGN
   57: AND_ASSIGN
   58: XOR_ASSIGN
   59: OR_ASSIGN
   60: VOID
   61: CHAR
   62: SHORT
   63: INT
   64: LONG
   65: FLOAT
   66: DOUBLE
   67: SIGNED
   68: UNSIGNED
   69: TYPE_NAME
   70: STRUCT
   71: UNION
   72: ENUM
   73: ELLIPSIS
   74: ELSE
   75: CONTINUE
   76: program: <lambda> IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   77: input: <lambda> IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   78: lines: IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   79: translation_unit: IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   80: primary_expression: IDENTIFIER LPAREN CONSTANT STRING_LITERAL
   81: expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   82: postfix_expression: IDENTIFIER LPAREN CONSTANT STRING_LITERAL
   83: argument_expression_list: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   84: assignment_expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   85: unary_expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   86: unary_operator: NOT REF STAR PLUS MINUS TILDE
   87: cast_expression: IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   88: type_name: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   89: assignment_operator: ASSIGN STAR_ASSIGN DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN SUB_ASSIGN LEFT_ASSIGN RIGHT_ASSIGN AND_ASSIGN XOR_ASSIGN OR_ASSIGN
   90: declaration: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   91: declaration_specifiers: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   92: init_declarator_list: IDENTIFIER LPAREN
   93: type_specifier: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
   94: init_declarator: IDENTIFIER LPAREN
   95: declarator: IDENTIFIER LPAREN
   96: initializer: IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
   97: struct_or_union_specifier: STRUCT UNION
   98: enum_specifier: ENUM
   99: struct_or_union: STRUCT UNION
  100: struct_declaration_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  101: struct_declaration: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  102: specifier_qualifier_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  103: struct_declarator_list: IDENTIFIER LPAREN
  104: struct_declarator: IDENTIFIER LPAREN
  105: enumerator_list: IDENTIFIER
  106: enumerator: IDENTIFIER
  107: direct_declarator: IDENTIFIER LPAREN
  108: parameter_type_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  109: identifier_list: IDENTIFIER
  110: parameter_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  111: parameter_declaration: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  112: abstract_declarator: LPAREN LSQUAREB
  113: direct_abstract_declarator: LPAREN LSQUAREB
  114: initializer_list: IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
  115: statement: BREAK RETURN FALLTHROUGH SEMCOL FOR SWITCH IF IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE CONTINUE
  116: compound_statement: LBRACKET
  117: expression_statement: SEMCOL IDENTIFIER LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE
  118: selection_statement: SWITCH IF
  119: iteration_statement: FOR
  120: jump_statement: BREAK RETURN FALLTHROUGH CONTINUE
  121: statement_list: BREAK RETURN FALLTHROUGH SEMCOL FOR SWITCH IF IDENTIFIER LBRACKET LPAREN NOT CONSTANT STRING_LITERAL INC_OP DEC_OP SIZEOF REF STAR PLUS MINUS TILDE CONTINUE
  122: declaration_list: VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  123: external_declaration: IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
  124: function_definition: IDENTIFIER LPAREN VOID CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ DEFAULT BREAK RETURN FALLTHROUGH SEMCOL FOR SWITCH IF VARTYPE IDENTIFIER
ASSIGN AND OR EQ NE GT GE LT LE ADD SUB MUL DIV MOD POS NEG LBRACKET
RBRACKET LPAREN RPAREN EXP NOT END_OF_LINE END_OF_FILE CONSTANT
STRING_LITERAL LSQUAREB RSQUAREB DOT PTR_OP INC_OP DEC_OP COMMA SIZEOF REF
STAR PLUS MINUS TILDE STAR_ASSIGN DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN
SUB_ASSIGN LEFT_ASSIGN RIGHT_ASSIGN AND_ASSIGN XOR_ASSIGN OR_ASSIGN VOID
CHAR SHORT INT LONG FLOAT DOUBLE SIGNED UNSIGNED TYPE_NAME STRUCT UNION ENUM
ELLIPSIS ELSE CONTINUE program input lines translation_unit
primary_expression expression postfix_expression argument_expression_list
assignment_expression unary_expression unary_operator cast_expression
type_name assignment_operator declaration declaration_specifiers
init_declarator_list type_specifier init_declarator declarator initializer
struct_or_union_specifier enum_specifier struct_or_union
struct_declaration_list struct_declaration specifier_qualifier_list
struct_declarator_list struct_declarator enumerator_list enumerator
direct_declarator parameter_type_list identifier_list parameter_list
parameter_declaration abstract_declarator direct_abstract_declarator
initializer_list statement compound_statement expression_statement
selection_statement iteration_statement jump_statement statement_list
declaration_list external_declaration function_definition
----------------------------------------------------
Rules:
   0: lines ::= translation_unit END_OF_LINE|END_OF_FILE.
   1: jump_statement ::= RETURN SEMCOL. [RETURN precedence=1]
   2: jump_statement ::= RETURN primary_expression SEMCOL. [RETURN precedence=1]
   3: program ::= input.
   4: input ::=.
   5: input ::= input lines.
   6: primary_expression ::= IDENTIFIER. [IDENTIFIER precedence=1]
   7: primary_expression ::= CONSTANT.
   8: primary_expression ::= STRING_LITERAL.
   9: primary_expression ::= LPAREN expression RPAREN. [LPAREN precedence=8]
  10: postfix_expression ::= primary_expression.
  11: postfix_expression ::= postfix_expression LSQUAREB expression RSQUAREB.
  12: postfix_expression ::= postfix_expression LPAREN RPAREN. [LPAREN precedence=8]
  13: postfix_expression ::= postfix_expression LPAREN argument_expression_list RPAREN. [LPAREN precedence=8]
  14: postfix_expression ::= postfix_expression DOT IDENTIFIER. [IDENTIFIER precedence=1]
  15: postfix_expression ::= postfix_expression PTR_OP IDENTIFIER. [IDENTIFIER precedence=1]
  16: postfix_expression ::= postfix_expression INC_OP.
  17: postfix_expression ::= postfix_expression DEC_OP.
  18: argument_expression_list ::= assignment_expression.
  19: argument_expression_list ::= argument_expression_list COMMA assignment_expression.
  20: unary_expression ::= postfix_expression.
  21: unary_expression ::= INC_OP unary_expression.
  22: unary_expression ::= DEC_OP unary_expression.
  23: unary_expression ::= unary_operator cast_expression.
  24: unary_expression ::= SIZEOF unary_expression.
  25: unary_expression ::= SIZEOF LPAREN type_name RPAREN. [LPAREN precedence=8]
  26: unary_operator ::= REF|STAR|PLUS|MINUS|TILDE|NOT. [NOT precedence=9]
  27: cast_expression ::= unary_expression.
  28: cast_expression ::= LPAREN type_name RPAREN cast_expression. [LPAREN precedence=8]
  29: assignment_expression ::= unary_expression assignment_operator assignment_expression.
  30: assignment_operator ::= ASSIGN|STAR_ASSIGN|DIV_ASSIGN|MOD_ASSIGN|ADD_ASSIGN|SUB_ASSIGN|LEFT_ASSIGN|RIGHT_ASSIGN|AND_ASSIGN|XOR_ASSIGN|OR_ASSIGN. [ASSIGN precedence=1]
  31: expression ::= assignment_expression.
  32: expression ::= expression COMMA assignment_expression.
  33: declaration ::= declaration_specifiers SEMCOL. [SEMCOL precedence=1]
  34: declaration ::= declaration_specifiers init_declarator_list SEMCOL. [SEMCOL precedence=1]
  35: declaration_specifiers ::= type_specifier.
  36: declaration_specifiers ::= type_specifier declaration_specifiers.
  37: init_declarator_list ::= init_declarator.
  38: init_declarator_list ::= init_declarator_list COMMA init_declarator.
  39: init_declarator ::= declarator.
  40: init_declarator ::= declarator ASSIGN initializer. [ASSIGN precedence=1]
  41: type_specifier ::= VOID|CHAR|SHORT|INT|LONG|FLOAT|DOUBLE|SIGNED|UNSIGNED|TYPE_NAME.
  42: type_specifier ::= struct_or_union_specifier.
  43: type_specifier ::= enum_specifier.
  44: struct_or_union_specifier ::= struct_or_union IDENTIFIER LBRACKET struct_declaration_list RBRACKET. [IDENTIFIER precedence=1]
  45: struct_or_union_specifier ::= struct_or_union LBRACKET struct_declaration_list RBRACKET. [LBRACKET precedence=8]
  46: struct_or_union_specifier ::= struct_or_union IDENTIFIER. [IDENTIFIER precedence=1]
  47: struct_or_union ::= STRUCT|UNION.
  48: struct_declaration_list ::= struct_declaration.
  49: struct_declaration_list ::= struct_declaration_list struct_declaration.
  50: struct_declaration ::= specifier_qualifier_list struct_declarator_list SEMCOL. [SEMCOL precedence=1]
  51: specifier_qualifier_list ::= type_specifier specifier_qualifier_list.
  52: specifier_qualifier_list ::= type_specifier.
  53: struct_declarator_list ::= struct_declarator.
  54: struct_declarator_list ::= struct_declarator_list COMMA struct_declarator.
  55: struct_declarator ::= declarator.
  56: enum_specifier ::= ENUM LBRACKET enumerator_list RBRACKET. [LBRACKET precedence=8]
  57: enum_specifier ::= ENUM IDENTIFIER LBRACKET enumerator_list RBRACKET. [IDENTIFIER precedence=1]
  58: enum_specifier ::= ENUM IDENTIFIER. [IDENTIFIER precedence=1]
  59: enumerator_list ::= enumerator.
  60: enumerator_list ::= enumerator_list COMMA enumerator.
  61: enumerator ::= IDENTIFIER. [IDENTIFIER precedence=1]
  62: declarator ::= direct_declarator.
  63: direct_declarator ::= IDENTIFIER. [IDENTIFIER precedence=1]
  64: direct_declarator ::= LPAREN declarator RPAREN. [LPAREN precedence=8]
  65: direct_declarator ::= direct_declarator LSQUAREB RSQUAREB.
  66: direct_declarator ::= direct_declarator LPAREN parameter_type_list RPAREN. [LPAREN precedence=8]
  67: direct_declarator ::= direct_declarator LPAREN identifier_list RPAREN. [LPAREN precedence=8]
  68: direct_declarator ::= direct_declarator LPAREN RPAREN. [LPAREN precedence=8]
  69: parameter_type_list ::= parameter_list.
  70: parameter_type_list ::= parameter_list COMMA ELLIPSIS.
  71: parameter_list ::= parameter_declaration.
  72: parameter_list ::= parameter_list COMMA parameter_declaration.
  73: parameter_declaration ::= declaration_specifiers declarator.
  74: parameter_declaration ::= declaration_specifiers abstract_declarator.
  75: parameter_declaration ::= declaration_specifiers.
  76: identifier_list ::= IDENTIFIER. [IDENTIFIER precedence=1]
  77: identifier_list ::= identifier_list COMMA IDENTIFIER. [IDENTIFIER precedence=1]
  78: type_name ::= specifier_qualifier_list.
  79: type_name ::= specifier_qualifier_list abstract_declarator.
  80: abstract_declarator ::= direct_abstract_declarator.
  81: direct_abstract_declarator ::= LPAREN abstract_declarator RPAREN. [LPAREN precedence=8]
  82: direct_abstract_declarator ::= LSQUAREB RSQUAREB.
  83: direct_abstract_declarator ::= direct_abstract_declarator LSQUAREB RSQUAREB.
  84: direct_abstract_declarator ::= LPAREN RPAREN. [LPAREN precedence=8]
  85: direct_abstract_declarator ::= LPAREN parameter_type_list RPAREN. [LPAREN precedence=8]
  86: direct_abstract_declarator ::= direct_abstract_declarator LPAREN RPAREN. [LPAREN precedence=8]
  87: direct_abstract_declarator ::= direct_abstract_declarator LPAREN parameter_type_list RPAREN. [LPAREN precedence=8]
  88: initializer ::= assignment_expression.
  89: initializer ::= LBRACKET initializer_list RBRACKET. [LBRACKET precedence=8]
  90: initializer ::= LBRACKET initializer_list COMMA RBRACKET. [LBRACKET precedence=8]
  91: initializer_list ::= initializer.
  92: initializer_list ::= initializer_list COMMA initializer.
  93: statement ::= compound_statement.
  94: statement ::= expression_statement.
  95: statement ::= selection_statement.
  96: statement ::= iteration_statement.
  97: statement ::= jump_statement.
  98: compound_statement ::= LBRACKET RBRACKET. [LBRACKET precedence=8]
  99: compound_statement ::= LBRACKET statement_list RBRACKET. [LBRACKET precedence=8]
 100: compound_statement ::= LBRACKET declaration_list RBRACKET. [LBRACKET precedence=8]
 101: compound_statement ::= LBRACKET declaration_list statement_list RBRACKET. [LBRACKET precedence=8]
 102: declaration_list ::= declaration.
 103: declaration_list ::= declaration_list declaration.
 104: statement_list ::= statement.
 105: statement_list ::= statement_list statement.
 106: expression_statement ::= SEMCOL. [SEMCOL precedence=1]
 107: expression_statement ::= expression SEMCOL. [SEMCOL precedence=1]
 108: selection_statement ::= IF LPAREN expression RPAREN statement. [IF precedence=1]
 109: selection_statement ::= IF LPAREN expression RPAREN statement ELSE statement. [IF precedence=1]
 110: selection_statement ::= SWITCH LPAREN expression RPAREN statement. [SWITCH precedence=1]
 111: iteration_statement ::= FOR LPAREN expression_statement expression_statement RPAREN statement. [FOR precedence=1]
 112: iteration_statement ::= FOR LPAREN expression_statement expression_statement expression RPAREN statement. [FOR precedence=1]
 113: jump_statement ::= CONTINUE SEMCOL. [SEMCOL precedence=1]
 114: jump_statement ::= FALLTHROUGH SEMCOL. [FALLTHROUGH precedence=1]
 115: jump_statement ::= BREAK SEMCOL. [BREAK precedence=1]
 116: jump_statement ::= BREAK primary_expression SEMCOL. [BREAK precedence=1]
 117: translation_unit ::= external_declaration.
 118: translation_unit ::= translation_unit external_declaration.
 119: external_declaration ::= function_definition.
 120: external_declaration ::= declaration.
 121: function_definition ::= declaration_specifiers declarator declaration_list compound_statement.
 122: function_definition ::= declaration_specifiers declarator compound_statement.
 123: function_definition ::= declarator declaration_list compound_statement.
 124: function_definition ::= declarator compound_statement.
