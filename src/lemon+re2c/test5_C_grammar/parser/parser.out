State 0:
          program ::= * input
      (4) input ::= *
          input ::= * input lines

                       program accept
                         input shift        55     
                     {default} reduce       4      input ::=

State 1:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER
          variable_declaration ::= * identifier_list ASSIGN type
          variable_declaration ::= * identifier_list ASSIGN type ASSIGN expression
          variable_declaration ::= * identifier_list ASSIGN QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= * identifier_list ASSIGN boolean_literal
          forstmt ::= FOR * for_init SEMCOL expression SEMCOL for_update for_block_statement
          for_init ::= * expression
          for_init ::= * variable_declaration

                    IDENTIFIER shift        94     
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        95     
                      opAssign shift        95       /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */
          variable_declaration shift        93       /* because variable_declaration==for_init */
               identifier_list shift        72     
                      for_init shift        93     

State 2:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE
          switchstmt ::= SWITCH expression LBRACKET * switch_block RBRACKET
          switch_block ::= * expression LBRACKET switch_case_block RBRACKET
          switch_block ::= * DEFAULT LBRACKET statement RBRACKET

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                       DEFAULT shift        88     
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        66     
                      opAssign shift        66       /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */
                  switch_block shift        89     

State 3:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE
          forstmt ::= FOR for_init SEMCOL expression SEMCOL * for_update for_block_statement
          for_update ::= * expression

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        92     
                      opAssign shift        92       /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */
                    for_update shift        50     

State 4:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= IDENTIFIER LPAREN * expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= IDENTIFIER LPAREN * RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                        RPAREN shift-reduce 68     value ::= IDENTIFIER LPAREN RPAREN
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        81     
                      opAssign shift        81       /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 5:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE
          switchstmt ::= SWITCH * expression LBRACKET switch_block RBRACKET

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        67     
                      opAssign shift        67       /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 6:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE
          forstmt ::= FOR for_init SEMCOL * expression SEMCOL for_update for_block_statement

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        68     
                      opAssign shift        68       /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 7:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE
          ifstmt ::= IF * expression LBRACKET block_statement RBRACKET
          ifstmt ::= IF * expression LBRACKET block_statement RBRACKET ELSE LBRACKET block_statement RBRACKET

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        69     
                      opAssign shift        69       /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 8:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE
          variable_declaration ::= identifier_list ASSIGN type ASSIGN * expression

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        104    
                      opAssign shift        104      /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 9:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= LPAREN * expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        77     
                      opAssign shift        77       /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 10:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE
          variable_assignment ::= IDENTIFIER ASSIGN * expression

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        118    
                      opAssign shift        118      /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 11:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE
     (92) for_jump_statement ::= BREAK *
          for_jump_statement ::= BREAK * expression

                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        91     
                      opAssign shift        91       /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */
                     {default} reduce       92     for_jump_statement ::= BREAK

State 12:
          expression ::= * expression COMMA opAssign
          expression ::= * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE
      (1) proc_return ::= RETURN *
          proc_return ::= RETURN * expression

                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                    expression shift        101    
                      opAssign shift        101      /* because opAssign==expression */
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */
                     {default} reduce       1      proc_return ::= RETURN

State 13:
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= opOr LEFT_ASSIGN * opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 27     opAssign ::= opOr LEFT_ASSIGN opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 14:
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= opOr RIGHT_ASSIGN * opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 26     opAssign ::= opOr RIGHT_ASSIGN opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 15:
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= opOr OR_ASSIGN * opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 25     opAssign ::= opOr OR_ASSIGN opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 16:
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= opOr AND_ASSIGN * opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 24     opAssign ::= opOr AND_ASSIGN opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 17:
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= opOr XOR_ASSIGN * opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 23     opAssign ::= opOr XOR_ASSIGN opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 18:
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= opOr DIV_ASSIGN * opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 22     opAssign ::= opOr DIV_ASSIGN opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 19:
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= opOr MUL_ASSIGN * opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 21     opAssign ::= opOr MUL_ASSIGN opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 20:
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= opOr SUB_ASSIGN * opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 20     opAssign ::= opOr SUB_ASSIGN opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 21:
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= opOr ADD_ASSIGN * opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 19     opAssign ::= opOr ADD_ASSIGN opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 22:
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= opOr ASSIGN * opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 18     opAssign ::= opOr ASSIGN opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 23:
          expression ::= expression COMMA * opAssign
          opAssign ::= * opOr ASSIGN opAssign
          opAssign ::= * opOr ADD_ASSIGN opAssign
          opAssign ::= * opOr SUB_ASSIGN opAssign
          opAssign ::= * opOr MUL_ASSIGN opAssign
          opAssign ::= * opOr DIV_ASSIGN opAssign
          opAssign ::= * opOr XOR_ASSIGN opAssign
          opAssign ::= * opOr AND_ASSIGN opAssign
          opAssign ::= * opOr OR_ASSIGN opAssign
          opAssign ::= * opOr RIGHT_ASSIGN opAssign
          opAssign ::= * opOr LEFT_ASSIGN opAssign
          opAssign ::= * opOr
          opOr ::= * opOr OR_OP opAnd
          opOr ::= * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opAssign shift-reduce 16     expression ::= expression COMMA opAssign
                          opOr shift        59     
                         opAnd shift        117    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 24:
          opOr ::= opOr OR_OP * opAnd
          opAnd ::= * opAnd AND_OP opBinOR
          opAnd ::= * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                         opAnd shift        107    
                       opBinOR shift        109    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 25:
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= opBinOR PIPE * opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opBinOR shift        115    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 26:
          opAnd ::= opAnd AND_OP * opBinOR
          opBinOR ::= * opBinOR PIPE opBinOR
          opBinOR ::= * opBinXOR
          opBinXOR ::= * opBinXOR XOR opBinAND
          opBinXOR ::= * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opBinOR shift        116    
                      opBinXOR shift        114    
                      opBinAND shift        108    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 27:
          statement ::= * variable
          statement ::= * ifstmt
          statement ::= * forstmt
          statement ::= * switchstmt
          statement ::= * proc_definition
          statement ::= * proc_call
          variable ::= * variable_declaration
          variable ::= * variable_assignment
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER
          variable_declaration ::= * identifier_list ASSIGN type
          variable_declaration ::= * identifier_list ASSIGN type ASSIGN expression
          variable_declaration ::= * identifier_list ASSIGN QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= * identifier_list ASSIGN boolean_literal
          variable_assignment ::= * IDENTIFIER ASSIGN expression
          variable_assignment ::= * identifier_list ASSIGN identifier_list
          ifstmt ::= * IF expression LBRACKET block_statement RBRACKET
          ifstmt ::= * IF expression LBRACKET block_statement RBRACKET ELSE LBRACKET block_statement RBRACKET
          forstmt ::= * FOR for_init SEMCOL expression SEMCOL for_update for_block_statement
          switchstmt ::= * SWITCH expression LBRACKET switch_block RBRACKET
          switch_block ::= expression LBRACKET * switch_case_block RBRACKET
          switch_case_block ::= * FALLTHROUGH
          switch_case_block ::= * statement
          proc_definition ::= * IDENTIFIER LPAREN RPAREN proc_statement
          proc_definition ::= * IDENTIFIER LPAREN variable_declaration_list RPAREN proc_statement
          proc_call ::= * IDENTIFIER LPAREN RPAREN
          proc_call ::= * IDENTIFIER LPAREN variable_declaration_list RPAREN

                    IDENTIFIER shift        85     
                            IF shift        7      
                           FOR shift        1      
                        SWITCH shift        5      
                   FALLTHROUGH shift-reduce 98     switch_case_block ::= FALLTHROUGH
                     statement shift        90       /* because statement==switch_case_block */
                      variable shift        90       /* because variable==statement */
                        ifstmt shift        90       /* because ifstmt==statement */
                       forstmt shift        90       /* because forstmt==statement */
                    switchstmt shift        90       /* because switchstmt==statement */
               proc_definition shift        90       /* because proc_definition==statement */
                     proc_call shift        90       /* because proc_call==statement */
          variable_declaration shift        90       /* because variable_declaration==variable */
           variable_assignment shift        90       /* because variable_assignment==variable */
               identifier_list shift        70     
             switch_case_block shift        90     

State 28:
          block_statement ::= LBRACKET * RBRACKET
          block_statement ::= LBRACKET * statement_list RBRACKET
          statement_list ::= * statement
          statement_list ::= * statement_list statement
          statement ::= * variable
          statement ::= * ifstmt
          statement ::= * forstmt
          statement ::= * switchstmt
          statement ::= * proc_definition
          statement ::= * proc_call
          variable ::= * variable_declaration
          variable ::= * variable_assignment
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER
          variable_declaration ::= * identifier_list ASSIGN type
          variable_declaration ::= * identifier_list ASSIGN type ASSIGN expression
          variable_declaration ::= * identifier_list ASSIGN QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= * identifier_list ASSIGN boolean_literal
          variable_assignment ::= * IDENTIFIER ASSIGN expression
          variable_assignment ::= * identifier_list ASSIGN identifier_list
          ifstmt ::= * IF expression LBRACKET block_statement RBRACKET
          ifstmt ::= * IF expression LBRACKET block_statement RBRACKET ELSE LBRACKET block_statement RBRACKET
          forstmt ::= * FOR for_init SEMCOL expression SEMCOL for_update for_block_statement
          switchstmt ::= * SWITCH expression LBRACKET switch_block RBRACKET
          proc_definition ::= * IDENTIFIER LPAREN RPAREN proc_statement
          proc_definition ::= * IDENTIFIER LPAREN variable_declaration_list RPAREN proc_statement
          proc_call ::= * IDENTIFIER LPAREN RPAREN
          proc_call ::= * IDENTIFIER LPAREN variable_declaration_list RPAREN

                    IDENTIFIER shift        85     
                            IF shift        7      
                           FOR shift        1      
                        SWITCH shift        5      
                      RBRACKET shift-reduce 6      block_statement ::= LBRACKET RBRACKET
                statement_list shift        29     
                     statement shift        29       /* because statement==statement_list */
                      variable shift        29       /* because variable==statement */
                        ifstmt shift        29       /* because ifstmt==statement */
                       forstmt shift        29       /* because forstmt==statement */
                    switchstmt shift        29       /* because switchstmt==statement */
               proc_definition shift        29       /* because proc_definition==statement */
                     proc_call shift        29       /* because proc_call==statement */
          variable_declaration shift        29       /* because variable_declaration==variable */
           variable_assignment shift        29       /* because variable_assignment==variable */
               identifier_list shift        70     

State 29:
          block_statement ::= LBRACKET statement_list * RBRACKET
          statement_list ::= statement_list * statement
          statement ::= * variable
          statement ::= * ifstmt
          statement ::= * forstmt
          statement ::= * switchstmt
          statement ::= * proc_definition
          statement ::= * proc_call
          variable ::= * variable_declaration
          variable ::= * variable_assignment
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER
          variable_declaration ::= * identifier_list ASSIGN type
          variable_declaration ::= * identifier_list ASSIGN type ASSIGN expression
          variable_declaration ::= * identifier_list ASSIGN QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= * identifier_list ASSIGN boolean_literal
          variable_assignment ::= * IDENTIFIER ASSIGN expression
          variable_assignment ::= * identifier_list ASSIGN identifier_list
          ifstmt ::= * IF expression LBRACKET block_statement RBRACKET
          ifstmt ::= * IF expression LBRACKET block_statement RBRACKET ELSE LBRACKET block_statement RBRACKET
          forstmt ::= * FOR for_init SEMCOL expression SEMCOL for_update for_block_statement
          switchstmt ::= * SWITCH expression LBRACKET switch_block RBRACKET
          proc_definition ::= * IDENTIFIER LPAREN RPAREN proc_statement
          proc_definition ::= * IDENTIFIER LPAREN variable_declaration_list RPAREN proc_statement
          proc_call ::= * IDENTIFIER LPAREN RPAREN
          proc_call ::= * IDENTIFIER LPAREN variable_declaration_list RPAREN

                    IDENTIFIER shift        85     
                            IF shift        7      
                           FOR shift        1      
                        SWITCH shift        5      
                      RBRACKET shift-reduce 7      block_statement ::= LBRACKET statement_list RBRACKET
                     statement shift-reduce 9      statement_list ::= statement_list statement
                      variable shift-reduce 9      statement_list ::= statement_list statement  /* because variable==statement */
                        ifstmt shift-reduce 9      statement_list ::= statement_list statement  /* because ifstmt==statement */
                       forstmt shift-reduce 9      statement_list ::= statement_list statement  /* because forstmt==statement */
                    switchstmt shift-reduce 9      statement_list ::= statement_list statement  /* because switchstmt==statement */
               proc_definition shift-reduce 9      statement_list ::= statement_list statement  /* because proc_definition==statement */
                     proc_call shift-reduce 9      statement_list ::= statement_list statement  /* because proc_call==statement */
          variable_declaration shift-reduce 9      statement_list ::= statement_list statement  /* because variable_declaration==variable */
           variable_assignment shift-reduce 9      statement_list ::= statement_list statement  /* because variable_assignment==variable */
               identifier_list shift        70     

State 30:
          statement ::= * variable
          statement ::= * ifstmt
          statement ::= * forstmt
          statement ::= * switchstmt
          statement ::= * proc_definition
          statement ::= * proc_call
          variable ::= * variable_declaration
          variable ::= * variable_assignment
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER
          variable_declaration ::= * identifier_list ASSIGN type
          variable_declaration ::= * identifier_list ASSIGN type ASSIGN expression
          variable_declaration ::= * identifier_list ASSIGN QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= * identifier_list ASSIGN boolean_literal
          variable_assignment ::= * IDENTIFIER ASSIGN expression
          variable_assignment ::= * identifier_list ASSIGN identifier_list
          ifstmt ::= * IF expression LBRACKET block_statement RBRACKET
          ifstmt ::= * IF expression LBRACKET block_statement RBRACKET ELSE LBRACKET block_statement RBRACKET
          forstmt ::= * FOR for_init SEMCOL expression SEMCOL for_update for_block_statement
          switchstmt ::= * SWITCH expression LBRACKET switch_block RBRACKET
          switch_block ::= DEFAULT LBRACKET * statement RBRACKET
          proc_definition ::= * IDENTIFIER LPAREN RPAREN proc_statement
          proc_definition ::= * IDENTIFIER LPAREN variable_declaration_list RPAREN proc_statement
          proc_call ::= * IDENTIFIER LPAREN RPAREN
          proc_call ::= * IDENTIFIER LPAREN variable_declaration_list RPAREN

                    IDENTIFIER shift        85     
                            IF shift        7      
                           FOR shift        1      
                        SWITCH shift        5      
                     statement shift        87     
                      variable shift        87       /* because variable==statement */
                        ifstmt shift        87       /* because ifstmt==statement */
                       forstmt shift        87       /* because forstmt==statement */
                    switchstmt shift        87       /* because switchstmt==statement */
               proc_definition shift        87       /* because proc_definition==statement */
                     proc_call shift        87       /* because proc_call==statement */
          variable_declaration shift        87       /* because variable_declaration==variable */
           variable_assignment shift        87       /* because variable_assignment==variable */
               identifier_list shift        70     

State 31:
          opBinXOR ::= opBinXOR XOR * opBinAND
          opBinAND ::= * opBinAND REF opEquate
          opBinAND ::= * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opBinAND shift        113    
                      opEquate shift        80     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 32:
          opBinAND ::= opBinAND REF * opEquate
          opEquate ::= * opEquate EQ_OP opCompare
          opEquate ::= * opEquate NE_OP opCompare
          opEquate ::= * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                      opEquate shift        84     
                     opCompare shift        60     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 33:
          opEquate ::= opEquate NE_OP * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                     opCompare shift        61     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 34:
          opEquate ::= opEquate EQ_OP * opCompare
          opCompare ::= * opCompare LT opShift
          opCompare ::= * opCompare GT opShift
          opCompare ::= * opCompare LE_OP opShift
          opCompare ::= * opCompare GE_OP opShift
          opCompare ::= * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                     opCompare shift        62     
                       opShift shift        73     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 35:
          opCompare ::= opCompare GE_OP * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opShift shift        74     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 36:
          opCompare ::= opCompare LE_OP * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opShift shift        76     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 37:
          opCompare ::= opCompare GT * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opShift shift        79     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 38:
          opCompare ::= opCompare LT * opShift
          opShift ::= * opShift LEFT_OP opAdd
          opShift ::= * opShift RIGHT_OP opAdd
          opShift ::= * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opShift shift        83     
                         opAdd shift        75     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 39:
          opShift ::= opShift RIGHT_OP * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                         opAdd shift        78     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 40:
          opShift ::= opShift LEFT_OP * opAdd
          opAdd ::= * opAdd PLUS opMult
          opAdd ::= * opAdd MINUS opMult
          opAdd ::= * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                         opAdd shift        82     
                        opMult shift        63     
                       opUnary shift        63       /* because opUnary==opMult */
                         value shift        63       /* because value==opUnary */
               boolean_literal shift        63       /* because boolean_literal==value */

State 41:
          opAdd ::= opAdd MINUS * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                        opMult shift        64     
                       opUnary shift        64       /* because opUnary==opMult */
                         value shift        64       /* because value==opUnary */
               boolean_literal shift        64       /* because boolean_literal==value */

State 42:
          opAdd ::= opAdd PLUS * opMult
          opMult ::= * opMult STAR opUnary
          opMult ::= * opMult DIV opUnary
          opMult ::= * opMult MOD opUnary
          opMult ::= * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                        opMult shift        65     
                       opUnary shift        65       /* because opUnary==opMult */
                         value shift        65       /* because value==opUnary */
               boolean_literal shift        65       /* because boolean_literal==value */

State 43:
          boolean_literal ::= * TRUE|FALSE
          type ::= * U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER
          variable_declaration ::= identifier_list ASSIGN * type
          variable_declaration ::= identifier_list ASSIGN * type ASSIGN expression
          variable_declaration ::= identifier_list ASSIGN * QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= identifier_list ASSIGN * boolean_literal
          variable_assignment ::= identifier_list ASSIGN * identifier_list

                    IDENTIFIER shift-reduce 76     identifier_list ::= IDENTIFIER
                         QUOTE shift        103    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                            U8 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           U16 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           U32 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           U64 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                          U128 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                            I8 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           I16 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           I32 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           I64 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                          I128 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           F16 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           F32 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           F64 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
               boolean_literal shift-reduce 81     variable_declaration ::= identifier_list ASSIGN boolean_literal
                          type shift        105    
               identifier_list shift        100    

State 44:
          opMult ::= opMult MOD * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opUnary shift-reduce 55     opMult ::= opMult MOD opUnary
                         value shift-reduce 55     opMult ::= opMult MOD opUnary  /* because value==opUnary */
               boolean_literal shift-reduce 55     opMult ::= opMult MOD opUnary  /* because boolean_literal==value */

State 45:
          opMult ::= opMult DIV * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opUnary shift-reduce 54     opMult ::= opMult DIV opUnary
                         value shift-reduce 54     opMult ::= opMult DIV opUnary  /* because value==opUnary */
               boolean_literal shift-reduce 54     opMult ::= opMult DIV opUnary  /* because boolean_literal==value */

State 46:
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= MINUS * opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opUnary shift-reduce 59     opUnary ::= MINUS opUnary
                         value shift-reduce 59     opUnary ::= MINUS opUnary  /* because value==opUnary */
               boolean_literal shift-reduce 59     opUnary ::= MINUS opUnary  /* because boolean_literal==value */

State 47:
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= TILDE * opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opUnary shift-reduce 58     opUnary ::= TILDE opUnary
                         value shift-reduce 58     opUnary ::= TILDE opUnary  /* because value==opUnary */
               boolean_literal shift-reduce 58     opUnary ::= TILDE opUnary  /* because boolean_literal==value */

State 48:
          opUnary ::= * NOT opUnary
          opUnary ::= NOT * opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opUnary shift-reduce 57     opUnary ::= NOT opUnary
                         value shift-reduce 57     opUnary ::= NOT opUnary  /* because value==opUnary */
               boolean_literal shift-reduce 57     opUnary ::= NOT opUnary  /* because boolean_literal==value */

State 49:
          opMult ::= opMult STAR * opUnary
          opUnary ::= * NOT opUnary
          opUnary ::= * TILDE opUnary
          opUnary ::= * MINUS opUnary
          opUnary ::= * value
          value ::= * OCTLITERAL
          value ::= * HEXLITERAL
          value ::= * NUMBERLITERAL
          value ::= * QUOTE STRINGLITERAL QUOTE
          value ::= * CHARLITERAL
          value ::= * FLOATLITERAL
          value ::= * IDENTIFIER LPAREN expression RPAREN
          value ::= * IDENTIFIER LPAREN RPAREN
          value ::= * IDENTIFIER
          value ::= * LPAREN expression RPAREN
          value ::= * boolean_literal
          boolean_literal ::= * TRUE|FALSE

                    IDENTIFIER shift        110    
                         QUOTE shift        112    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                        LPAREN shift        9      
                           NOT shift        48     
                         MINUS shift        46     
                         TILDE shift        47     
                    OCTLITERAL shift-reduce 61     value ::= OCTLITERAL
                    HEXLITERAL shift-reduce 62     value ::= HEXLITERAL
                 NUMBERLITERAL shift-reduce 63     value ::= NUMBERLITERAL
                   CHARLITERAL shift-reduce 65     value ::= CHARLITERAL
                  FLOATLITERAL shift-reduce 66     value ::= FLOATLITERAL
                       opUnary shift-reduce 53     opMult ::= opMult STAR opUnary
                         value shift-reduce 53     opMult ::= opMult STAR opUnary  /* because value==opUnary */
               boolean_literal shift-reduce 53     opMult ::= opMult STAR opUnary  /* because boolean_literal==value */

State 50:
          block_statement ::= * LBRACKET RBRACKET
          block_statement ::= * LBRACKET statement_list RBRACKET
          forstmt ::= FOR for_init SEMCOL expression SEMCOL for_update * for_block_statement
          for_block_statement ::= * block_statement
          for_block_statement ::= * for_jump_statement
          for_jump_statement ::= * BREAK
          for_jump_statement ::= * BREAK expression
          for_jump_statement ::= * CONTINUE

                         BREAK shift        11     
                      CONTINUE shift-reduce 94     for_jump_statement ::= CONTINUE
                      LBRACKET shift        28     
               block_statement shift-reduce 86     forstmt ::= FOR for_init SEMCOL expression SEMCOL for_update for_block_statement  /* because block_statement==for_block_statement */
           for_block_statement shift-reduce 86     forstmt ::= FOR for_init SEMCOL expression SEMCOL for_update for_block_statement
            for_jump_statement shift-reduce 86     forstmt ::= FOR for_init SEMCOL expression SEMCOL for_update for_block_statement  /* because for_jump_statement==for_block_statement */

State 51:
          block_statement ::= * LBRACKET RBRACKET
          block_statement ::= * LBRACKET statement_list RBRACKET
          proc_definition ::= IDENTIFIER LPAREN RPAREN * proc_statement
          proc_statement ::= * block_statement
          proc_statement ::= * proc_return
          proc_return ::= * RETURN
          proc_return ::= * RETURN expression
    (106) proc_call ::= IDENTIFIER LPAREN RPAREN *

                        RETURN shift        12     
                      LBRACKET shift        28     
               block_statement shift-reduce 102    proc_definition ::= IDENTIFIER LPAREN RPAREN proc_statement  /* because block_statement==proc_statement */
                proc_statement shift-reduce 102    proc_definition ::= IDENTIFIER LPAREN RPAREN proc_statement
                   proc_return shift-reduce 102    proc_definition ::= IDENTIFIER LPAREN RPAREN proc_statement  /* because proc_return==proc_statement */
                     {default} reduce       106    proc_call ::= IDENTIFIER LPAREN RPAREN

State 52:
          block_statement ::= * LBRACKET RBRACKET
          block_statement ::= * LBRACKET statement_list RBRACKET
          proc_definition ::= IDENTIFIER LPAREN variable_declaration_list RPAREN * proc_statement
          proc_statement ::= * block_statement
          proc_statement ::= * proc_return
          proc_return ::= * RETURN
          proc_return ::= * RETURN expression
    (107) proc_call ::= IDENTIFIER LPAREN variable_declaration_list RPAREN *

                        RETURN shift        12     
                      LBRACKET shift        28     
               block_statement shift-reduce 103    proc_definition ::= IDENTIFIER LPAREN variable_declaration_list RPAREN proc_statement  /* because block_statement==proc_statement */
                proc_statement shift-reduce 103    proc_definition ::= IDENTIFIER LPAREN variable_declaration_list RPAREN proc_statement
                   proc_return shift-reduce 103    proc_definition ::= IDENTIFIER LPAREN variable_declaration_list RPAREN proc_statement  /* because proc_return==proc_statement */
                     {default} reduce       107    proc_call ::= IDENTIFIER LPAREN variable_declaration_list RPAREN

State 53:
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER
          variable_declaration ::= * identifier_list ASSIGN type
          variable_declaration ::= * identifier_list ASSIGN type ASSIGN expression
          variable_declaration ::= * identifier_list ASSIGN QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= * identifier_list ASSIGN boolean_literal
          variable_declaration_list ::= * variable_declaration
          variable_declaration_list ::= * variable_declaration_list COMMA variable_declaration
          proc_definition ::= IDENTIFIER LPAREN * RPAREN proc_statement
          proc_definition ::= IDENTIFIER LPAREN * variable_declaration_list RPAREN proc_statement
          proc_call ::= IDENTIFIER LPAREN * RPAREN
          proc_call ::= IDENTIFIER LPAREN * variable_declaration_list RPAREN

                    IDENTIFIER shift-reduce 76     identifier_list ::= IDENTIFIER
                        RPAREN shift        51     
          variable_declaration shift        71       /* because variable_declaration==variable_declaration_list */
               identifier_list shift        72     
     variable_declaration_list shift        71     

State 54:
          boolean_literal ::= * TRUE|FALSE
          type ::= * U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
          variable_declaration ::= identifier_list ASSIGN * type
          variable_declaration ::= identifier_list ASSIGN * type ASSIGN expression
          variable_declaration ::= identifier_list ASSIGN * QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= identifier_list ASSIGN * boolean_literal

                         QUOTE shift        103    
                          TRUE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                         FALSE shift-reduce 72     boolean_literal ::= TRUE|FALSE
                            U8 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           U16 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           U32 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           U64 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                          U128 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                            I8 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           I16 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           I32 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           I64 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                          I128 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           F16 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           F32 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
                           F64 shift-reduce 75     type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64
               boolean_literal shift-reduce 81     variable_declaration ::= identifier_list ASSIGN boolean_literal
                          type shift        105    

State 55:
      (3) program ::= input *
          input ::= input * lines
          lines ::= * block_statement END_OF_LINE|END_OF_FILE
          block_statement ::= * LBRACKET RBRACKET
          block_statement ::= * LBRACKET statement_list RBRACKET

                             $ reduce       3      program ::= input
                      LBRACKET shift        28     
                         lines shift-reduce 5      input ::= input lines
               block_statement shift        86     

State 56:
          identifier_list ::= * IDENTIFIER
          identifier_list ::= * identifier_list COMMA IDENTIFIER
          variable_declaration ::= * identifier_list ASSIGN type
          variable_declaration ::= * identifier_list ASSIGN type ASSIGN expression
          variable_declaration ::= * identifier_list ASSIGN QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= * identifier_list ASSIGN boolean_literal
          variable_declaration_list ::= variable_declaration_list COMMA * variable_declaration

                    IDENTIFIER shift-reduce 76     identifier_list ::= IDENTIFIER
          variable_declaration shift-reduce 101    variable_declaration_list ::= variable_declaration_list COMMA variable_declaration
               identifier_list shift        72     

State 57:
          block_statement ::= * LBRACKET RBRACKET
          block_statement ::= * LBRACKET statement_list RBRACKET
          ifstmt ::= IF expression LBRACKET block_statement RBRACKET ELSE LBRACKET * block_statement RBRACKET

                      LBRACKET shift        28     
               block_statement shift        96     

State 58:
          block_statement ::= * LBRACKET RBRACKET
          block_statement ::= * LBRACKET statement_list RBRACKET
          ifstmt ::= IF expression LBRACKET * block_statement RBRACKET
          ifstmt ::= IF expression LBRACKET * block_statement RBRACKET ELSE LBRACKET block_statement RBRACKET

                      LBRACKET shift        28     
               block_statement shift        99     

State 59:
          opAssign ::= opOr * ASSIGN opAssign
          opAssign ::= opOr * ADD_ASSIGN opAssign
          opAssign ::= opOr * SUB_ASSIGN opAssign
          opAssign ::= opOr * MUL_ASSIGN opAssign
          opAssign ::= opOr * DIV_ASSIGN opAssign
          opAssign ::= opOr * XOR_ASSIGN opAssign
          opAssign ::= opOr * AND_ASSIGN opAssign
          opAssign ::= opOr * OR_ASSIGN opAssign
          opAssign ::= opOr * RIGHT_ASSIGN opAssign
          opAssign ::= opOr * LEFT_ASSIGN opAssign
     (28) opAssign ::= opOr *
          opOr ::= opOr * OR_OP opAnd

                         OR_OP shift        24     
                    DIV_ASSIGN shift        18     
                    ADD_ASSIGN shift        21     
                    SUB_ASSIGN shift        20     
                   LEFT_ASSIGN shift        13     
                  RIGHT_ASSIGN shift        14     
                    AND_ASSIGN shift        16     
                    XOR_ASSIGN shift        17     
                     OR_ASSIGN shift        15     
                        ASSIGN shift        22     
                    MUL_ASSIGN shift        19     
                     {default} reduce       28     opAssign ::= opOr

State 60:
     (41) opEquate ::= opCompare *
          opCompare ::= opCompare * LT opShift
          opCompare ::= opCompare * GT opShift
          opCompare ::= opCompare * LE_OP opShift
          opCompare ::= opCompare * GE_OP opShift

                            GT shift        37     
                            LT shift        38     
                         LE_OP shift        36     
                         GE_OP shift        35     
                     {default} reduce       41     opEquate ::= opCompare

State 61:
     (40) opEquate ::= opEquate NE_OP opCompare *
          opCompare ::= opCompare * LT opShift
          opCompare ::= opCompare * GT opShift
          opCompare ::= opCompare * LE_OP opShift
          opCompare ::= opCompare * GE_OP opShift

                            GT shift        37     
                            LT shift        38     
                         LE_OP shift        36     
                         GE_OP shift        35     
                     {default} reduce       40     opEquate ::= opEquate NE_OP opCompare

State 62:
     (39) opEquate ::= opEquate EQ_OP opCompare *
          opCompare ::= opCompare * LT opShift
          opCompare ::= opCompare * GT opShift
          opCompare ::= opCompare * LE_OP opShift
          opCompare ::= opCompare * GE_OP opShift

                            GT shift        37     
                            LT shift        38     
                         LE_OP shift        36     
                         GE_OP shift        35     
                     {default} reduce       39     opEquate ::= opEquate EQ_OP opCompare

State 63:
     (52) opAdd ::= opMult *
          opMult ::= opMult * STAR opUnary
          opMult ::= opMult * DIV opUnary
          opMult ::= opMult * MOD opUnary

                           DIV shift        45     
                           MOD shift        44     
                          STAR shift        49     
                     {default} reduce       52     opAdd ::= opMult

State 64:
     (51) opAdd ::= opAdd MINUS opMult *
          opMult ::= opMult * STAR opUnary
          opMult ::= opMult * DIV opUnary
          opMult ::= opMult * MOD opUnary

                           DIV shift        45     
                           MOD shift        44     
                          STAR shift        49     
                     {default} reduce       51     opAdd ::= opAdd MINUS opMult

State 65:
     (50) opAdd ::= opAdd PLUS opMult *
          opMult ::= opMult * STAR opUnary
          opMult ::= opMult * DIV opUnary
          opMult ::= opMult * MOD opUnary

                           DIV shift        45     
                           MOD shift        44     
                          STAR shift        49     
                     {default} reduce       50     opAdd ::= opAdd PLUS opMult

State 66:
          expression ::= expression * COMMA opAssign
          switch_block ::= expression * LBRACKET switch_case_block RBRACKET

                      LBRACKET shift        27     
                         COMMA shift        23     

State 67:
          expression ::= expression * COMMA opAssign
          switchstmt ::= SWITCH expression * LBRACKET switch_block RBRACKET

                      LBRACKET shift        2      
                         COMMA shift        23     

State 68:
          expression ::= expression * COMMA opAssign
          forstmt ::= FOR for_init SEMCOL expression * SEMCOL for_update for_block_statement

                        SEMCOL shift        3      
                         COMMA shift        23     

State 69:
          expression ::= expression * COMMA opAssign
          ifstmt ::= IF expression * LBRACKET block_statement RBRACKET
          ifstmt ::= IF expression * LBRACKET block_statement RBRACKET ELSE LBRACKET block_statement RBRACKET

                      LBRACKET shift        58     
                         COMMA shift        23     

State 70:
          identifier_list ::= identifier_list * COMMA IDENTIFIER
          variable_declaration ::= identifier_list * ASSIGN type
          variable_declaration ::= identifier_list * ASSIGN type ASSIGN expression
          variable_declaration ::= identifier_list * ASSIGN QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= identifier_list * ASSIGN boolean_literal
          variable_assignment ::= identifier_list * ASSIGN identifier_list

                         COMMA shift        106    
                        ASSIGN shift        43     

State 71:
          variable_declaration_list ::= variable_declaration_list * COMMA variable_declaration
          proc_definition ::= IDENTIFIER LPAREN variable_declaration_list * RPAREN proc_statement
          proc_call ::= IDENTIFIER LPAREN variable_declaration_list * RPAREN

                        RPAREN shift        52     
                         COMMA shift        56     

State 72:
          identifier_list ::= identifier_list * COMMA IDENTIFIER
          variable_declaration ::= identifier_list * ASSIGN type
          variable_declaration ::= identifier_list * ASSIGN type ASSIGN expression
          variable_declaration ::= identifier_list * ASSIGN QUOTE STRING_LITERAL QUOTE
          variable_declaration ::= identifier_list * ASSIGN boolean_literal

                         COMMA shift        106    
                        ASSIGN shift        54     

State 73:
     (46) opCompare ::= opShift *
          opShift ::= opShift * LEFT_OP opAdd
          opShift ::= opShift * RIGHT_OP opAdd

                       LEFT_OP shift        40     
                      RIGHT_OP shift        39     
                     {default} reduce       46     opCompare ::= opShift

State 74:
     (45) opCompare ::= opCompare GE_OP opShift *
          opShift ::= opShift * LEFT_OP opAdd
          opShift ::= opShift * RIGHT_OP opAdd

                       LEFT_OP shift        40     
                      RIGHT_OP shift        39     
                     {default} reduce       45     opCompare ::= opCompare GE_OP opShift

State 75:
     (49) opShift ::= opAdd *
          opAdd ::= opAdd * PLUS opMult
          opAdd ::= opAdd * MINUS opMult

                          PLUS shift        42     
                         MINUS shift        41     
                     {default} reduce       49     opShift ::= opAdd

State 76:
     (44) opCompare ::= opCompare LE_OP opShift *
          opShift ::= opShift * LEFT_OP opAdd
          opShift ::= opShift * RIGHT_OP opAdd

                       LEFT_OP shift        40     
                      RIGHT_OP shift        39     
                     {default} reduce       44     opCompare ::= opCompare LE_OP opShift

State 77:
          expression ::= expression * COMMA opAssign
          value ::= LPAREN expression * RPAREN

                        RPAREN shift-reduce 70     value ::= LPAREN expression RPAREN
                         COMMA shift        23     

State 78:
     (48) opShift ::= opShift RIGHT_OP opAdd *
          opAdd ::= opAdd * PLUS opMult
          opAdd ::= opAdd * MINUS opMult

                          PLUS shift        42     
                         MINUS shift        41     
                     {default} reduce       48     opShift ::= opShift RIGHT_OP opAdd

State 79:
     (43) opCompare ::= opCompare GT opShift *
          opShift ::= opShift * LEFT_OP opAdd
          opShift ::= opShift * RIGHT_OP opAdd

                       LEFT_OP shift        40     
                      RIGHT_OP shift        39     
                     {default} reduce       43     opCompare ::= opCompare GT opShift

State 80:
     (38) opBinAND ::= opEquate *
          opEquate ::= opEquate * EQ_OP opCompare
          opEquate ::= opEquate * NE_OP opCompare

                         EQ_OP shift        34     
                         NE_OP shift        33     
                     {default} reduce       38     opBinAND ::= opEquate

State 81:
          expression ::= expression * COMMA opAssign
          value ::= IDENTIFIER LPAREN expression * RPAREN

                        RPAREN shift-reduce 67     value ::= IDENTIFIER LPAREN expression RPAREN
                         COMMA shift        23     

State 82:
     (47) opShift ::= opShift LEFT_OP opAdd *
          opAdd ::= opAdd * PLUS opMult
          opAdd ::= opAdd * MINUS opMult

                          PLUS shift        42     
                         MINUS shift        41     
                     {default} reduce       47     opShift ::= opShift LEFT_OP opAdd

State 83:
     (42) opCompare ::= opCompare LT opShift *
          opShift ::= opShift * LEFT_OP opAdd
          opShift ::= opShift * RIGHT_OP opAdd

                       LEFT_OP shift        40     
                      RIGHT_OP shift        39     
                     {default} reduce       42     opCompare ::= opCompare LT opShift

State 84:
     (37) opBinAND ::= opBinAND REF opEquate *
          opEquate ::= opEquate * EQ_OP opCompare
          opEquate ::= opEquate * NE_OP opCompare

                         EQ_OP shift        34     
                         NE_OP shift        33     
                     {default} reduce       37     opBinAND ::= opBinAND REF opEquate

State 85:
     (76) identifier_list ::= IDENTIFIER *
          variable_assignment ::= IDENTIFIER * ASSIGN expression
          proc_definition ::= IDENTIFIER * LPAREN RPAREN proc_statement
          proc_definition ::= IDENTIFIER * LPAREN variable_declaration_list RPAREN proc_statement
          proc_call ::= IDENTIFIER * LPAREN RPAREN
          proc_call ::= IDENTIFIER * LPAREN variable_declaration_list RPAREN

                        LPAREN shift        53     
                        ASSIGN shift        10     
                        ASSIGN reduce       76      ** Parsing conflict **
                     {default} reduce       76     identifier_list ::= IDENTIFIER

State 86:
          lines ::= block_statement * END_OF_LINE|END_OF_FILE

                   END_OF_LINE shift-reduce 0      lines ::= block_statement END_OF_LINE|END_OF_FILE
                   END_OF_FILE shift-reduce 0      lines ::= block_statement END_OF_LINE|END_OF_FILE

State 87:
          switch_block ::= DEFAULT LBRACKET statement * RBRACKET

                      RBRACKET shift-reduce 97     switch_block ::= DEFAULT LBRACKET statement RBRACKET

State 88:
          switch_block ::= DEFAULT * LBRACKET statement RBRACKET

                      LBRACKET shift        30     

State 89:
          switchstmt ::= SWITCH expression LBRACKET switch_block * RBRACKET

                      RBRACKET shift-reduce 95     switchstmt ::= SWITCH expression LBRACKET switch_block RBRACKET

State 90:
          switch_block ::= expression LBRACKET switch_case_block * RBRACKET

                      RBRACKET shift-reduce 96     switch_block ::= expression LBRACKET switch_case_block RBRACKET

State 91:
          expression ::= expression * COMMA opAssign
     (93) for_jump_statement ::= BREAK expression *

                         COMMA shift        23     
                     {default} reduce       93     for_jump_statement ::= BREAK expression

State 92:
          expression ::= expression * COMMA opAssign
     (89) for_update ::= expression *

                         COMMA shift        23     
                     {default} reduce       89     for_update ::= expression

State 93:
          forstmt ::= FOR for_init * SEMCOL expression SEMCOL for_update for_block_statement

                        SEMCOL shift        6      

State 94:
          value ::= IDENTIFIER * LPAREN expression RPAREN
          value ::= IDENTIFIER * LPAREN RPAREN
     (69) value ::= IDENTIFIER *
     (76) identifier_list ::= IDENTIFIER *

                        LPAREN shift        4      
                         COMMA reduce       76      ** Parsing conflict **
                        ASSIGN reduce       76      ** Parsing conflict **
                     {default} reduce       69     value ::= IDENTIFIER

State 95:
          expression ::= expression * COMMA opAssign
     (87) for_init ::= expression *

                         COMMA shift        23     
                     {default} reduce       87     for_init ::= expression

State 96:
          ifstmt ::= IF expression LBRACKET block_statement RBRACKET ELSE LBRACKET block_statement * RBRACKET

                      RBRACKET shift-reduce 85     ifstmt ::= IF expression LBRACKET block_statement RBRACKET ELSE LBRACKET block_statement RBRACKET

State 97:
          ifstmt ::= IF expression LBRACKET block_statement RBRACKET ELSE * LBRACKET block_statement RBRACKET

                      LBRACKET shift        57     

State 98:
     (84) ifstmt ::= IF expression LBRACKET block_statement RBRACKET *
          ifstmt ::= IF expression LBRACKET block_statement RBRACKET * ELSE LBRACKET block_statement RBRACKET

                          ELSE shift        97     
                     {default} reduce       84     ifstmt ::= IF expression LBRACKET block_statement RBRACKET

State 99:
          ifstmt ::= IF expression LBRACKET block_statement * RBRACKET
          ifstmt ::= IF expression LBRACKET block_statement * RBRACKET ELSE LBRACKET block_statement RBRACKET

                      RBRACKET shift        98     

State 100:
          identifier_list ::= identifier_list * COMMA IDENTIFIER
     (83) variable_assignment ::= identifier_list ASSIGN identifier_list *

                         COMMA shift        106    
                     {default} reduce       83     variable_assignment ::= identifier_list ASSIGN identifier_list

State 101:
          expression ::= expression * COMMA opAssign
      (2) proc_return ::= RETURN expression *

                         COMMA shift        23     
                     {default} reduce       2      proc_return ::= RETURN expression

State 102:
          variable_declaration ::= identifier_list ASSIGN QUOTE STRING_LITERAL * QUOTE

                         QUOTE shift-reduce 80     variable_declaration ::= identifier_list ASSIGN QUOTE STRING_LITERAL QUOTE

State 103:
          variable_declaration ::= identifier_list ASSIGN QUOTE * STRING_LITERAL QUOTE

                STRING_LITERAL shift        102    

State 104:
          expression ::= expression * COMMA opAssign
     (79) variable_declaration ::= identifier_list ASSIGN type ASSIGN expression *

                         COMMA shift        23     
                         COMMA reduce       79      ** Parsing conflict **
                     {default} reduce       79     variable_declaration ::= identifier_list ASSIGN type ASSIGN expression

State 105:
     (78) variable_declaration ::= identifier_list ASSIGN type *
          variable_declaration ::= identifier_list ASSIGN type * ASSIGN expression

                        ASSIGN shift        8      
                     {default} reduce       78     variable_declaration ::= identifier_list ASSIGN type

State 106:
          identifier_list ::= identifier_list COMMA * IDENTIFIER

                    IDENTIFIER shift-reduce 77     identifier_list ::= identifier_list COMMA IDENTIFIER

State 107:
     (29) opOr ::= opOr OR_OP opAnd *
          opAnd ::= opAnd * AND_OP opBinOR

                        AND_OP shift        26     
                     {default} reduce       29     opOr ::= opOr OR_OP opAnd

State 108:
     (36) opBinXOR ::= opBinAND *
          opBinAND ::= opBinAND * REF opEquate

                           REF shift        32     
                     {default} reduce       36     opBinXOR ::= opBinAND

State 109:
     (32) opAnd ::= opBinOR *
          opBinOR ::= opBinOR * PIPE opBinOR

                          PIPE shift        25     
                     {default} reduce       32     opAnd ::= opBinOR

State 110:
          value ::= IDENTIFIER * LPAREN expression RPAREN
          value ::= IDENTIFIER * LPAREN RPAREN
     (69) value ::= IDENTIFIER *

                        LPAREN shift        4      
                     {default} reduce       69     value ::= IDENTIFIER

State 111:
          value ::= QUOTE STRINGLITERAL * QUOTE

                         QUOTE shift-reduce 64     value ::= QUOTE STRINGLITERAL QUOTE

State 112:
          value ::= QUOTE * STRINGLITERAL QUOTE

                 STRINGLITERAL shift        111    

State 113:
     (35) opBinXOR ::= opBinXOR XOR opBinAND *
          opBinAND ::= opBinAND * REF opEquate

                           REF shift        32     
                     {default} reduce       35     opBinXOR ::= opBinXOR XOR opBinAND

State 114:
     (34) opBinOR ::= opBinXOR *
          opBinXOR ::= opBinXOR * XOR opBinAND

                           XOR shift        31     
                     {default} reduce       34     opBinOR ::= opBinXOR

State 115:
          opBinOR ::= opBinOR * PIPE opBinOR
     (33) opBinOR ::= opBinOR PIPE opBinOR *

                          PIPE shift        25     
                          PIPE reduce       33      ** Parsing conflict **
                     {default} reduce       33     opBinOR ::= opBinOR PIPE opBinOR

State 116:
     (31) opAnd ::= opAnd AND_OP opBinOR *
          opBinOR ::= opBinOR * PIPE opBinOR

                          PIPE shift        25     
                     {default} reduce       31     opAnd ::= opAnd AND_OP opBinOR

State 117:
     (30) opOr ::= opAnd *
          opAnd ::= opAnd * AND_OP opBinOR

                        AND_OP shift        26     
                     {default} reduce       30     opOr ::= opAnd

State 118:
          expression ::= expression * COMMA opAssign
     (82) variable_assignment ::= IDENTIFIER ASSIGN expression *

                         COMMA shift        23     
                     {default} reduce       82     variable_assignment ::= IDENTIFIER ASSIGN expression

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: IDENTIFIER (precedence=1)
    2: NUMBER_LITERAL (precedence=1)
    3: STRING_LITERAL (precedence=1)
    4: QUOTE (precedence=1)
    5: SEMCOL (precedence=1)
    6: IF (precedence=2)
    7: ELSE (precedence=2)
    8: TRUE (precedence=2)
    9: FALSE (precedence=2)
   10: FOR (precedence=2)
   11: SWITCH (precedence=2)
   12: RETURN (precedence=2)
   13: BREAK (precedence=2)
   14: CONTINUE (precedence=2)
   15: FALLTHROUGH (precedence=2)
   16: DEFAULT (precedence=2)
   17: EQ (precedence=3)
   18: NE (precedence=3)
   19: GT (precedence=3)
   20: GE (precedence=3)
   21: LT (precedence=3)
   22: LE (precedence=3)
   23: PTR_OP (precedence=4)
   24: INC_OP (precedence=4)
   25: DEC_OP (precedence=4)
   26: LEFT_OP (precedence=4)
   27: RIGHT_OP (precedence=4)
   28: LE_OP (precedence=4)
   29: GE_OP (precedence=4)
   30: EQ_OP (precedence=4)
   31: NE_OP (precedence=4)
   32: AND_OP (precedence=5)
   33: OR_OP (precedence=5)
   34: STAR_ASSIGN (precedence=5)
   35: DIV_ASSIGN (precedence=5)
   36: MOD_ASSIGN (precedence=5)
   37: ADD_ASSIGN (precedence=5)
   38: SUB_ASSIGN (precedence=6)
   39: LEFT_ASSIGN (precedence=6)
   40: RIGHT_ASSIGN (precedence=6)
   41: AND_ASSIGN (precedence=6)
   42: XOR_ASSIGN (precedence=7)
   43: OR_ASSIGN (precedence=7)
   44: TYPE_NAME (precedence=7)
   45: AND (precedence=8)
   46: OR (precedence=9)
   47: ADD (precedence=10)
   48: SUB (precedence=10)
   49: MUL (precedence=11)
   50: DIV (precedence=11)
   51: MOD (precedence=11)
   52: POS (precedence=12)
   53: NEG (precedence=12)
   54: LBRACKET (precedence=13)
   55: RBRACKET (precedence=13)
   56: LPAREN (precedence=13)
   57: RPAREN (precedence=13)
   58: EXP (precedence=14)
   59: NOT (precedence=14)
   60: END_OF_LINE
   61: END_OF_FILE
   62: COMMA
   63: ASSIGN
   64: MUL_ASSIGN
   65: PIPE
   66: XOR
   67: REF
   68: PLUS
   69: MINUS
   70: STAR
   71: TILDE
   72: OCTLITERAL
   73: HEXLITERAL
   74: NUMBERLITERAL
   75: STRINGLITERAL
   76: CHARLITERAL
   77: FLOATLITERAL
   78: U8
   79: U16
   80: U32
   81: U64
   82: U128
   83: I8
   84: I16
   85: I32
   86: I64
   87: I128
   88: F16
   89: F32
   90: F64
   91: program: <lambda> LBRACKET
   92: input: <lambda> LBRACKET
   93: lines: LBRACKET
   94: block_statement: LBRACKET
   95: statement_list: IDENTIFIER IF FOR SWITCH
   96: statement: IDENTIFIER IF FOR SWITCH
   97: variable: IDENTIFIER
   98: ifstmt: IF
   99: forstmt: FOR
  100: switchstmt: SWITCH
  101: proc_definition: IDENTIFIER
  102: proc_call: IDENTIFIER
  103: expression: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  104: opAssign: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  105: opOr: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  106: opAnd: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  107: opBinOR: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  108: opBinXOR: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  109: opBinAND: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  110: opEquate: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  111: opCompare: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  112: opShift: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  113: opAdd: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  114: opMult: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  115: opUnary: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  116: value: IDENTIFIER QUOTE TRUE FALSE LPAREN OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  117: boolean_literal: TRUE FALSE
  118: variable_declaration: IDENTIFIER
  119: variable_assignment: IDENTIFIER
  120: type: U8 U16 U32 U64 U128 I8 I16 I32 I64 I128 F16 F32 F64
  121: identifier_list: IDENTIFIER
  122: for_init: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  123: for_update: IDENTIFIER QUOTE TRUE FALSE LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  124: for_block_statement: BREAK CONTINUE LBRACKET
  125: for_jump_statement: BREAK CONTINUE
  126: switch_block: IDENTIFIER QUOTE TRUE FALSE DEFAULT LPAREN NOT MINUS TILDE OCTLITERAL HEXLITERAL NUMBERLITERAL CHARLITERAL FLOATLITERAL
  127: switch_case_block: IDENTIFIER IF FOR SWITCH FALLTHROUGH
  128: variable_declaration_list: IDENTIFIER
  129: proc_statement: RETURN LBRACKET
  130: proc_return: RETURN
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ IDENTIFIER NUMBER_LITERAL STRING_LITERAL QUOTE SEMCOL IF ELSE TRUE FALSE
FOR SWITCH RETURN BREAK CONTINUE FALLTHROUGH DEFAULT EQ NE GT GE LT LE
PTR_OP INC_OP DEC_OP LEFT_OP RIGHT_OP LE_OP GE_OP EQ_OP NE_OP AND_OP OR_OP
STAR_ASSIGN DIV_ASSIGN MOD_ASSIGN ADD_ASSIGN SUB_ASSIGN LEFT_ASSIGN
RIGHT_ASSIGN AND_ASSIGN XOR_ASSIGN OR_ASSIGN TYPE_NAME AND OR ADD SUB MUL
DIV MOD POS NEG LBRACKET RBRACKET LPAREN RPAREN EXP NOT END_OF_LINE
END_OF_FILE COMMA ASSIGN MUL_ASSIGN PIPE XOR REF PLUS MINUS STAR TILDE
OCTLITERAL HEXLITERAL NUMBERLITERAL STRINGLITERAL CHARLITERAL FLOATLITERAL
U8 U16 U32 U64 U128 I8 I16 I32 I64 I128 F16 F32 F64 program input lines
block_statement statement_list statement variable ifstmt forstmt switchstmt
proc_definition proc_call expression opAssign opOr opAnd opBinOR opBinXOR
opBinAND opEquate opCompare opShift opAdd opMult opUnary value
boolean_literal variable_declaration variable_assignment type
identifier_list for_init for_update for_block_statement for_jump_statement
switch_block switch_case_block variable_declaration_list proc_statement
proc_return
----------------------------------------------------
Rules:
   0: lines ::= block_statement END_OF_LINE|END_OF_FILE.
   1: proc_return ::= RETURN. [RETURN precedence=2]
   2: proc_return ::= RETURN expression. [RETURN precedence=2]
   3: program ::= input.
   4: input ::=.
   5: input ::= input lines.
   6: block_statement ::= LBRACKET RBRACKET. [LBRACKET precedence=13]
   7: block_statement ::= LBRACKET statement_list RBRACKET. [LBRACKET precedence=13]
   8: statement_list ::= statement.
   9: statement_list ::= statement_list statement.
  10: statement ::= variable.
  11: statement ::= ifstmt.
  12: statement ::= forstmt.
  13: statement ::= switchstmt.
  14: statement ::= proc_definition.
  15: statement ::= proc_call.
  16: expression ::= expression COMMA opAssign.
  17: expression ::= opAssign.
  18: opAssign ::= opOr ASSIGN opAssign.
  19: opAssign ::= opOr ADD_ASSIGN opAssign. [ADD_ASSIGN precedence=5]
  20: opAssign ::= opOr SUB_ASSIGN opAssign. [SUB_ASSIGN precedence=6]
  21: opAssign ::= opOr MUL_ASSIGN opAssign.
  22: opAssign ::= opOr DIV_ASSIGN opAssign. [DIV_ASSIGN precedence=5]
  23: opAssign ::= opOr XOR_ASSIGN opAssign. [XOR_ASSIGN precedence=7]
  24: opAssign ::= opOr AND_ASSIGN opAssign. [AND_ASSIGN precedence=6]
  25: opAssign ::= opOr OR_ASSIGN opAssign. [OR_ASSIGN precedence=7]
  26: opAssign ::= opOr RIGHT_ASSIGN opAssign. [RIGHT_ASSIGN precedence=6]
  27: opAssign ::= opOr LEFT_ASSIGN opAssign. [LEFT_ASSIGN precedence=6]
  28: opAssign ::= opOr.
  29: opOr ::= opOr OR_OP opAnd. [OR_OP precedence=5]
  30: opOr ::= opAnd.
  31: opAnd ::= opAnd AND_OP opBinOR. [AND_OP precedence=5]
  32: opAnd ::= opBinOR.
  33: opBinOR ::= opBinOR PIPE opBinOR.
  34: opBinOR ::= opBinXOR.
  35: opBinXOR ::= opBinXOR XOR opBinAND.
  36: opBinXOR ::= opBinAND.
  37: opBinAND ::= opBinAND REF opEquate.
  38: opBinAND ::= opEquate.
  39: opEquate ::= opEquate EQ_OP opCompare. [EQ_OP precedence=4]
  40: opEquate ::= opEquate NE_OP opCompare. [NE_OP precedence=4]
  41: opEquate ::= opCompare.
  42: opCompare ::= opCompare LT opShift. [LT precedence=3]
  43: opCompare ::= opCompare GT opShift. [GT precedence=3]
  44: opCompare ::= opCompare LE_OP opShift. [LE_OP precedence=4]
  45: opCompare ::= opCompare GE_OP opShift. [GE_OP precedence=4]
  46: opCompare ::= opShift.
  47: opShift ::= opShift LEFT_OP opAdd. [LEFT_OP precedence=4]
  48: opShift ::= opShift RIGHT_OP opAdd. [RIGHT_OP precedence=4]
  49: opShift ::= opAdd.
  50: opAdd ::= opAdd PLUS opMult.
  51: opAdd ::= opAdd MINUS opMult.
  52: opAdd ::= opMult.
  53: opMult ::= opMult STAR opUnary.
  54: opMult ::= opMult DIV opUnary. [DIV precedence=11]
  55: opMult ::= opMult MOD opUnary. [MOD precedence=11]
  56: opMult ::= opUnary.
  57: opUnary ::= NOT opUnary. [NOT precedence=14]
  58: opUnary ::= TILDE opUnary.
  59: opUnary ::= MINUS opUnary.
  60: opUnary ::= value.
  61: value ::= OCTLITERAL.
  62: value ::= HEXLITERAL.
  63: value ::= NUMBERLITERAL.
  64: value ::= QUOTE STRINGLITERAL QUOTE. [QUOTE precedence=1]
  65: value ::= CHARLITERAL.
  66: value ::= FLOATLITERAL.
  67: value ::= IDENTIFIER LPAREN expression RPAREN. [IDENTIFIER precedence=1]
  68: value ::= IDENTIFIER LPAREN RPAREN. [IDENTIFIER precedence=1]
  69: value ::= IDENTIFIER. [IDENTIFIER precedence=1]
  70: value ::= LPAREN expression RPAREN. [LPAREN precedence=13]
  71: value ::= boolean_literal.
  72: boolean_literal ::= TRUE|FALSE. [TRUE precedence=2]
  73: variable ::= variable_declaration.
  74: variable ::= variable_assignment.
  75: type ::= U8|U16|U32|U64|U128|I8|I16|I32|I64|I128|F16|F32|F64.
  76: identifier_list ::= IDENTIFIER. [IDENTIFIER precedence=1]
  77: identifier_list ::= identifier_list COMMA IDENTIFIER. [IDENTIFIER precedence=1]
  78: variable_declaration ::= identifier_list ASSIGN type.
  79: variable_declaration ::= identifier_list ASSIGN type ASSIGN expression.
  80: variable_declaration ::= identifier_list ASSIGN QUOTE STRING_LITERAL QUOTE. [QUOTE precedence=1]
  81: variable_declaration ::= identifier_list ASSIGN boolean_literal.
  82: variable_assignment ::= IDENTIFIER ASSIGN expression. [IDENTIFIER precedence=1]
  83: variable_assignment ::= identifier_list ASSIGN identifier_list.
  84: ifstmt ::= IF expression LBRACKET block_statement RBRACKET. [IF precedence=2]
  85: ifstmt ::= IF expression LBRACKET block_statement RBRACKET ELSE LBRACKET block_statement RBRACKET. [IF precedence=2]
  86: forstmt ::= FOR for_init SEMCOL expression SEMCOL for_update for_block_statement. [FOR precedence=2]
  87: for_init ::= expression.
  88: for_init ::= variable_declaration.
  89: for_update ::= expression.
  90: for_block_statement ::= block_statement.
  91: for_block_statement ::= for_jump_statement.
  92: for_jump_statement ::= BREAK. [BREAK precedence=2]
  93: for_jump_statement ::= BREAK expression. [BREAK precedence=2]
  94: for_jump_statement ::= CONTINUE. [CONTINUE precedence=2]
  95: switchstmt ::= SWITCH expression LBRACKET switch_block RBRACKET. [SWITCH precedence=2]
  96: switch_block ::= expression LBRACKET switch_case_block RBRACKET. [LBRACKET precedence=13]
  97: switch_block ::= DEFAULT LBRACKET statement RBRACKET. [DEFAULT precedence=2]
  98: switch_case_block ::= FALLTHROUGH. [FALLTHROUGH precedence=2]
  99: switch_case_block ::= statement.
 100: variable_declaration_list ::= variable_declaration.
 101: variable_declaration_list ::= variable_declaration_list COMMA variable_declaration.
 102: proc_definition ::= IDENTIFIER LPAREN RPAREN proc_statement. [IDENTIFIER precedence=1]
 103: proc_definition ::= IDENTIFIER LPAREN variable_declaration_list RPAREN proc_statement. [IDENTIFIER precedence=1]
 104: proc_statement ::= block_statement.
 105: proc_statement ::= proc_return.
 106: proc_call ::= IDENTIFIER LPAREN RPAREN. [IDENTIFIER precedence=1]
 107: proc_call ::= IDENTIFIER LPAREN variable_declaration_list RPAREN. [IDENTIFIER precedence=1]
